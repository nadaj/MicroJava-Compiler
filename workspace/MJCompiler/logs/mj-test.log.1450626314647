INFO  16:43:33,550 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  16:43:33,555 - #2 program
INFO  16:43:33,555 - #3 Program
INFO  16:43:33,555 - #6 const
INFO  16:43:33,555 - #3 int
INFO  16:43:33,555 - #3 N
INFO  16:43:33,555 - #8 =
INFO  16:43:33,555 - #9 2
INFO  16:43:33,555 - #7 ;
INFO  16:43:33,555 - #6 const
INFO  16:43:33,555 - #3 char
INFO  16:43:33,556 - #3 c
INFO  16:43:33,556 - #8 =
INFO  16:43:33,556 - #10 a
INFO  16:43:33,556 - #7 ;
INFO  16:43:33,556 - #6 const
INFO  16:43:33,556 - #3 bool
INFO  16:43:33,556 - #3 flag
INFO  16:43:33,556 - #8 =
INFO  16:43:33,556 - #11 true
INFO  16:43:33,556 - #7 ;
INFO  16:43:33,556 - #6 const
INFO  16:43:33,556 - #3 string
INFO  16:43:33,556 - #3 s
INFO  16:43:33,557 - #8 =
INFO  16:43:33,557 - #12 ispravan ulaz
INFO  16:43:33,557 - #7 ;
INFO  16:43:33,557 - #3 int
INFO  16:43:33,557 - #3 globalna_pr
INFO  16:43:33,557 - #13 ,
INFO  16:43:33,557 - #3 glob_niz
INFO  16:43:33,557 - #14 [
INFO  16:43:33,557 - #15 ]
INFO  16:43:33,557 - #7 ;
INFO  16:43:33,557 - #3 bool
INFO  16:43:33,558 - #3 flag_global
INFO  16:43:33,558 - #7 ;
INFO  16:43:33,558 - #3 char
INFO  16:43:33,558 - #3 char_global
INFO  16:43:33,558 - #7 ;
INFO  16:43:33,558 - #16 class
INFO  16:43:33,558 - #3 A
INFO  16:43:33,558 - #4 {
INFO  16:43:33,558 - #5 }
INFO  16:43:33,558 - #16 class
INFO  16:43:33,559 - #3 B
INFO  16:43:33,559 - #17 extends
INFO  16:43:33,559 - #3 A
INFO  16:43:33,559 - #4 {
INFO  16:43:33,559 - #5 }
INFO  16:43:33,559 - #16 class
INFO  16:43:33,559 - #3 C
INFO  16:43:33,559 - #4 {
INFO  16:43:33,559 - #3 int
INFO  16:43:33,559 - #3 c_int
INFO  16:43:33,559 - #13 ,
INFO  16:43:33,559 - #3 c_arr
INFO  16:43:33,559 - #14 [
INFO  16:43:33,559 - #15 ]
INFO  16:43:33,559 - #7 ;
INFO  16:43:33,559 - #3 bool
INFO  16:43:33,559 - #3 c_bool
INFO  16:43:33,559 - #7 ;
INFO  16:43:33,560 - #3 char
INFO  16:43:33,560 - #3 c_char
INFO  16:43:33,560 - #7 ;
INFO  16:43:33,560 - #5 }
INFO  16:43:33,560 - #16 class
INFO  16:43:33,560 - #3 D
INFO  16:43:33,560 - #17 extends
INFO  16:43:33,560 - #3 C
INFO  16:43:33,560 - #4 {
INFO  16:43:33,560 - #3 int
INFO  16:43:33,560 - #3 d_int
INFO  16:43:33,560 - #13 ,
INFO  16:43:33,560 - #3 d_arr
INFO  16:43:33,560 - #14 [
INFO  16:43:33,560 - #15 ]
INFO  16:43:33,560 - #7 ;
INFO  16:43:33,560 - #3 bool
INFO  16:43:33,560 - #3 d_bool
INFO  16:43:33,560 - #7 ;
INFO  16:43:33,560 - #3 char
INFO  16:43:33,561 - #3 d_char
INFO  16:43:33,561 - #7 ;
INFO  16:43:33,561 - #5 }
INFO  16:43:33,561 - #16 class
INFO  16:43:33,561 - #3 E
INFO  16:43:33,561 - #4 {
INFO  16:43:33,561 - #3 int
INFO  16:43:33,561 - #3 e_int
INFO  16:43:33,561 - #13 ,
INFO  16:43:33,561 - #3 e_arr
INFO  16:43:33,561 - #14 [
INFO  16:43:33,561 - #15 ]
INFO  16:43:33,561 - #7 ;
INFO  16:43:33,561 - #3 bool
INFO  16:43:33,561 - #3 e_bool
INFO  16:43:33,561 - #7 ;
INFO  16:43:33,561 - #3 char
INFO  16:43:33,561 - #3 e_char
INFO  16:43:33,562 - #7 ;
INFO  16:43:33,562 - #4 {
INFO  16:43:33,562 - #18 void
INFO  16:43:33,562 - #3 a
INFO  16:43:33,562 - #19 (
INFO  16:43:33,562 - #20 )
INFO  16:43:33,562 - #4 {
INFO  16:43:33,562 - #26 return
INFO  16:43:33,562 - #9 0
INFO  16:43:33,562 - #7 ;
INFO  16:43:33,562 - #5 }
INFO  16:43:33,562 - #3 int
INFO  16:43:33,562 - #3 b
INFO  16:43:33,562 - #19 (
INFO  16:43:33,562 - #20 )
INFO  16:43:33,562 - #4 {
INFO  16:43:33,562 - #26 return
INFO  16:43:33,563 - #9 0
INFO  16:43:33,563 - #7 ;
INFO  16:43:33,563 - #5 }
INFO  16:43:33,563 - #5 }
INFO  16:43:33,563 - #5 }
INFO  16:43:33,563 - #16 class
INFO  16:43:33,563 - #3 F
INFO  16:43:33,563 - #17 extends
INFO  16:43:33,563 - #3 E
INFO  16:43:33,563 - #4 {
INFO  16:43:33,563 - #3 int
INFO  16:43:33,563 - #3 f_int
INFO  16:43:33,563 - #13 ,
INFO  16:43:33,563 - #3 f_arr
INFO  16:43:33,563 - #14 [
INFO  16:43:33,563 - #15 ]
INFO  16:43:33,564 - #7 ;
INFO  16:43:33,564 - #3 bool
INFO  16:43:33,564 - #3 f_bool
INFO  16:43:33,564 - #7 ;
INFO  16:43:33,564 - #3 char
INFO  16:43:33,564 - #3 f_char
INFO  16:43:33,564 - #7 ;
INFO  16:43:33,564 - #3 string
INFO  16:43:33,564 - #3 string_f
INFO  16:43:33,564 - #7 ;
INFO  16:43:33,564 - #4 {
INFO  16:43:33,564 - #18 void
INFO  16:43:33,564 - #3 set_f
INFO  16:43:33,564 - #19 (
INFO  16:43:33,564 - #3 int
INFO  16:43:33,564 - #3 s
INFO  16:43:33,564 - #20 )
INFO  16:43:33,564 - #3 int
INFO  16:43:33,564 - #3 af_a
INFO  16:43:33,564 - #7 ;
INFO  16:43:33,565 - #4 {
INFO  16:43:33,565 - #23 if
INFO  16:43:33,565 - #19 (
INFO  16:43:33,565 - #3 s
INFO  16:43:33,565 - #35 ==
INFO  16:43:33,565 - #9 1
INFO  16:43:33,565 - #20 )
INFO  16:43:33,565 - #4 {
INFO  16:43:33,565 - #3 af_a
INFO  16:43:33,565 - #8 =
INFO  16:43:33,565 - #9 1
INFO  16:43:33,565 - #7 ;
INFO  16:43:33,565 - #5 }
INFO  16:43:33,565 - #28 else
INFO  16:43:33,565 - #4 {
INFO  16:43:33,566 - #3 af_a
INFO  16:43:33,566 - #8 =
INFO  16:43:33,566 - #9 0
INFO  16:43:33,566 - #7 ;
INFO  16:43:33,566 - #5 }
INFO  16:43:33,566 - #3 f_int
INFO  16:43:33,566 - #8 =
INFO  16:43:33,566 - #3 s
INFO  16:43:33,566 - #7 ;
INFO  16:43:33,566 - #5 }
INFO  16:43:33,566 - #3 int
INFO  16:43:33,566 - #3 bf
INFO  16:43:33,566 - #19 (
INFO  16:43:33,566 - #3 int
INFO  16:43:33,566 - #3 s
INFO  16:43:33,566 - #20 )
INFO  16:43:33,567 - #3 int
INFO  16:43:33,567 - #3 a_bf
INFO  16:43:33,567 - #7 ;
INFO  16:43:33,567 - #4 {
INFO  16:43:33,567 - #23 if
INFO  16:43:33,567 - #19 (
INFO  16:43:33,567 - #3 s
INFO  16:43:33,567 - #35 ==
INFO  16:43:33,567 - #9 1
INFO  16:43:33,567 - #20 )
INFO  16:43:33,567 - #27 read
INFO  16:43:33,567 - #19 (
INFO  16:43:33,567 - #3 s
INFO  16:43:33,567 - #20 )
INFO  16:43:33,567 - #7 ;
INFO  16:43:33,567 - #28 else
INFO  16:43:33,568 - #27 read
INFO  16:43:33,568 - #19 (
INFO  16:43:33,568 - #3 a_bf
INFO  16:43:33,568 - #20 )
INFO  16:43:33,568 - #7 ;
INFO  16:43:33,568 - #3 s
INFO  16:43:33,568 - #8 =
INFO  16:43:33,568 - #3 a_bf
INFO  16:43:33,568 - #7 ;
INFO  16:43:33,568 - #26 return
INFO  16:43:33,568 - #3 s
INFO  16:43:33,568 - #41 +
INFO  16:43:33,568 - #9 1
INFO  16:43:33,568 - #7 ;
INFO  16:43:33,568 - #5 }
INFO  16:43:33,568 - #3 int
INFO  16:43:33,569 - #3 getValue
INFO  16:43:33,569 - #19 (
INFO  16:43:33,569 - #20 )
INFO  16:43:33,569 - #4 {
INFO  16:43:33,569 - #3 this
INFO  16:43:33,569 - #34 .
INFO  16:43:33,569 - #3 e_int
INFO  16:43:33,569 - #8 =
INFO  16:43:33,569 - #9 5
INFO  16:43:33,569 - #7 ;
INFO  16:43:33,569 - #26 return
INFO  16:43:33,569 - #3 this
INFO  16:43:33,569 - #34 .
INFO  16:43:33,569 - #3 e_int
INFO  16:43:33,569 - #41 +
INFO  16:43:33,569 - #3 this
INFO  16:43:33,570 - #34 .
INFO  16:43:33,570 - #3 f_arr
INFO  16:43:33,570 - #14 [
INFO  16:43:33,570 - #9 0
INFO  16:43:33,570 - #15 ]
INFO  16:43:33,570 - #41 +
INFO  16:43:33,570 - #3 this
INFO  16:43:33,570 - #34 .
INFO  16:43:33,570 - #3 bf
INFO  16:43:33,570 - #19 (
INFO  16:43:33,570 - #9 1
INFO  16:43:33,570 - #20 )
INFO  16:43:33,570 - #7 ;
INFO  16:43:33,570 - #5 }
INFO  16:43:33,570 - #5 }
INFO  16:43:33,570 - #5 }
INFO  16:43:33,571 - #4 {
INFO  16:43:33,571 - #3 int
INFO  16:43:33,571 - #3 dec_function
INFO  16:43:33,571 - #19 (
INFO  16:43:33,571 - #3 int
INFO  16:43:33,571 - #3 a
INFO  16:43:33,571 - #20 )
INFO  16:43:33,571 - #4 {
INFO  16:43:33,571 - #26 return
INFO  16:43:33,571 - #3 a
INFO  16:43:33,571 - #32 -
INFO  16:43:33,571 - #9 1
INFO  16:43:33,571 - #7 ;
INFO  16:43:33,571 - #5 }
INFO  16:43:33,572 - #3 string
INFO  16:43:33,572 - #3 concat
INFO  16:43:33,572 - #19 (
INFO  16:43:33,572 - #3 string
INFO  16:43:33,572 - #3 s
INFO  16:43:33,572 - #20 )
INFO  16:43:33,572 - #4 {
INFO  16:43:33,572 - #26 return
INFO  16:43:33,572 - #3 s
INFO  16:43:33,572 - #41 +
INFO  16:43:33,572 - #12 aa
INFO  16:43:33,572 - #7 ;
INFO  16:43:33,572 - #5 }
INFO  16:43:33,572 - #18 void
INFO  16:43:33,572 - #3 main
INFO  16:43:33,572 - #19 (
INFO  16:43:33,573 - #20 )
INFO  16:43:33,573 - #3 A
INFO  16:43:33,573 - #3 a
INFO  16:43:33,573 - #7 ;
INFO  16:43:33,573 - #3 F
INFO  16:43:33,573 - #3 f
INFO  16:43:33,573 - #7 ;
INFO  16:43:33,573 - #3 int
INFO  16:43:33,573 - #3 b
INFO  16:43:33,573 - #13 ,
INFO  16:43:33,573 - #3 temp
INFO  16:43:33,573 - #14 [
INFO  16:43:33,573 - #15 ]
INFO  16:43:33,573 - #7 ;
INFO  16:43:33,573 - #3 bool
INFO  16:43:33,573 - #3 c
INFO  16:43:33,573 - #7 ;
INFO  16:43:33,573 - #3 char
INFO  16:43:33,573 - #3 a
INFO  16:43:33,573 - #7 ;
INFO  16:43:33,574 - #3 string
INFO  16:43:33,574 - #3 str
INFO  16:43:33,574 - #7 ;
INFO  16:43:33,574 - #4 {
INFO  16:43:33,574 - #3 str
INFO  16:43:33,574 - #8 =
INFO  16:43:33,574 - #12 abcd
INFO  16:43:33,574 - #7 ;
INFO  16:43:33,574 - #3 str
INFO  16:43:33,574 - #8 =
INFO  16:43:33,574 - #3 concat
INFO  16:43:33,574 - #19 (
INFO  16:43:33,574 - #3 str
INFO  16:43:33,574 - #20 )
INFO  16:43:33,574 - #7 ;
INFO  16:43:33,574 - #3 str
INFO  16:43:33,574 - #8 =
INFO  16:43:33,575 - #12 si4
INFO  16:43:33,575 - #41 +
INFO  16:43:33,575 - #12 pp1
INFO  16:43:33,575 - #7 ;
INFO  16:43:33,575 - #3 b
INFO  16:43:33,575 - #8 =
INFO  16:43:33,575 - #32 -
INFO  16:43:33,575 - #9 1
INFO  16:43:33,575 - #41 +
INFO  16:43:33,575 - #9 1
INFO  16:43:33,575 - #7 ;
INFO  16:43:33,575 - #3 b
INFO  16:43:33,575 - #21 ++
INFO  16:43:33,575 - #7 ;
INFO  16:43:33,575 - #3 b
INFO  16:43:33,575 - #22 --
INFO  16:43:33,575 - #7 ;
INFO  16:43:33,576 - #3 b
INFO  16:43:33,576 - #8 =
INFO  16:43:33,576 - #3 dec_function
INFO  16:43:33,576 - #19 (
INFO  16:43:33,576 - #3 b
INFO  16:43:33,576 - #20 )
INFO  16:43:33,576 - #7 ;
INFO  16:43:33,576 - #23 if
INFO  16:43:33,576 - #19 (
INFO  16:43:33,576 - #3 b
INFO  16:43:33,576 - #20 )
INFO  16:43:33,576 - #3 b
INFO  16:43:33,576 - #22 --
INFO  16:43:33,576 - #7 ;
INFO  16:43:33,576 - #23 if
INFO  16:43:33,576 - #19 (
INFO  16:43:33,576 - #3 b
INFO  16:43:33,576 - #36 !=
INFO  16:43:33,577 - #9 0
INFO  16:43:33,577 - #20 )
INFO  16:43:33,577 - #4 {
INFO  16:43:33,577 - #3 b
INFO  16:43:33,577 - #22 --
INFO  16:43:33,577 - #7 ;
INFO  16:43:33,577 - #5 }
INFO  16:43:33,577 - #23 if
INFO  16:43:33,577 - #19 (
INFO  16:43:33,577 - #3 b
INFO  16:43:33,577 - #35 ==
INFO  16:43:33,577 - #9 0
INFO  16:43:33,577 - #30 ||
INFO  16:43:33,577 - #3 str
INFO  16:43:33,577 - #35 ==
INFO  16:43:33,577 - #12 si4pp1
INFO  16:43:33,577 - #20 )
INFO  16:43:33,577 - #3 b
INFO  16:43:33,577 - #21 ++
INFO  16:43:33,577 - #7 ;
INFO  16:43:33,577 - #24 while
INFO  16:43:33,577 - #19 (
INFO  16:43:33,577 - #3 b
INFO  16:43:33,578 - #37 >
INFO  16:43:33,578 - #9 0
INFO  16:43:33,578 - #31 &&
INFO  16:43:33,578 - #3 b
INFO  16:43:33,578 - #39 <
INFO  16:43:33,578 - #9 2
INFO  16:43:33,578 - #30 ||
INFO  16:43:33,578 - #3 str
INFO  16:43:33,578 - #35 ==
INFO  16:43:33,578 - #12 si4pp1
INFO  16:43:33,578 - #20 )
INFO  16:43:33,578 - #4 {
INFO  16:43:33,578 - #3 b
INFO  16:43:33,578 - #22 --
INFO  16:43:33,578 - #7 ;
INFO  16:43:33,578 - #29 print
INFO  16:43:33,578 - #19 (
INFO  16:43:33,578 - #9 2
INFO  16:43:33,578 - #20 )
INFO  16:43:33,578 - #7 ;
INFO  16:43:33,579 - #29 print
INFO  16:43:33,579 - #19 (
INFO  16:43:33,579 - #12 cao
INFO  16:43:33,579 - #13 ,
INFO  16:43:33,579 - #9 3
INFO  16:43:33,579 - #20 )
INFO  16:43:33,579 - #7 ;
INFO  16:43:33,579 - #5 }
INFO  16:43:33,579 - #3 temp
INFO  16:43:33,579 - #8 =
INFO  16:43:33,579 - #33 new
INFO  16:43:33,579 - #3 int
INFO  16:43:33,579 - #14 [
INFO  16:43:33,579 - #9 2
INFO  16:43:33,579 - #15 ]
INFO  16:43:33,579 - #7 ;
INFO  16:43:33,579 - #3 a
INFO  16:43:33,579 - #8 =
INFO  16:43:33,579 - #33 new
INFO  16:43:33,579 - #3 A
INFO  16:43:33,579 - #7 ;
INFO  16:43:33,579 - #3 f
INFO  16:43:33,579 - #8 =
INFO  16:43:33,579 - #33 new
INFO  16:43:33,579 - #3 F
INFO  16:43:33,580 - #7 ;
INFO  16:43:33,580 - #3 f
INFO  16:43:33,580 - #34 .
INFO  16:43:33,580 - #3 f_int
INFO  16:43:33,580 - #8 =
INFO  16:43:33,580 - #3 dec_function
INFO  16:43:33,580 - #19 (
INFO  16:43:33,580 - #3 b
INFO  16:43:33,580 - #41 +
INFO  16:43:33,580 - #9 3
INFO  16:43:33,580 - #20 )
INFO  16:43:33,580 - #41 +
INFO  16:43:33,580 - #3 b
INFO  16:43:33,580 - #42 *
INFO  16:43:33,580 - #9 2
INFO  16:43:33,580 - #7 ;
INFO  16:43:33,580 - #27 read
INFO  16:43:33,580 - #19 (
INFO  16:43:33,580 - #3 f
INFO  16:43:33,580 - #34 .
INFO  16:43:33,580 - #3 f_char
INFO  16:43:33,580 - #20 )
INFO  16:43:33,580 - #7 ;
INFO  16:43:33,580 - #24 while
INFO  16:43:33,581 - #19 (
INFO  16:43:33,581 - #9 1
INFO  16:43:33,581 - #20 )
INFO  16:43:33,581 - #4 {
INFO  16:43:33,581 - #3 b
INFO  16:43:33,581 - #21 ++
INFO  16:43:33,581 - #7 ;
INFO  16:43:33,581 - #23 if
INFO  16:43:33,581 - #19 (
INFO  16:43:33,581 - #3 b
INFO  16:43:33,581 - #35 ==
INFO  16:43:33,581 - #9 10
INFO  16:43:33,581 - #20 )
INFO  16:43:33,581 - #25 break
INFO  16:43:33,581 - #7 ;
INFO  16:43:33,581 - #5 }
INFO  16:43:33,581 - #5 }
INFO  16:43:33,581 - #5 }
INFO  16:43:33,581 - Broj definicija globalnih promenljivih:3
INFO  16:43:33,581 - Broj definicija lokalnih promenljivih (u main funkciji):7
INFO  16:43:33,582 - Broj definicija globalnih konstanti:4
INFO  16:43:33,582 - Broj deklaracija globalnih nizova:1
INFO  16:43:33,582 - Broj definicija funkcija u glavnom programu:3
INFO  16:43:33,582 - Broj blokova naredbi:5
INFO  16:43:33,582 - Broj poziva funkcija u telu metode main:6
INFO  16:43:33,582 - Broj deklaracija formalnih argumenata funkcija:4
INFO  16:43:33,582 - Broj definicija unutrasnjih klasa:6
INFO  16:43:33,582 - Broj definicija metoda unutrasnjih klasa:5
INFO  16:43:33,582 - Broj deklaracija polja unutrasnjih klasa:17
INFO  16:43:33,582 - Parsiranje je uspesno zavrseno!
