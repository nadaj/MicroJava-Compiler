INFO  20:03:58,252 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:03:58,257 - #2 program
INFO  20:03:58,257 - #3 Program
INFO  20:03:58,257 - #16 class
INFO  20:03:58,257 - #3 A
INFO  20:03:58,257 - #4 {
INFO  20:03:58,257 - #3 int
INFO  20:03:58,257 - #3 x
INFO  20:03:58,258 - #14 [
INFO  20:03:58,258 - #15 ]
INFO  20:03:58,258 - #13 ,
INFO  20:03:58,258 - #3 y
INFO  20:03:58,258 - #14 [
INFO  20:03:58,258 - #15 ]
INFO  20:03:58,258 - #7 ;
INFO  20:03:58,258 - #4 {
INFO  20:03:58,258 - #3 int
INFO  20:03:58,258 - #3 pr
INFO  20:03:58,258 - #19 (
INFO  20:03:58,258 - #20 )
INFO  20:03:58,258 - #4 {
INFO  20:03:58,259 - #26 return
INFO  20:03:58,259 - #9 1
INFO  20:03:58,259 - #7 ;
INFO  20:03:58,259 - #5 }
INFO  20:03:58,259 - #3 int
INFO  20:03:58,259 - #3 pr
INFO  20:03:58,259 - #19 (
INFO  20:03:58,259 - #20 )
INFO  20:03:58,259 - #4 {
INFO  20:03:58,259 - #26 return
INFO  20:03:58,259 - #9 0
INFO  20:03:58,259 - #7 ;
INFO  20:03:58,260 - #5 }
INFO  20:03:58,260 - #3 int
INFO  20:03:58,260 - #3 pr1
INFO  20:03:58,260 - #19 (
INFO  20:03:58,260 - #20 )
INFO  20:03:58,260 - #4 {
INFO  20:03:58,260 - #26 return
INFO  20:03:58,260 - #3 pr
INFO  20:03:58,260 - #19 (
INFO  20:03:58,260 - #20 )
INFO  20:03:58,260 - #7 ;
INFO  20:03:58,260 - #5 }
INFO  20:03:58,260 - #5 }
INFO  20:03:58,260 - #5 }
INFO  20:03:58,261 - #6 const
INFO  20:03:58,261 - #3 int
INFO  20:03:58,261 - #3 pi
INFO  20:03:58,261 - #8 =
INFO  20:03:58,261 - #9 3
INFO  20:03:58,261 - #13 ,
INFO  20:03:58,261 - #3 e
INFO  20:03:58,261 - #8 =
INFO  20:03:58,261 - #9 2
INFO  20:03:58,261 - #7 ;
INFO  20:03:58,261 - #6 const
INFO  20:03:58,261 - #3 string
INFO  20:03:58,261 - #3 strin
INFO  20:03:58,261 - #8 =
INFO  20:03:58,261 - #12 aaa
INFO  20:03:58,261 - #7 ;
INFO  20:03:58,261 - #16 class
INFO  20:03:58,261 - #3 B
INFO  20:03:58,262 - #17 extends
INFO  20:03:58,262 - #3 A
INFO  20:03:58,262 - #4 {
INFO  20:03:58,262 - #3 int
INFO  20:03:58,262 - #3 i
INFO  20:03:58,262 - #7 ;
INFO  20:03:58,262 - #3 int
INFO  20:03:58,262 - #3 x
INFO  20:03:58,262 - #14 [
INFO  20:03:58,262 - #15 ]
INFO  20:03:58,262 - #7 ;
INFO  20:03:58,262 - #3 A
INFO  20:03:58,262 - #3 theAA
INFO  20:03:58,262 - #7 ;
INFO  20:03:58,262 - #4 {
INFO  20:03:58,262 - #18 void
INFO  20:03:58,262 - #3 voidtest
INFO  20:03:58,262 - #19 (
INFO  20:03:58,262 - #3 int
INFO  20:03:58,262 - #3 a
INFO  20:03:58,262 - #13 ,
INFO  20:03:58,263 - #3 char
INFO  20:03:58,263 - #3 b
INFO  20:03:58,263 - #20 )
INFO  20:03:58,263 - #3 int
INFO  20:03:58,263 - #3 c
INFO  20:03:58,263 - #7 ;
INFO  20:03:58,263 - #4 {
INFO  20:03:58,263 - #27 read
INFO  20:03:58,263 - #19 (
INFO  20:03:58,263 - #3 a
INFO  20:03:58,263 - #20 )
INFO  20:03:58,263 - #7 ;
INFO  20:03:58,263 - #27 read
INFO  20:03:58,263 - #19 (
INFO  20:03:58,263 - #3 b
INFO  20:03:58,263 - #20 )
INFO  20:03:58,263 - #7 ;
INFO  20:03:58,263 - #27 read
INFO  20:03:58,263 - #19 (
INFO  20:03:58,263 - #3 c
INFO  20:03:58,264 - #20 )
INFO  20:03:58,264 - #7 ;
INFO  20:03:58,264 - #5 }
INFO  20:03:58,264 - #3 int
INFO  20:03:58,264 - #3 met
INFO  20:03:58,264 - #19 (
INFO  20:03:58,264 - #3 int
INFO  20:03:58,264 - #3 a
INFO  20:03:58,264 - #20 )
INFO  20:03:58,264 - #4 {
INFO  20:03:58,264 - #26 return
INFO  20:03:58,264 - #3 a
INFO  20:03:58,264 - #41 +
INFO  20:03:58,264 - #9 1
INFO  20:03:58,264 - #7 ;
INFO  20:03:58,264 - #5 }
INFO  20:03:58,264 - #3 int
INFO  20:03:58,265 - #3 getValue
INFO  20:03:58,265 - #19 (
INFO  20:03:58,265 - #3 int
INFO  20:03:58,265 - #3 a
INFO  20:03:58,265 - #20 )
INFO  20:03:58,265 - #3 int
INFO  20:03:58,265 - #3 b
INFO  20:03:58,265 - #7 ;
INFO  20:03:58,265 - #3 bool
INFO  20:03:58,265 - #3 c
INFO  20:03:58,265 - #7 ;
INFO  20:03:58,265 - #4 {
INFO  20:03:58,265 - #3 this
INFO  20:03:58,265 - #34 .
INFO  20:03:58,265 - #3 i
INFO  20:03:58,265 - #8 =
INFO  20:03:58,266 - #9 6
INFO  20:03:58,266 - #7 ;
INFO  20:03:58,266 - #26 return
INFO  20:03:58,266 - #3 this
INFO  20:03:58,266 - #34 .
INFO  20:03:58,266 - #3 i
INFO  20:03:58,266 - #41 +
INFO  20:03:58,266 - #3 this
INFO  20:03:58,266 - #34 .
INFO  20:03:58,266 - #3 x
INFO  20:03:58,266 - #14 [
INFO  20:03:58,266 - #9 0
INFO  20:03:58,266 - #15 ]
INFO  20:03:58,266 - #41 +
INFO  20:03:58,266 - #3 this
INFO  20:03:58,267 - #34 .
INFO  20:03:58,267 - #3 met
INFO  20:03:58,267 - #19 (
INFO  20:03:58,267 - #3 a
INFO  20:03:58,267 - #20 )
INFO  20:03:58,267 - #7 ;
INFO  20:03:58,267 - #5 }
INFO  20:03:58,267 - #5 }
INFO  20:03:58,267 - #5 }
INFO  20:03:58,267 - #16 class
INFO  20:03:58,267 - #3 C
INFO  20:03:58,267 - #17 extends
INFO  20:03:58,267 - #3 B
INFO  20:03:58,267 - #4 {
INFO  20:03:58,267 - #3 A
INFO  20:03:58,267 - #3 theA
INFO  20:03:58,267 - #7 ;
INFO  20:03:58,268 - #3 string
INFO  20:03:58,268 - #3 a
INFO  20:03:58,268 - #8 =
ERROR 20:03:58,268 - 
Sintaksna greska
INFO  20:03:58,268 - #12 bas je roze i zut
INFO  20:03:58,268 - #7 ;
INFO  20:03:58,268 - #4 {
INFO  20:03:58,269 - #18 void
INFO  20:03:58,269 - #3 glupost
INFO  20:03:58,269 - #19 (
INFO  20:03:58,269 - #3 int
INFO  20:03:58,269 - #13 ,
ERROR 20:03:58,269 - 
Sintaksna greska
INFO  20:03:58,269 - #3 m
INFO  20:03:58,269 - #20 )
INFO  20:03:58,269 - #3 int
INFO  20:03:58,269 - #3 i
INFO  20:03:58,269 - #13 ,
ERROR 20:03:58,269 - [Deklaracija form. parametra funkcije] Izvrsen oporavak do ) u liniji 49
INFO  20:03:58,269 - #3 bool
INFO  20:03:58,270 - #3 c
ERROR 20:03:58,270 - 
Sintaksna greska
INFO  20:03:58,270 - #4 {
INFO  20:03:58,270 - #26 return
INFO  20:03:58,270 - #3 i
INFO  20:03:58,270 - #41 +
ERROR 20:03:58,270 - [Deklaracija lokalne promenljive] Izvrsen oporavak do { u liniji 49
INFO  20:03:58,270 - #3 c
INFO  20:03:58,270 - #7 ;
INFO  20:03:58,270 - #5 }
INFO  20:03:58,270 - #5 }
INFO  20:03:58,271 - #5 }
INFO  20:03:58,271 - #16 class
INFO  20:03:58,271 - #3 E
INFO  20:03:58,271 - #17 extends
INFO  20:03:58,271 - #4 {
ERROR 20:03:58,271 - 
Sintaksna greska
INFO  20:03:58,271 - #3 bool
INFO  20:03:58,271 - #3 b
INFO  20:03:58,271 - #7 ;
ERROR 20:03:58,271 - [Deklaracija prosirenja natklase] Izvrsen oporavak do { u liniji 56
INFO  20:03:58,271 - #3 C
INFO  20:03:58,271 - #13 ,
ERROR 20:03:58,271 - 
Sintaksna greska
INFO  20:03:58,271 - #3 cc
INFO  20:03:58,272 - #13 ,
INFO  20:03:58,272 - #3 char
INFO  20:03:58,272 - #3 e
INFO  20:03:58,272 - #7 ;
INFO  20:03:58,272 - #5 }
ERROR 20:03:58,272 - [Deklaracija lokalne promenljive] Izvrsen oporavak do { u liniji 58
INFO  20:03:58,272 - #4 {
INFO  20:03:58,272 - #3 int
INFO  20:03:58,272 - #3 met
INFO  20:03:58,272 - #19 (
INFO  20:03:58,272 - #3 int
INFO  20:03:58,272 - #3 par
INFO  20:03:58,273 - #20 )
INFO  20:03:58,273 - #4 {
INFO  20:03:58,273 - #26 return
INFO  20:03:58,273 - #3 par
INFO  20:03:58,273 - #32 -
INFO  20:03:58,273 - #9 1
INFO  20:03:58,273 - #7 ;
INFO  20:03:58,273 - #5 }
INFO  20:03:58,273 - #3 string
INFO  20:03:58,273 - #3 strfunc
INFO  20:03:58,273 - #19 (
INFO  20:03:58,273 - #3 string
INFO  20:03:58,273 - #3 s
INFO  20:03:58,273 - #20 )
INFO  20:03:58,274 - #4 {
INFO  20:03:58,274 - #26 return
INFO  20:03:58,274 - #3 s
INFO  20:03:58,274 - #41 +
INFO  20:03:58,274 - #12 aa
INFO  20:03:58,274 - #7 ;
INFO  20:03:58,274 - #5 }
INFO  20:03:58,274 - #18 void
INFO  20:03:58,274 - #3 main
INFO  20:03:58,274 - #19 (
INFO  20:03:58,274 - #20 )
INFO  20:03:58,274 - #3 A
INFO  20:03:58,274 - #3 a
INFO  20:03:58,274 - #7 ;
INFO  20:03:58,274 - #3 B
INFO  20:03:58,275 - #3 b
INFO  20:03:58,275 - #7 ;
INFO  20:03:58,275 - #3 C
INFO  20:03:58,275 - #3 c
INFO  20:03:58,275 - #7 ;
INFO  20:03:58,275 - #3 int
INFO  20:03:58,275 - #3 i
INFO  20:03:58,275 - #13 ,
INFO  20:03:58,275 - #3 y
INFO  20:03:58,275 - #13 ,
INFO  20:03:58,275 - #3 z
INFO  20:03:58,275 - #7 ;
INFO  20:03:58,275 - #3 int
INFO  20:03:58,275 - #3 x
INFO  20:03:58,275 - #14 [
INFO  20:03:58,275 - #15 ]
INFO  20:03:58,275 - #7 ;
INFO  20:03:58,276 - #3 string
INFO  20:03:58,276 - #3 str1
INFO  20:03:58,276 - #13 ,
INFO  20:03:58,276 - #3 str2
INFO  20:03:58,276 - #7 ;
INFO  20:03:58,276 - #3 bool
INFO  20:03:58,276 - #3 bulin
INFO  20:03:58,276 - #7 ;
INFO  20:03:58,276 - #4 {
INFO  20:03:58,276 - #3 str2
INFO  20:03:58,276 - #8 =
INFO  20:03:58,276 - #12 abcd
INFO  20:03:58,276 - #7 ;
INFO  20:03:58,277 - #3 str1
INFO  20:03:58,277 - #8 =
INFO  20:03:58,277 - #12 abc
INFO  20:03:58,277 - #41 +
INFO  20:03:58,277 - #3 strfunc
INFO  20:03:58,277 - #19 (
INFO  20:03:58,277 - #3 str2
INFO  20:03:58,277 - #20 )
INFO  20:03:58,277 - #7 ;
INFO  20:03:58,277 - #3 str2
INFO  20:03:58,277 - #8 =
INFO  20:03:58,277 - #12 mama"+"tata
INFO  20:03:58,277 - #7 ;
INFO  20:03:58,277 - #3 strin
INFO  20:03:58,277 - #8 =
INFO  20:03:58,278 - #12 ne moze se dodeliti vrednost konstantnom stringu
INFO  20:03:58,278 - #7 ;
INFO  20:03:58,278 - #3 bulin
INFO  20:03:58,278 - #8 =
INFO  20:03:58,278 - #32 -
INFO  20:03:58,278 - #11 true
ERROR 20:03:58,278 - 
Sintaksna greska
INFO  20:03:58,278 - #7 ;
INFO  20:03:58,278 - #29 print
INFO  20:03:58,278 - #19 (
INFO  20:03:58,278 - #3 bulin
ERROR 20:03:58,278 - [Konstrukcija dodele iskaza] Izvrsen oporavak do ; u liniji 74
INFO  20:03:58,278 - #20 )
INFO  20:03:58,278 - #7 ;
INFO  20:03:58,278 - #3 a
INFO  20:03:58,278 - #8 =
INFO  20:03:58,279 - #33 new
INFO  20:03:58,279 - #3 A
INFO  20:03:58,279 - #7 ;
INFO  20:03:58,279 - #3 a
INFO  20:03:58,279 - #34 .
INFO  20:03:58,279 - #3 x
INFO  20:03:58,279 - #8 =
INFO  20:03:58,279 - #33 new
INFO  20:03:58,279 - #3 int
INFO  20:03:58,279 - #14 [
INFO  20:03:58,279 - #9 5
INFO  20:03:58,279 - #15 ]
INFO  20:03:58,279 - #7 ;
INFO  20:03:58,279 - #3 a
INFO  20:03:58,279 - #34 .
INFO  20:03:58,279 - #3 y
INFO  20:03:58,279 - #8 =
INFO  20:03:58,279 - #33 new
INFO  20:03:58,279 - #3 int
INFO  20:03:58,279 - #14 [
INFO  20:03:58,279 - #9 5
INFO  20:03:58,279 - #15 ]
INFO  20:03:58,279 - #7 ;
INFO  20:03:58,279 - #3 c
INFO  20:03:58,280 - #8 =
INFO  20:03:58,280 - #33 new
INFO  20:03:58,280 - #3 C
INFO  20:03:58,280 - #7 ;
INFO  20:03:58,280 - #3 i
INFO  20:03:58,280 - #8 =
INFO  20:03:58,280 - #3 met
INFO  20:03:58,280 - #19 (
INFO  20:03:58,280 - #3 pi
INFO  20:03:58,280 - #41 +
INFO  20:03:58,280 - #9 3
INFO  20:03:58,280 - #20 )
INFO  20:03:58,280 - #41 +
INFO  20:03:58,280 - #3 e
INFO  20:03:58,280 - #42 *
INFO  20:03:58,280 - #9 2
INFO  20:03:58,280 - #7 ;
INFO  20:03:58,280 - #3 c
INFO  20:03:58,280 - #34 .
INFO  20:03:58,280 - #3 theA
INFO  20:03:58,280 - #8 =
INFO  20:03:58,281 - #3 a
INFO  20:03:58,281 - #7 ;
INFO  20:03:58,281 - #3 c
INFO  20:03:58,281 - #34 .
INFO  20:03:58,281 - #3 x
INFO  20:03:58,281 - #8 =
INFO  20:03:58,281 - #33 new
INFO  20:03:58,281 - #3 int
INFO  20:03:58,281 - #14 [
INFO  20:03:58,281 - #9 5
INFO  20:03:58,281 - #15 ]
INFO  20:03:58,281 - #7 ;
INFO  20:03:58,281 - #3 x
INFO  20:03:58,281 - #8 =
INFO  20:03:58,281 - #33 new
INFO  20:03:58,281 - #3 int
INFO  20:03:58,281 - #14 [
INFO  20:03:58,281 - #9 3
INFO  20:03:58,281 - #15 ]
INFO  20:03:58,281 - #7 ;
INFO  20:03:58,281 - #3 i
INFO  20:03:58,282 - #8 =
INFO  20:03:58,282 - #9 0
INFO  20:03:58,282 - #7 ;
INFO  20:03:58,282 - #27 read
INFO  20:03:58,282 - #19 (
INFO  20:03:58,282 - #3 c
INFO  20:03:58,282 - #34 .
INFO  20:03:58,282 - #3 i
INFO  20:03:58,282 - #20 )
INFO  20:03:58,282 - #7 ;
INFO  20:03:58,282 - #24 while
INFO  20:03:58,282 - #19 (
INFO  20:03:58,282 - #3 i
INFO  20:03:58,282 - #39 <
INFO  20:03:58,282 - #9 5
INFO  20:03:58,282 - #20 )
INFO  20:03:58,282 - #4 {
INFO  20:03:58,282 - #27 read
INFO  20:03:58,282 - #19 (
INFO  20:03:58,282 - #3 c
INFO  20:03:58,282 - #34 .
INFO  20:03:58,282 - #3 x
INFO  20:03:58,282 - #14 [
INFO  20:03:58,282 - #3 i
INFO  20:03:58,283 - #15 ]
INFO  20:03:58,283 - #20 )
INFO  20:03:58,283 - #7 ;
INFO  20:03:58,283 - #27 read
INFO  20:03:58,283 - #19 (
INFO  20:03:58,283 - #3 c
INFO  20:03:58,283 - #34 .
INFO  20:03:58,283 - #3 theA
INFO  20:03:58,283 - #34 .
INFO  20:03:58,283 - #3 x
INFO  20:03:58,283 - #14 [
INFO  20:03:58,283 - #3 i
INFO  20:03:58,283 - #15 ]
INFO  20:03:58,283 - #20 )
INFO  20:03:58,283 - #7 ;
INFO  20:03:58,283 - #3 i
INFO  20:03:58,283 - #21 ++
INFO  20:03:58,283 - #7 ;
INFO  20:03:58,283 - #5 }
INFO  20:03:58,283 - #29 print
INFO  20:03:58,283 - #19 (
INFO  20:03:58,283 - #3 c
INFO  20:03:58,283 - #34 .
INFO  20:03:58,283 - #3 getValue
INFO  20:03:58,283 - #19 (
INFO  20:03:58,284 - #3 c
INFO  20:03:58,284 - #34 .
INFO  20:03:58,284 - #3 theA
INFO  20:03:58,284 - #34 .
INFO  20:03:58,284 - #3 x
INFO  20:03:58,284 - #14 [
INFO  20:03:58,284 - #9 0
INFO  20:03:58,284 - #15 ]
INFO  20:03:58,284 - #20 )
INFO  20:03:58,284 - #20 )
INFO  20:03:58,284 - #7 ;
INFO  20:03:58,284 - #3 c
INFO  20:03:58,284 - #34 .
INFO  20:03:58,284 - #3 theA
INFO  20:03:58,284 - #34 .
INFO  20:03:58,284 - #3 x
INFO  20:03:58,284 - #14 [
INFO  20:03:58,284 - #9 0
INFO  20:03:58,284 - #15 ]
INFO  20:03:58,284 - #8 =
INFO  20:03:58,284 - #9 1
INFO  20:03:58,284 - #7 ;
INFO  20:03:58,284 - #23 if
INFO  20:03:58,284 - #19 (
INFO  20:03:58,284 - #3 i
INFO  20:03:58,285 - #35 ==
INFO  20:03:58,285 - #9 1
INFO  20:03:58,285 - #20 )
INFO  20:03:58,285 - #3 i
INFO  20:03:58,285 - #8 =
INFO  20:03:58,285 - #3 c
INFO  20:03:58,285 - #34 .
INFO  20:03:58,285 - #3 met
INFO  20:03:58,285 - #19 (
INFO  20:03:58,285 - #9 1
INFO  20:03:58,285 - #20 )
INFO  20:03:58,285 - #41 +
INFO  20:03:58,285 - #3 b
INFO  20:03:58,285 - #34 .
INFO  20:03:58,285 - #3 getValue
INFO  20:03:58,285 - #19 (
INFO  20:03:58,285 - #3 c
INFO  20:03:58,285 - #34 .
INFO  20:03:58,285 - #3 x
INFO  20:03:58,285 - #14 [
INFO  20:03:58,285 - #9 0
INFO  20:03:58,285 - #15 ]
INFO  20:03:58,285 - #20 )
INFO  20:03:58,285 - #41 +
INFO  20:03:58,285 - #9 5
INFO  20:03:58,286 - #42 *
INFO  20:03:58,286 - #9 8
INFO  20:03:58,286 - #7 ;
INFO  20:03:58,286 - #3 b
INFO  20:03:58,286 - #34 .
INFO  20:03:58,286 - #3 getValue
INFO  20:03:58,286 - #19 (
INFO  20:03:58,286 - #3 b
INFO  20:03:58,286 - #34 .
INFO  20:03:58,286 - #3 y
INFO  20:03:58,286 - #14 [
INFO  20:03:58,286 - #3 i
INFO  20:03:58,286 - #15 ]
INFO  20:03:58,286 - #20 )
INFO  20:03:58,286 - #7 ;
INFO  20:03:58,286 - #3 b
INFO  20:03:58,286 - #34 .
INFO  20:03:58,286 - #3 pr
INFO  20:03:58,286 - #19 (
INFO  20:03:58,286 - #20 )
INFO  20:03:58,287 - #7 ;
INFO  20:03:58,287 - #3 i
INFO  20:03:58,287 - #8 =
INFO  20:03:58,287 - #9 4
INFO  20:03:58,287 - #42 *
INFO  20:03:58,287 - #19 (
INFO  20:03:58,287 - #9 5
INFO  20:03:58,287 - #41 +
INFO  20:03:58,287 - #9 6
INFO  20:03:58,287 - #41 +
INFO  20:03:58,287 - #3 i
INFO  20:03:58,287 - #20 )
INFO  20:03:58,287 - #41 +
INFO  20:03:58,287 - #3 i
INFO  20:03:58,287 - #41 +
INFO  20:03:58,287 - #3 met
INFO  20:03:58,287 - #19 (
INFO  20:03:58,287 - #9 2
INFO  20:03:58,287 - #20 )
INFO  20:03:58,287 - #7 ;
INFO  20:03:58,288 - #3 chr
INFO  20:03:58,288 - #19 (
INFO  20:03:58,288 - #9 1
INFO  20:03:58,288 - #20 )
INFO  20:03:58,288 - #7 ;
INFO  20:03:58,288 - #3 i
INFO  20:03:58,288 - #8 =
INFO  20:03:58,288 - #3 ord
INFO  20:03:58,288 - #19 (
INFO  20:03:58,288 - #10 1
INFO  20:03:58,288 - #20 )
INFO  20:03:58,288 - #7 ;
INFO  20:03:58,288 - #29 print
INFO  20:03:58,288 - #19 (
INFO  20:03:58,288 - #9 4
INFO  20:03:58,288 - #13 ,
INFO  20:03:58,288 - #9 1
INFO  20:03:58,288 - #20 )
INFO  20:03:58,289 - #7 ;
INFO  20:03:58,289 - #3 a
INFO  20:03:58,289 - #8 =
INFO  20:03:58,289 - #3 b
INFO  20:03:58,289 - #7 ;
INFO  20:03:58,289 - #23 if
INFO  20:03:58,289 - #19 (
INFO  20:03:58,289 - #11 true
ERROR 20:03:58,289 - 
Sintaksna greska
INFO  20:03:58,289 - #20 )
INFO  20:03:58,289 - #3 i
INFO  20:03:58,289 - #21 ++
INFO  20:03:58,289 - #7 ;
ERROR 20:03:58,289 - [Logicki izraz] Izvrsen oporavak do ) u liniji 105
INFO  20:03:58,289 - #24 while
INFO  20:03:58,289 - #19 (
INFO  20:03:58,289 - #3 str2
INFO  20:03:58,289 - #35 ==
INFO  20:03:58,289 - #12 kraj" || str1 == "kraj
INFO  20:03:58,290 - #20 )
INFO  20:03:58,290 - #4 {
INFO  20:03:58,290 - #3 c
INFO  20:03:58,290 - #34 .
INFO  20:03:58,290 - #3 theA
INFO  20:03:58,290 - #34 .
INFO  20:03:58,290 - #3 x
INFO  20:03:58,290 - #14 [
INFO  20:03:58,290 - #3 i
INFO  20:03:58,290 - #15 ]
INFO  20:03:58,290 - #8 =
INFO  20:03:58,290 - #3 a
INFO  20:03:58,290 - #34 .
INFO  20:03:58,290 - #3 x
INFO  20:03:58,290 - #14 [
INFO  20:03:58,290 - #3 i
INFO  20:03:58,290 - #15 ]
INFO  20:03:58,290 - #7 ;
INFO  20:03:58,290 - #23 if
INFO  20:03:58,290 - #19 (
INFO  20:03:58,290 - #3 b
INFO  20:03:58,290 - #34 .
INFO  20:03:58,290 - #3 theAA
INFO  20:03:58,290 - #34 .
INFO  20:03:58,290 - #3 y
INFO  20:03:58,291 - #14 [
INFO  20:03:58,291 - #3 i
INFO  20:03:58,291 - #15 ]
INFO  20:03:58,291 - #35 ==
INFO  20:03:58,291 - #3 c
INFO  20:03:58,291 - #34 .
INFO  20:03:58,291 - #3 theA
INFO  20:03:58,291 - #34 .
INFO  20:03:58,291 - #3 x
INFO  20:03:58,291 - #14 [
INFO  20:03:58,291 - #3 i
INFO  20:03:58,291 - #15 ]
INFO  20:03:58,291 - #31 &&
INFO  20:03:58,291 - #3 c
INFO  20:03:58,291 - #34 .
INFO  20:03:58,291 - #3 pr1
INFO  20:03:58,291 - #19 (
INFO  20:03:58,291 - #20 )
INFO  20:03:58,291 - #20 )
INFO  20:03:58,291 - #25 break
INFO  20:03:58,291 - #7 ;
INFO  20:03:58,291 - #27 read
INFO  20:03:58,291 - #19 (
INFO  20:03:58,291 - #3 str1
INFO  20:03:58,291 - #20 )
INFO  20:03:58,292 - #7 ;
INFO  20:03:58,292 - #27 read
INFO  20:03:58,292 - #19 (
INFO  20:03:58,292 - #3 str2
INFO  20:03:58,292 - #20 )
INFO  20:03:58,292 - #7 ;
INFO  20:03:58,292 - #5 }
INFO  20:03:58,292 - #5 }
INFO  20:03:58,292 - #5 }
ERROR 20:03:58,292 - Parsiranje nije uspesno zavrseno!
