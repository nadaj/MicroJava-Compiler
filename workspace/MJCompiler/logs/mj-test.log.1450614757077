INFO  13:16:09,119 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  13:16:09,124 - #2 program
INFO  13:16:09,124 - #3 Program
INFO  13:16:09,124 - #16 class
INFO  13:16:09,124 - #3 A
INFO  13:16:09,124 - #4 {
INFO  13:16:09,124 - #3 int
INFO  13:16:09,124 - #3 x
INFO  13:16:09,124 - #14 [
INFO  13:16:09,124 - #15 ]
INFO  13:16:09,124 - #13 ,
INFO  13:16:09,124 - #3 y
INFO  13:16:09,124 - #14 [
INFO  13:16:09,125 - #15 ]
INFO  13:16:09,125 - #7 ;
INFO  13:16:09,125 - #4 {
INFO  13:16:09,125 - #3 int
INFO  13:16:09,125 - #3 pr
INFO  13:16:09,125 - #19 (
INFO  13:16:09,125 - #20 )
INFO  13:16:09,125 - #4 {
INFO  13:16:09,125 - #26 return
INFO  13:16:09,125 - #9 1
INFO  13:16:09,125 - #7 ;
INFO  13:16:09,125 - #5 }
INFO  13:16:09,126 - #3 int
INFO  13:16:09,126 - #3 pr
INFO  13:16:09,126 - #19 (
INFO  13:16:09,126 - #20 )
INFO  13:16:09,126 - #4 {
INFO  13:16:09,126 - #26 return
INFO  13:16:09,126 - #9 0
INFO  13:16:09,126 - #7 ;
INFO  13:16:09,126 - #5 }
INFO  13:16:09,126 - #3 int
INFO  13:16:09,126 - #3 pr1
INFO  13:16:09,126 - #19 (
INFO  13:16:09,127 - #20 )
INFO  13:16:09,127 - #4 {
INFO  13:16:09,127 - #26 return
INFO  13:16:09,127 - #3 pr
INFO  13:16:09,127 - #19 (
INFO  13:16:09,127 - #20 )
INFO  13:16:09,127 - #7 ;
INFO  13:16:09,127 - #5 }
INFO  13:16:09,127 - #5 }
INFO  13:16:09,127 - #5 }
INFO  13:16:09,127 - #6 const
INFO  13:16:09,127 - #3 int
INFO  13:16:09,127 - #3 pi
INFO  13:16:09,127 - #8 =
INFO  13:16:09,127 - #9 3
INFO  13:16:09,127 - #13 ,
INFO  13:16:09,128 - #3 e
INFO  13:16:09,128 - #8 =
INFO  13:16:09,128 - #9 2
INFO  13:16:09,128 - #7 ;
INFO  13:16:09,128 - #6 const
INFO  13:16:09,128 - #3 string
INFO  13:16:09,128 - #3 strin
INFO  13:16:09,128 - #8 =
INFO  13:16:09,128 - #12 aaa
INFO  13:16:09,128 - #7 ;
INFO  13:16:09,128 - #16 class
INFO  13:16:09,128 - #3 B
INFO  13:16:09,128 - #17 extends
INFO  13:16:09,128 - #3 A
INFO  13:16:09,128 - #4 {
INFO  13:16:09,128 - #3 int
INFO  13:16:09,128 - #3 i
INFO  13:16:09,128 - #7 ;
INFO  13:16:09,128 - #3 int
INFO  13:16:09,129 - #3 x
INFO  13:16:09,129 - #14 [
INFO  13:16:09,129 - #15 ]
INFO  13:16:09,129 - #7 ;
INFO  13:16:09,129 - #3 A
INFO  13:16:09,129 - #3 theAA
INFO  13:16:09,129 - #7 ;
INFO  13:16:09,129 - #4 {
INFO  13:16:09,129 - #18 void
INFO  13:16:09,129 - #3 voidtest
INFO  13:16:09,129 - #19 (
INFO  13:16:09,129 - #3 int
INFO  13:16:09,129 - #3 a
INFO  13:16:09,129 - #13 ,
INFO  13:16:09,129 - #3 char
INFO  13:16:09,129 - #3 b
INFO  13:16:09,129 - #20 )
INFO  13:16:09,129 - #3 int
INFO  13:16:09,129 - #3 c
INFO  13:16:09,129 - #7 ;
INFO  13:16:09,130 - #4 {
INFO  13:16:09,130 - #27 read
INFO  13:16:09,130 - #19 (
INFO  13:16:09,130 - #3 a
INFO  13:16:09,130 - #20 )
INFO  13:16:09,130 - #7 ;
INFO  13:16:09,130 - #27 read
INFO  13:16:09,130 - #19 (
INFO  13:16:09,130 - #3 b
INFO  13:16:09,130 - #20 )
INFO  13:16:09,130 - #7 ;
INFO  13:16:09,130 - #27 read
INFO  13:16:09,130 - #19 (
INFO  13:16:09,130 - #3 c
INFO  13:16:09,130 - #20 )
INFO  13:16:09,130 - #7 ;
INFO  13:16:09,130 - #5 }
INFO  13:16:09,130 - #3 int
INFO  13:16:09,131 - #3 met
INFO  13:16:09,131 - #19 (
INFO  13:16:09,131 - #3 int
INFO  13:16:09,131 - #3 a
INFO  13:16:09,131 - #20 )
INFO  13:16:09,131 - #4 {
INFO  13:16:09,131 - #26 return
INFO  13:16:09,131 - #3 a
INFO  13:16:09,131 - #41 +
INFO  13:16:09,131 - #9 1
INFO  13:16:09,131 - #7 ;
INFO  13:16:09,131 - #5 }
INFO  13:16:09,131 - #3 int
INFO  13:16:09,131 - #3 getValue
INFO  13:16:09,131 - #19 (
INFO  13:16:09,131 - #3 int
INFO  13:16:09,131 - #3 a
INFO  13:16:09,132 - #20 )
INFO  13:16:09,132 - #3 int
INFO  13:16:09,132 - #3 b
INFO  13:16:09,132 - #7 ;
INFO  13:16:09,132 - #3 bool
INFO  13:16:09,132 - #3 c
INFO  13:16:09,132 - #7 ;
INFO  13:16:09,132 - #4 {
INFO  13:16:09,132 - #3 this
INFO  13:16:09,132 - #34 .
INFO  13:16:09,132 - #3 i
INFO  13:16:09,132 - #8 =
INFO  13:16:09,132 - #9 6
INFO  13:16:09,133 - #7 ;
INFO  13:16:09,133 - #26 return
INFO  13:16:09,133 - #3 this
INFO  13:16:09,133 - #34 .
INFO  13:16:09,133 - #3 i
INFO  13:16:09,133 - #41 +
INFO  13:16:09,133 - #3 this
INFO  13:16:09,133 - #34 .
INFO  13:16:09,133 - #3 x
INFO  13:16:09,133 - #14 [
INFO  13:16:09,133 - #9 0
INFO  13:16:09,133 - #15 ]
INFO  13:16:09,133 - #41 +
INFO  13:16:09,134 - #3 this
INFO  13:16:09,134 - #34 .
INFO  13:16:09,134 - #3 met
INFO  13:16:09,134 - #19 (
INFO  13:16:09,134 - #3 a
INFO  13:16:09,134 - #20 )
INFO  13:16:09,134 - #7 ;
INFO  13:16:09,134 - #5 }
INFO  13:16:09,134 - #5 }
INFO  13:16:09,134 - #5 }
INFO  13:16:09,134 - #16 class
INFO  13:16:09,134 - #3 C
INFO  13:16:09,134 - #17 extends
INFO  13:16:09,134 - #3 B
INFO  13:16:09,134 - #4 {
INFO  13:16:09,134 - #3 A
INFO  13:16:09,135 - #3 theA
INFO  13:16:09,135 - #7 ;
INFO  13:16:09,135 - #3 string
INFO  13:16:09,135 - #3 a
INFO  13:16:09,135 - #8 =
ERROR 13:16:09,135 - 
Sintaksna greska
INFO  13:16:09,135 - #12 bas je roze i zut
INFO  13:16:09,135 - #7 ;
INFO  13:16:09,135 - #4 {
INFO  13:16:09,136 - #18 void
INFO  13:16:09,136 - #3 glupost
ERROR 13:16:09,136 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do ; u liniji 46
INFO  13:16:09,136 - #19 (
INFO  13:16:09,136 - #3 int
INFO  13:16:09,136 - #13 ,
ERROR 13:16:09,136 - 
Sintaksna greska
INFO  13:16:09,136 - #3 m
INFO  13:16:09,136 - #20 )
INFO  13:16:09,137 - #3 int
INFO  13:16:09,137 - #3 i
INFO  13:16:09,137 - #13 ,
ERROR 13:16:09,137 - [Deklaracija form. parametra funkcije] Izvrsen oporavak do ) u liniji 49
INFO  13:16:09,137 - #3 bool
INFO  13:16:09,137 - #3 c
ERROR 13:16:09,137 - 
Sintaksna greska
INFO  13:16:09,137 - #4 {
INFO  13:16:09,137 - #26 return
INFO  13:16:09,137 - #3 i
INFO  13:16:09,137 - #41 +
ERROR 13:16:09,137 - [Deklaracija lokalne promenljive] Izvrsen oporavak do { u liniji 49
INFO  13:16:09,138 - #3 c
INFO  13:16:09,138 - #7 ;
INFO  13:16:09,138 - #5 }
INFO  13:16:09,138 - #5 }
INFO  13:16:09,138 - #5 }
INFO  13:16:09,138 - #16 class
INFO  13:16:09,138 - #3 E
INFO  13:16:09,138 - #17 extends
INFO  13:16:09,138 - #4 {
ERROR 13:16:09,138 - 
Sintaksna greska
INFO  13:16:09,138 - #3 bool
INFO  13:16:09,138 - #3 b
INFO  13:16:09,138 - #7 ;
ERROR 13:16:09,139 - [Deklaracija prosirenja natklase] Izvrsen oporavak do { u liniji 56
INFO  13:16:09,139 - #3 C
INFO  13:16:09,139 - #13 ,
ERROR 13:16:09,139 - 
Sintaksna greska
INFO  13:16:09,139 - #3 cc
INFO  13:16:09,139 - #13 ,
INFO  13:16:09,139 - #3 char
INFO  13:16:09,139 - #3 e
INFO  13:16:09,139 - #7 ;
INFO  13:16:09,139 - #5 }
ERROR 13:16:09,139 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do { u liniji 58
INFO  13:16:09,139 - #4 {
INFO  13:16:09,140 - #3 int
INFO  13:16:09,140 - #3 met
INFO  13:16:09,140 - #19 (
INFO  13:16:09,140 - #3 int
INFO  13:16:09,140 - #3 par
INFO  13:16:09,140 - #20 )
INFO  13:16:09,140 - #4 {
INFO  13:16:09,140 - #26 return
INFO  13:16:09,140 - #3 par
INFO  13:16:09,140 - #32 -
INFO  13:16:09,140 - #9 1
INFO  13:16:09,140 - #7 ;
INFO  13:16:09,140 - #5 }
INFO  13:16:09,141 - #3 string
INFO  13:16:09,141 - #3 strfunc
INFO  13:16:09,141 - #19 (
INFO  13:16:09,141 - #3 string
INFO  13:16:09,141 - #3 s
INFO  13:16:09,141 - #20 )
INFO  13:16:09,141 - #4 {
INFO  13:16:09,141 - #26 return
INFO  13:16:09,141 - #3 s
INFO  13:16:09,141 - #41 +
INFO  13:16:09,141 - #12 aa
INFO  13:16:09,141 - #7 ;
INFO  13:16:09,141 - #5 }
INFO  13:16:09,141 - #18 void
INFO  13:16:09,142 - #3 main
INFO  13:16:09,142 - #19 (
INFO  13:16:09,142 - #20 )
INFO  13:16:09,142 - #3 A
INFO  13:16:09,142 - #3 a
INFO  13:16:09,142 - #7 ;
INFO  13:16:09,142 - #3 B
INFO  13:16:09,142 - #3 b
INFO  13:16:09,142 - #7 ;
INFO  13:16:09,142 - #3 C
INFO  13:16:09,142 - #3 c
INFO  13:16:09,143 - #7 ;
INFO  13:16:09,143 - #3 int
INFO  13:16:09,143 - #3 i
INFO  13:16:09,143 - #13 ,
INFO  13:16:09,143 - #3 y
INFO  13:16:09,143 - #13 ,
INFO  13:16:09,143 - #3 z
INFO  13:16:09,143 - #7 ;
INFO  13:16:09,143 - #3 int
INFO  13:16:09,143 - #3 x
INFO  13:16:09,143 - #14 [
INFO  13:16:09,143 - #15 ]
INFO  13:16:09,143 - #7 ;
INFO  13:16:09,144 - #3 string
INFO  13:16:09,144 - #3 str1
INFO  13:16:09,144 - #13 ,
INFO  13:16:09,144 - #3 str2
INFO  13:16:09,144 - #7 ;
INFO  13:16:09,144 - #3 bool
INFO  13:16:09,144 - #3 bulin
INFO  13:16:09,144 - #7 ;
INFO  13:16:09,144 - #4 {
INFO  13:16:09,144 - #3 str2
INFO  13:16:09,144 - #8 =
INFO  13:16:09,144 - #12 abcd
INFO  13:16:09,144 - #7 ;
INFO  13:16:09,145 - #3 str1
INFO  13:16:09,145 - #8 =
INFO  13:16:09,145 - #12 abc
INFO  13:16:09,145 - #41 +
INFO  13:16:09,145 - #3 strfunc
INFO  13:16:09,145 - #19 (
INFO  13:16:09,145 - #3 str2
INFO  13:16:09,145 - #20 )
INFO  13:16:09,145 - #7 ;
INFO  13:16:09,145 - #3 str2
INFO  13:16:09,145 - #8 =
INFO  13:16:09,146 - #12 mama
INFO  13:16:09,146 - #41 +
INFO  13:16:09,146 - #12 tata
INFO  13:16:09,146 - #7 ;
INFO  13:16:09,146 - #3 strin
INFO  13:16:09,146 - #8 =
INFO  13:16:09,146 - #12 ne moze se dodeliti vrednost konstantnom stringu
INFO  13:16:09,146 - #7 ;
INFO  13:16:09,146 - #3 bulin
INFO  13:16:09,146 - #8 =
INFO  13:16:09,146 - #32 -
INFO  13:16:09,147 - #11 true
ERROR 13:16:09,147 - 
Sintaksna greska
INFO  13:16:09,147 - #7 ;
INFO  13:16:09,147 - #29 print
INFO  13:16:09,147 - #19 (
INFO  13:16:09,147 - #3 bulin
ERROR 13:16:09,147 - [Konstrukcija dodele iskaza] Izvrsen oporavak do ; u liniji 74
INFO  13:16:09,147 - #20 )
INFO  13:16:09,147 - #7 ;
INFO  13:16:09,148 - #3 a
INFO  13:16:09,148 - #8 =
INFO  13:16:09,148 - #33 new
INFO  13:16:09,148 - #3 A
INFO  13:16:09,148 - #7 ;
INFO  13:16:09,148 - #3 a
INFO  13:16:09,148 - #34 .
INFO  13:16:09,148 - #3 x
INFO  13:16:09,148 - #8 =
INFO  13:16:09,148 - #33 new
INFO  13:16:09,148 - #3 int
INFO  13:16:09,148 - #14 [
INFO  13:16:09,148 - #9 5
INFO  13:16:09,149 - #15 ]
INFO  13:16:09,149 - #7 ;
INFO  13:16:09,149 - #3 a
INFO  13:16:09,149 - #34 .
INFO  13:16:09,149 - #3 y
INFO  13:16:09,149 - #8 =
INFO  13:16:09,149 - #33 new
INFO  13:16:09,149 - #3 int
INFO  13:16:09,149 - #14 [
INFO  13:16:09,149 - #9 5
INFO  13:16:09,149 - #15 ]
INFO  13:16:09,149 - #7 ;
INFO  13:16:09,149 - #3 c
INFO  13:16:09,149 - #8 =
INFO  13:16:09,149 - #33 new
INFO  13:16:09,149 - #3 C
INFO  13:16:09,149 - #7 ;
INFO  13:16:09,149 - #3 i
INFO  13:16:09,150 - #8 =
INFO  13:16:09,150 - #3 met
INFO  13:16:09,150 - #19 (
INFO  13:16:09,150 - #3 pi
INFO  13:16:09,150 - #41 +
INFO  13:16:09,150 - #9 3
INFO  13:16:09,150 - #20 )
INFO  13:16:09,150 - #41 +
INFO  13:16:09,150 - #3 e
INFO  13:16:09,150 - #42 *
INFO  13:16:09,150 - #9 2
INFO  13:16:09,150 - #7 ;
INFO  13:16:09,150 - #3 c
INFO  13:16:09,150 - #34 .
INFO  13:16:09,150 - #3 theA
INFO  13:16:09,150 - #8 =
INFO  13:16:09,150 - #3 a
INFO  13:16:09,150 - #7 ;
INFO  13:16:09,150 - #3 c
INFO  13:16:09,150 - #34 .
INFO  13:16:09,150 - #3 x
INFO  13:16:09,151 - #8 =
INFO  13:16:09,151 - #33 new
INFO  13:16:09,151 - #3 int
INFO  13:16:09,151 - #14 [
INFO  13:16:09,151 - #9 5
INFO  13:16:09,151 - #15 ]
INFO  13:16:09,151 - #7 ;
INFO  13:16:09,151 - #3 x
INFO  13:16:09,151 - #8 =
INFO  13:16:09,151 - #33 new
INFO  13:16:09,151 - #3 int
INFO  13:16:09,151 - #14 [
INFO  13:16:09,151 - #9 3
INFO  13:16:09,151 - #15 ]
INFO  13:16:09,151 - #7 ;
INFO  13:16:09,151 - #3 i
INFO  13:16:09,152 - #8 =
INFO  13:16:09,152 - #9 0
INFO  13:16:09,152 - #7 ;
INFO  13:16:09,152 - #27 read
INFO  13:16:09,152 - #19 (
INFO  13:16:09,152 - #3 c
INFO  13:16:09,152 - #34 .
INFO  13:16:09,152 - #3 i
INFO  13:16:09,152 - #20 )
INFO  13:16:09,152 - #7 ;
INFO  13:16:09,152 - #24 while
INFO  13:16:09,152 - #19 (
INFO  13:16:09,152 - #3 i
INFO  13:16:09,152 - #39 <
INFO  13:16:09,152 - #9 5
INFO  13:16:09,152 - #20 )
INFO  13:16:09,152 - #4 {
INFO  13:16:09,152 - #27 read
INFO  13:16:09,152 - #19 (
INFO  13:16:09,152 - #3 c
INFO  13:16:09,152 - #34 .
INFO  13:16:09,152 - #3 x
INFO  13:16:09,152 - #14 [
INFO  13:16:09,152 - #3 i
INFO  13:16:09,152 - #15 ]
INFO  13:16:09,153 - #20 )
INFO  13:16:09,153 - #7 ;
INFO  13:16:09,153 - #27 read
INFO  13:16:09,153 - #19 (
INFO  13:16:09,153 - #3 c
INFO  13:16:09,153 - #34 .
INFO  13:16:09,153 - #3 theA
INFO  13:16:09,153 - #34 .
INFO  13:16:09,153 - #3 x
INFO  13:16:09,153 - #14 [
INFO  13:16:09,153 - #3 i
INFO  13:16:09,153 - #15 ]
INFO  13:16:09,153 - #20 )
INFO  13:16:09,153 - #7 ;
INFO  13:16:09,153 - #3 i
INFO  13:16:09,153 - #21 ++
INFO  13:16:09,153 - #7 ;
INFO  13:16:09,153 - #5 }
INFO  13:16:09,153 - #29 print
INFO  13:16:09,153 - #19 (
INFO  13:16:09,153 - #3 c
INFO  13:16:09,153 - #34 .
INFO  13:16:09,153 - #3 getValue
INFO  13:16:09,153 - #19 (
INFO  13:16:09,153 - #3 c
INFO  13:16:09,153 - #34 .
INFO  13:16:09,154 - #3 theA
INFO  13:16:09,154 - #34 .
INFO  13:16:09,154 - #3 x
INFO  13:16:09,154 - #14 [
INFO  13:16:09,154 - #9 0
INFO  13:16:09,154 - #15 ]
INFO  13:16:09,154 - #20 )
INFO  13:16:09,154 - #20 )
INFO  13:16:09,154 - #7 ;
INFO  13:16:09,154 - #3 c
INFO  13:16:09,154 - #34 .
INFO  13:16:09,154 - #3 theA
INFO  13:16:09,154 - #34 .
INFO  13:16:09,154 - #3 x
INFO  13:16:09,154 - #14 [
INFO  13:16:09,154 - #9 0
INFO  13:16:09,154 - #15 ]
INFO  13:16:09,154 - #8 =
INFO  13:16:09,154 - #9 1
INFO  13:16:09,154 - #7 ;
INFO  13:16:09,154 - #23 if
INFO  13:16:09,154 - #19 (
INFO  13:16:09,154 - #3 i
INFO  13:16:09,155 - #35 ==
INFO  13:16:09,155 - #9 1
INFO  13:16:09,155 - #20 )
INFO  13:16:09,155 - #3 i
INFO  13:16:09,155 - #8 =
INFO  13:16:09,155 - #3 c
INFO  13:16:09,155 - #34 .
INFO  13:16:09,155 - #3 met
INFO  13:16:09,155 - #19 (
INFO  13:16:09,155 - #9 1
INFO  13:16:09,155 - #20 )
INFO  13:16:09,155 - #41 +
INFO  13:16:09,155 - #3 b
INFO  13:16:09,155 - #34 .
INFO  13:16:09,155 - #3 getValue
INFO  13:16:09,155 - #19 (
INFO  13:16:09,155 - #3 c
INFO  13:16:09,155 - #34 .
INFO  13:16:09,155 - #3 x
INFO  13:16:09,155 - #14 [
INFO  13:16:09,155 - #9 0
INFO  13:16:09,155 - #15 ]
INFO  13:16:09,155 - #20 )
INFO  13:16:09,155 - #41 +
INFO  13:16:09,155 - #9 5
INFO  13:16:09,156 - #42 *
INFO  13:16:09,156 - #9 8
INFO  13:16:09,156 - #7 ;
INFO  13:16:09,156 - #3 b
INFO  13:16:09,156 - #34 .
INFO  13:16:09,156 - #3 getValue
INFO  13:16:09,156 - #19 (
INFO  13:16:09,156 - #3 b
INFO  13:16:09,156 - #34 .
INFO  13:16:09,156 - #3 y
INFO  13:16:09,156 - #14 [
INFO  13:16:09,156 - #3 i
INFO  13:16:09,156 - #15 ]
INFO  13:16:09,156 - #20 )
INFO  13:16:09,156 - #7 ;
INFO  13:16:09,156 - #3 b
INFO  13:16:09,156 - #34 .
INFO  13:16:09,156 - #3 pr
INFO  13:16:09,156 - #19 (
INFO  13:16:09,157 - #20 )
INFO  13:16:09,157 - #7 ;
INFO  13:16:09,157 - #3 i
INFO  13:16:09,157 - #8 =
INFO  13:16:09,157 - #9 4
INFO  13:16:09,157 - #42 *
INFO  13:16:09,157 - #19 (
INFO  13:16:09,157 - #9 5
INFO  13:16:09,157 - #41 +
INFO  13:16:09,157 - #9 6
INFO  13:16:09,157 - #41 +
INFO  13:16:09,157 - #3 i
INFO  13:16:09,157 - #20 )
INFO  13:16:09,157 - #41 +
INFO  13:16:09,157 - #3 i
INFO  13:16:09,157 - #41 +
INFO  13:16:09,157 - #3 met
INFO  13:16:09,157 - #19 (
INFO  13:16:09,157 - #9 2
INFO  13:16:09,157 - #20 )
INFO  13:16:09,158 - #7 ;
INFO  13:16:09,158 - #3 chr
INFO  13:16:09,158 - #19 (
INFO  13:16:09,158 - #9 1
INFO  13:16:09,158 - #20 )
INFO  13:16:09,158 - #7 ;
INFO  13:16:09,158 - #3 i
INFO  13:16:09,158 - #8 =
INFO  13:16:09,158 - #3 ord
INFO  13:16:09,158 - #19 (
INFO  13:16:09,158 - #10 1
INFO  13:16:09,158 - #20 )
INFO  13:16:09,158 - #7 ;
INFO  13:16:09,158 - #29 print
INFO  13:16:09,158 - #19 (
INFO  13:16:09,158 - #9 4
INFO  13:16:09,158 - #13 ,
INFO  13:16:09,158 - #9 1
INFO  13:16:09,158 - #20 )
INFO  13:16:09,158 - #7 ;
INFO  13:16:09,158 - #3 a
INFO  13:16:09,159 - #8 =
INFO  13:16:09,159 - #3 b
INFO  13:16:09,159 - #7 ;
INFO  13:16:09,159 - #23 if
INFO  13:16:09,159 - #19 (
INFO  13:16:09,159 - #11 true
ERROR 13:16:09,159 - 
Sintaksna greska
INFO  13:16:09,159 - #20 )
INFO  13:16:09,159 - #3 i
INFO  13:16:09,159 - #21 ++
INFO  13:16:09,159 - #7 ;
ERROR 13:16:09,159 - [Logicki izraz] Izvrsen oporavak do ) u liniji 105
INFO  13:16:09,159 - #24 while
INFO  13:16:09,159 - #19 (
INFO  13:16:09,159 - #3 str2
INFO  13:16:09,159 - #35 ==
INFO  13:16:09,160 - #12 kraj
INFO  13:16:09,160 - #30 ||
INFO  13:16:09,160 - #3 str1
INFO  13:16:09,160 - #35 ==
INFO  13:16:09,160 - #12 kraj
INFO  13:16:09,160 - #20 )
INFO  13:16:09,160 - #4 {
INFO  13:16:09,160 - #3 c
INFO  13:16:09,160 - #34 .
INFO  13:16:09,160 - #3 theA
INFO  13:16:09,160 - #34 .
INFO  13:16:09,160 - #3 x
INFO  13:16:09,160 - #14 [
INFO  13:16:09,160 - #3 i
INFO  13:16:09,160 - #15 ]
INFO  13:16:09,160 - #8 =
INFO  13:16:09,160 - #3 a
INFO  13:16:09,160 - #34 .
INFO  13:16:09,160 - #3 x
INFO  13:16:09,160 - #14 [
INFO  13:16:09,160 - #3 i
INFO  13:16:09,160 - #15 ]
INFO  13:16:09,160 - #7 ;
INFO  13:16:09,160 - #23 if
INFO  13:16:09,160 - #19 (
INFO  13:16:09,160 - #3 b
INFO  13:16:09,160 - #34 .
INFO  13:16:09,160 - #3 theAA
INFO  13:16:09,161 - #34 .
INFO  13:16:09,161 - #3 y
INFO  13:16:09,161 - #14 [
INFO  13:16:09,161 - #3 i
INFO  13:16:09,161 - #15 ]
INFO  13:16:09,161 - #35 ==
INFO  13:16:09,161 - #3 c
INFO  13:16:09,161 - #34 .
INFO  13:16:09,161 - #3 theA
INFO  13:16:09,161 - #34 .
INFO  13:16:09,161 - #3 x
INFO  13:16:09,161 - #14 [
INFO  13:16:09,161 - #3 i
INFO  13:16:09,161 - #15 ]
INFO  13:16:09,161 - #31 &&
INFO  13:16:09,161 - #3 c
INFO  13:16:09,161 - #34 .
INFO  13:16:09,161 - #3 pr1
INFO  13:16:09,161 - #19 (
INFO  13:16:09,161 - #20 )
INFO  13:16:09,161 - #20 )
INFO  13:16:09,161 - #25 break
INFO  13:16:09,161 - #7 ;
INFO  13:16:09,161 - #27 read
INFO  13:16:09,161 - #19 (
INFO  13:16:09,162 - #3 str1
INFO  13:16:09,162 - #20 )
INFO  13:16:09,162 - #7 ;
INFO  13:16:09,162 - #27 read
INFO  13:16:09,162 - #19 (
INFO  13:16:09,162 - #3 str2
INFO  13:16:09,162 - #20 )
INFO  13:16:09,162 - #7 ;
INFO  13:16:09,165 - #5 }
INFO  13:16:09,165 - #5 }
INFO  13:16:09,165 - #5 }
ERROR 13:16:09,165 - Parsiranje nije uspesno zavrseno!
