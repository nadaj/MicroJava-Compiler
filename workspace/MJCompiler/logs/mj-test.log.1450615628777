INFO  13:32:37,080 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  13:32:37,085 - #2 program
INFO  13:32:37,085 - #3 Program
INFO  13:32:37,085 - #16 class
INFO  13:32:37,086 - #3 A
INFO  13:32:37,086 - #4 {
INFO  13:32:37,086 - #3 int
INFO  13:32:37,086 - #3 x
INFO  13:32:37,086 - #14 [
INFO  13:32:37,086 - #15 ]
INFO  13:32:37,086 - #13 ,
INFO  13:32:37,086 - #3 y
INFO  13:32:37,086 - #14 [
INFO  13:32:37,086 - #15 ]
INFO  13:32:37,086 - #7 ;
INFO  13:32:37,086 - #4 {
INFO  13:32:37,086 - #3 int
INFO  13:32:37,086 - #3 pr
INFO  13:32:37,087 - #19 (
INFO  13:32:37,087 - #20 )
INFO  13:32:37,087 - #4 {
INFO  13:32:37,087 - #26 return
INFO  13:32:37,087 - #9 1
INFO  13:32:37,087 - #7 ;
INFO  13:32:37,087 - #5 }
INFO  13:32:37,087 - #3 int
INFO  13:32:37,087 - #3 pr
INFO  13:32:37,087 - #19 (
INFO  13:32:37,087 - #20 )
INFO  13:32:37,087 - #4 {
INFO  13:32:37,087 - #26 return
INFO  13:32:37,088 - #9 0
INFO  13:32:37,088 - #7 ;
INFO  13:32:37,088 - #5 }
INFO  13:32:37,088 - #3 int
INFO  13:32:37,088 - #3 pr1
INFO  13:32:37,088 - #19 (
INFO  13:32:37,088 - #20 )
INFO  13:32:37,088 - #4 {
INFO  13:32:37,088 - #26 return
INFO  13:32:37,088 - #3 pr
INFO  13:32:37,088 - #19 (
INFO  13:32:37,089 - #20 )
INFO  13:32:37,089 - #7 ;
INFO  13:32:37,089 - #5 }
INFO  13:32:37,089 - #5 }
INFO  13:32:37,089 - #5 }
INFO  13:32:37,089 - #6 const
INFO  13:32:37,089 - #3 int
INFO  13:32:37,089 - #3 pi
INFO  13:32:37,089 - #8 =
INFO  13:32:37,089 - #9 3
INFO  13:32:37,089 - #13 ,
INFO  13:32:37,089 - #3 e
INFO  13:32:37,089 - #8 =
INFO  13:32:37,089 - #9 2
INFO  13:32:37,089 - #7 ;
INFO  13:32:37,090 - #6 const
INFO  13:32:37,090 - #3 string
INFO  13:32:37,090 - #3 strin
INFO  13:32:37,090 - #8 =
INFO  13:32:37,090 - #12 aaa
INFO  13:32:37,090 - #7 ;
INFO  13:32:37,090 - #16 class
INFO  13:32:37,090 - #3 B
INFO  13:32:37,090 - #17 extends
INFO  13:32:37,090 - #3 A
INFO  13:32:37,090 - #4 {
INFO  13:32:37,090 - #3 int
INFO  13:32:37,090 - #3 i
INFO  13:32:37,090 - #7 ;
INFO  13:32:37,090 - #3 int
INFO  13:32:37,090 - #3 x
INFO  13:32:37,091 - #14 [
INFO  13:32:37,091 - #15 ]
INFO  13:32:37,091 - #7 ;
INFO  13:32:37,091 - #3 A
INFO  13:32:37,091 - #3 theAA
INFO  13:32:37,091 - #7 ;
INFO  13:32:37,091 - #4 {
INFO  13:32:37,091 - #18 void
INFO  13:32:37,091 - #3 voidtest
INFO  13:32:37,091 - #19 (
INFO  13:32:37,091 - #3 int
INFO  13:32:37,091 - #3 a
INFO  13:32:37,091 - #13 ,
INFO  13:32:37,091 - #3 char
INFO  13:32:37,091 - #3 b
INFO  13:32:37,091 - #20 )
INFO  13:32:37,091 - #3 int
INFO  13:32:37,091 - #3 c
INFO  13:32:37,091 - #7 ;
INFO  13:32:37,091 - #4 {
INFO  13:32:37,092 - #27 read
INFO  13:32:37,092 - #19 (
INFO  13:32:37,092 - #3 a
INFO  13:32:37,092 - #20 )
INFO  13:32:37,092 - #7 ;
INFO  13:32:37,092 - #27 read
INFO  13:32:37,092 - #19 (
INFO  13:32:37,092 - #3 b
INFO  13:32:37,092 - #20 )
INFO  13:32:37,092 - #7 ;
INFO  13:32:37,092 - #27 read
INFO  13:32:37,092 - #19 (
INFO  13:32:37,092 - #3 c
INFO  13:32:37,092 - #20 )
INFO  13:32:37,092 - #7 ;
INFO  13:32:37,092 - #5 }
INFO  13:32:37,092 - #3 int
INFO  13:32:37,092 - #3 met
INFO  13:32:37,092 - #19 (
INFO  13:32:37,092 - #3 int
INFO  13:32:37,092 - #3 a
INFO  13:32:37,093 - #20 )
INFO  13:32:37,093 - #4 {
INFO  13:32:37,093 - #26 return
INFO  13:32:37,093 - #3 a
INFO  13:32:37,093 - #41 +
INFO  13:32:37,093 - #9 1
INFO  13:32:37,093 - #7 ;
INFO  13:32:37,093 - #5 }
INFO  13:32:37,093 - #3 int
INFO  13:32:37,093 - #3 getValue
INFO  13:32:37,093 - #19 (
INFO  13:32:37,093 - #3 int
INFO  13:32:37,093 - #3 a
INFO  13:32:37,093 - #20 )
INFO  13:32:37,093 - #3 int
INFO  13:32:37,093 - #3 b
INFO  13:32:37,093 - #7 ;
INFO  13:32:37,093 - #3 bool
INFO  13:32:37,094 - #3 c
INFO  13:32:37,094 - #7 ;
INFO  13:32:37,094 - #4 {
INFO  13:32:37,094 - #3 this
INFO  13:32:37,094 - #34 .
INFO  13:32:37,094 - #3 i
INFO  13:32:37,094 - #8 =
INFO  13:32:37,094 - #9 6
INFO  13:32:37,094 - #7 ;
INFO  13:32:37,094 - #26 return
INFO  13:32:37,094 - #3 this
INFO  13:32:37,094 - #34 .
INFO  13:32:37,094 - #3 i
INFO  13:32:37,094 - #41 +
INFO  13:32:37,094 - #3 this
INFO  13:32:37,094 - #34 .
INFO  13:32:37,094 - #3 x
INFO  13:32:37,094 - #14 [
INFO  13:32:37,094 - #9 0
INFO  13:32:37,095 - #15 ]
INFO  13:32:37,095 - #41 +
INFO  13:32:37,095 - #3 this
INFO  13:32:37,095 - #34 .
INFO  13:32:37,095 - #3 met
INFO  13:32:37,095 - #19 (
INFO  13:32:37,095 - #3 a
INFO  13:32:37,095 - #20 )
INFO  13:32:37,095 - #7 ;
INFO  13:32:37,095 - #5 }
INFO  13:32:37,095 - #5 }
INFO  13:32:37,095 - #5 }
INFO  13:32:37,095 - #16 class
INFO  13:32:37,095 - #3 C
INFO  13:32:37,095 - #17 extends
INFO  13:32:37,095 - #3 B
INFO  13:32:37,095 - #4 {
INFO  13:32:37,095 - #3 A
INFO  13:32:37,095 - #3 theA
INFO  13:32:37,096 - #7 ;
INFO  13:32:37,096 - #3 string
INFO  13:32:37,096 - #3 a
INFO  13:32:37,096 - #8 =
ERROR 13:32:37,096 - 
Sintaksna greska
INFO  13:32:37,096 - #12 bas je roze i zut
INFO  13:32:37,096 - #7 ;
INFO  13:32:37,096 - #4 {
INFO  13:32:37,097 - #18 void
INFO  13:32:37,097 - #3 glupost
ERROR 13:32:37,097 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do ; u liniji 46
INFO  13:32:37,097 - #19 (
INFO  13:32:37,097 - #3 int
INFO  13:32:37,097 - #13 ,
ERROR 13:32:37,097 - 
Sintaksna greska
INFO  13:32:37,097 - #3 m
INFO  13:32:37,097 - #20 )
INFO  13:32:37,097 - #3 int
INFO  13:32:37,097 - #3 i
INFO  13:32:37,097 - #13 ,
ERROR 13:32:37,097 - [Deklaracija form. parametra funkcije] Izvrsen oporavak do ) u liniji 49
INFO  13:32:37,097 - #3 bool
INFO  13:32:37,097 - #3 c
ERROR 13:32:37,097 - 
Sintaksna greska
INFO  13:32:37,098 - #4 {
INFO  13:32:37,098 - #26 return
INFO  13:32:37,098 - #3 i
INFO  13:32:37,098 - #41 +
ERROR 13:32:37,098 - [Deklaracija lokalne promenljive] Izvrsen oporavak do { u liniji 49
INFO  13:32:37,098 - #3 c
INFO  13:32:37,098 - #7 ;
INFO  13:32:37,098 - #5 }
INFO  13:32:37,098 - #5 }
INFO  13:32:37,098 - #5 }
INFO  13:32:37,098 - #16 class
INFO  13:32:37,099 - #3 E
INFO  13:32:37,099 - #17 extends
INFO  13:32:37,099 - #4 {
ERROR 13:32:37,099 - 
Sintaksna greska
INFO  13:32:37,099 - #3 bool
INFO  13:32:37,099 - #3 b
INFO  13:32:37,099 - #7 ;
ERROR 13:32:37,099 - [Deklaracija prosirenja natklase] Izvrsen oporavak do { u liniji 56
INFO  13:32:37,099 - #3 C
INFO  13:32:37,099 - #13 ,
ERROR 13:32:37,099 - 
Sintaksna greska
INFO  13:32:37,099 - #3 cc
INFO  13:32:37,099 - #13 ,
INFO  13:32:37,099 - #3 char
INFO  13:32:37,099 - #3 e
INFO  13:32:37,100 - #7 ;
INFO  13:32:37,100 - #5 }
ERROR 13:32:37,100 - [Deklaracija lokalne promenljive] Izvrsen oporavak do { u liniji 58
INFO  13:32:37,100 - #4 {
INFO  13:32:37,100 - #3 int
INFO  13:32:37,100 - #3 met
INFO  13:32:37,100 - #19 (
INFO  13:32:37,100 - #3 int
INFO  13:32:37,100 - #3 par
INFO  13:32:37,100 - #20 )
INFO  13:32:37,100 - #4 {
INFO  13:32:37,100 - #26 return
INFO  13:32:37,100 - #3 par
INFO  13:32:37,100 - #32 -
INFO  13:32:37,100 - #9 1
INFO  13:32:37,101 - #7 ;
INFO  13:32:37,101 - #5 }
INFO  13:32:37,101 - #3 string
INFO  13:32:37,101 - #3 strfunc
INFO  13:32:37,101 - #19 (
INFO  13:32:37,101 - #3 string
INFO  13:32:37,101 - #3 s
INFO  13:32:37,101 - #20 )
INFO  13:32:37,101 - #4 {
INFO  13:32:37,101 - #26 return
INFO  13:32:37,101 - #3 s
INFO  13:32:37,101 - #41 +
INFO  13:32:37,102 - #12 aa
INFO  13:32:37,102 - #7 ;
INFO  13:32:37,102 - #5 }
INFO  13:32:37,102 - #18 void
INFO  13:32:37,102 - #3 main
INFO  13:32:37,102 - #19 (
INFO  13:32:37,102 - #20 )
INFO  13:32:37,102 - #3 A
INFO  13:32:37,102 - #3 a
INFO  13:32:37,102 - #7 ;
INFO  13:32:37,102 - #3 B
INFO  13:32:37,102 - #3 b
INFO  13:32:37,102 - #7 ;
INFO  13:32:37,102 - #3 C
INFO  13:32:37,103 - #3 c
INFO  13:32:37,103 - #7 ;
INFO  13:32:37,103 - #3 int
INFO  13:32:37,103 - #3 i
INFO  13:32:37,103 - #13 ,
INFO  13:32:37,103 - #3 y
INFO  13:32:37,103 - #13 ,
INFO  13:32:37,103 - #3 z
INFO  13:32:37,103 - #7 ;
INFO  13:32:37,103 - #3 int
INFO  13:32:37,103 - #3 x
INFO  13:32:37,103 - #14 [
INFO  13:32:37,103 - #15 ]
INFO  13:32:37,103 - #7 ;
INFO  13:32:37,103 - #3 string
INFO  13:32:37,104 - #3 str1
INFO  13:32:37,104 - #13 ,
INFO  13:32:37,104 - #3 str2
INFO  13:32:37,104 - #7 ;
INFO  13:32:37,104 - #3 bool
INFO  13:32:37,104 - #3 bulin
INFO  13:32:37,104 - #7 ;
INFO  13:32:37,104 - #4 {
INFO  13:32:37,104 - #3 str2
INFO  13:32:37,104 - #8 =
INFO  13:32:37,104 - #12 abcd
INFO  13:32:37,104 - #7 ;
INFO  13:32:37,104 - #3 str1
INFO  13:32:37,104 - #8 =
INFO  13:32:37,104 - #12 abc
INFO  13:32:37,105 - #41 +
INFO  13:32:37,105 - #3 strfunc
INFO  13:32:37,105 - #19 (
INFO  13:32:37,105 - #3 str2
INFO  13:32:37,105 - #20 )
INFO  13:32:37,105 - #7 ;
INFO  13:32:37,105 - #3 str2
INFO  13:32:37,105 - #8 =
INFO  13:32:37,105 - #12 mama
INFO  13:32:37,105 - #41 +
INFO  13:32:37,105 - #12 tata
INFO  13:32:37,105 - #7 ;
INFO  13:32:37,106 - #3 strin
INFO  13:32:37,106 - #8 =
INFO  13:32:37,106 - #12 ne moze se dodeliti vrednost konstantnom stringu
INFO  13:32:37,106 - #7 ;
INFO  13:32:37,106 - #3 bulin
INFO  13:32:37,106 - #8 =
INFO  13:32:37,106 - #32 -
INFO  13:32:37,106 - #11 true
ERROR 13:32:37,106 - 
Sintaksna greska
INFO  13:32:37,106 - #7 ;
INFO  13:32:37,106 - #29 print
INFO  13:32:37,106 - #19 (
INFO  13:32:37,106 - #3 bulin
ERROR 13:32:37,106 - [Konstrukcija dodele iskaza] Izvrsen oporavak do ; u liniji 74
INFO  13:32:37,107 - #20 )
INFO  13:32:37,107 - #7 ;
INFO  13:32:37,107 - #3 a
INFO  13:32:37,107 - #8 =
INFO  13:32:37,107 - #33 new
INFO  13:32:37,107 - #3 A
INFO  13:32:37,107 - #7 ;
INFO  13:32:37,107 - #3 a
INFO  13:32:37,107 - #34 .
INFO  13:32:37,107 - #3 x
INFO  13:32:37,107 - #8 =
INFO  13:32:37,107 - #33 new
INFO  13:32:37,107 - #3 int
INFO  13:32:37,107 - #14 [
INFO  13:32:37,107 - #9 5
INFO  13:32:37,107 - #15 ]
INFO  13:32:37,107 - #7 ;
INFO  13:32:37,107 - #3 a
INFO  13:32:37,107 - #34 .
INFO  13:32:37,107 - #3 y
INFO  13:32:37,107 - #8 =
INFO  13:32:37,108 - #33 new
INFO  13:32:37,108 - #3 int
INFO  13:32:37,108 - #14 [
INFO  13:32:37,108 - #9 5
INFO  13:32:37,108 - #15 ]
INFO  13:32:37,108 - #7 ;
INFO  13:32:37,108 - #3 c
INFO  13:32:37,108 - #8 =
INFO  13:32:37,108 - #33 new
INFO  13:32:37,108 - #3 C
INFO  13:32:37,108 - #7 ;
INFO  13:32:37,108 - #3 i
INFO  13:32:37,108 - #8 =
INFO  13:32:37,108 - #3 met
INFO  13:32:37,108 - #19 (
INFO  13:32:37,108 - #3 pi
INFO  13:32:37,108 - #41 +
INFO  13:32:37,108 - #9 3
INFO  13:32:37,108 - #20 )
INFO  13:32:37,108 - #41 +
INFO  13:32:37,108 - #3 e
INFO  13:32:37,108 - #42 *
INFO  13:32:37,108 - #9 2
INFO  13:32:37,108 - #7 ;
INFO  13:32:37,109 - #3 c
INFO  13:32:37,109 - #34 .
INFO  13:32:37,109 - #3 theA
INFO  13:32:37,109 - #8 =
INFO  13:32:37,109 - #3 a
INFO  13:32:37,109 - #7 ;
INFO  13:32:37,109 - #3 c
INFO  13:32:37,109 - #34 .
INFO  13:32:37,109 - #3 x
INFO  13:32:37,109 - #8 =
INFO  13:32:37,109 - #33 new
INFO  13:32:37,109 - #3 int
INFO  13:32:37,109 - #14 [
INFO  13:32:37,109 - #9 5
INFO  13:32:37,109 - #15 ]
INFO  13:32:37,109 - #7 ;
INFO  13:32:37,109 - #3 x
INFO  13:32:37,109 - #8 =
INFO  13:32:37,109 - #33 new
INFO  13:32:37,109 - #3 int
INFO  13:32:37,110 - #14 [
INFO  13:32:37,110 - #9 3
INFO  13:32:37,110 - #15 ]
INFO  13:32:37,110 - #7 ;
INFO  13:32:37,110 - #3 i
INFO  13:32:37,110 - #8 =
INFO  13:32:37,110 - #9 0
INFO  13:32:37,110 - #7 ;
INFO  13:32:37,110 - #27 read
INFO  13:32:37,110 - #19 (
INFO  13:32:37,110 - #3 c
INFO  13:32:37,110 - #34 .
INFO  13:32:37,110 - #3 i
INFO  13:32:37,110 - #20 )
INFO  13:32:37,110 - #7 ;
INFO  13:32:37,110 - #24 while
INFO  13:32:37,110 - #19 (
INFO  13:32:37,110 - #3 i
INFO  13:32:37,110 - #39 <
INFO  13:32:37,110 - #9 5
INFO  13:32:37,110 - #20 )
INFO  13:32:37,110 - #4 {
INFO  13:32:37,111 - #27 read
INFO  13:32:37,111 - #19 (
INFO  13:32:37,111 - #3 c
INFO  13:32:37,111 - #34 .
INFO  13:32:37,111 - #3 x
INFO  13:32:37,111 - #14 [
INFO  13:32:37,111 - #3 i
INFO  13:32:37,111 - #15 ]
INFO  13:32:37,111 - #20 )
INFO  13:32:37,111 - #7 ;
INFO  13:32:37,111 - #27 read
INFO  13:32:37,111 - #19 (
INFO  13:32:37,111 - #3 c
INFO  13:32:37,111 - #34 .
INFO  13:32:37,111 - #3 theA
INFO  13:32:37,111 - #34 .
INFO  13:32:37,111 - #3 x
INFO  13:32:37,111 - #14 [
INFO  13:32:37,111 - #3 i
INFO  13:32:37,111 - #15 ]
INFO  13:32:37,111 - #20 )
INFO  13:32:37,111 - #7 ;
INFO  13:32:37,111 - #3 i
INFO  13:32:37,111 - #21 ++
INFO  13:32:37,111 - #7 ;
INFO  13:32:37,111 - #5 }
INFO  13:32:37,112 - #29 print
INFO  13:32:37,112 - #19 (
INFO  13:32:37,112 - #3 c
INFO  13:32:37,112 - #34 .
INFO  13:32:37,112 - #3 getValue
INFO  13:32:37,112 - #19 (
INFO  13:32:37,112 - #3 c
INFO  13:32:37,112 - #34 .
INFO  13:32:37,112 - #3 theA
INFO  13:32:37,112 - #34 .
INFO  13:32:37,112 - #3 x
INFO  13:32:37,112 - #14 [
INFO  13:32:37,112 - #9 0
INFO  13:32:37,112 - #15 ]
INFO  13:32:37,112 - #20 )
INFO  13:32:37,112 - #20 )
INFO  13:32:37,112 - #7 ;
INFO  13:32:37,112 - #3 c
INFO  13:32:37,112 - #34 .
INFO  13:32:37,112 - #3 theA
INFO  13:32:37,112 - #34 .
INFO  13:32:37,112 - #3 x
INFO  13:32:37,112 - #14 [
INFO  13:32:37,112 - #9 0
INFO  13:32:37,112 - #15 ]
INFO  13:32:37,112 - #8 =
INFO  13:32:37,113 - #9 1
INFO  13:32:37,113 - #7 ;
INFO  13:32:37,113 - #23 if
INFO  13:32:37,113 - #19 (
INFO  13:32:37,113 - #3 i
INFO  13:32:37,113 - #35 ==
INFO  13:32:37,113 - #9 1
INFO  13:32:37,113 - #20 )
INFO  13:32:37,113 - #3 i
INFO  13:32:37,113 - #8 =
INFO  13:32:37,113 - #3 c
INFO  13:32:37,113 - #34 .
INFO  13:32:37,113 - #3 met
INFO  13:32:37,113 - #19 (
INFO  13:32:37,113 - #9 1
INFO  13:32:37,113 - #20 )
INFO  13:32:37,113 - #41 +
INFO  13:32:37,113 - #3 b
INFO  13:32:37,113 - #34 .
INFO  13:32:37,113 - #3 getValue
INFO  13:32:37,113 - #19 (
INFO  13:32:37,113 - #3 c
INFO  13:32:37,113 - #34 .
INFO  13:32:37,114 - #3 x
INFO  13:32:37,114 - #14 [
INFO  13:32:37,114 - #9 0
INFO  13:32:37,114 - #15 ]
INFO  13:32:37,114 - #20 )
INFO  13:32:37,114 - #41 +
INFO  13:32:37,114 - #9 5
INFO  13:32:37,114 - #42 *
INFO  13:32:37,114 - #9 8
INFO  13:32:37,114 - #7 ;
INFO  13:32:37,114 - #3 b
INFO  13:32:37,114 - #34 .
INFO  13:32:37,114 - #3 getValue
INFO  13:32:37,114 - #19 (
INFO  13:32:37,114 - #3 b
INFO  13:32:37,114 - #34 .
INFO  13:32:37,114 - #3 y
INFO  13:32:37,114 - #14 [
INFO  13:32:37,114 - #3 i
INFO  13:32:37,114 - #15 ]
INFO  13:32:37,115 - #20 )
INFO  13:32:37,115 - #7 ;
INFO  13:32:37,115 - #3 b
INFO  13:32:37,115 - #34 .
INFO  13:32:37,115 - #3 pr
INFO  13:32:37,115 - #19 (
INFO  13:32:37,115 - #20 )
INFO  13:32:37,115 - #7 ;
INFO  13:32:37,115 - #3 i
INFO  13:32:37,115 - #8 =
INFO  13:32:37,115 - #9 4
INFO  13:32:37,115 - #42 *
INFO  13:32:37,115 - #19 (
INFO  13:32:37,115 - #9 5
INFO  13:32:37,115 - #41 +
INFO  13:32:37,115 - #9 6
INFO  13:32:37,115 - #41 +
INFO  13:32:37,115 - #3 i
INFO  13:32:37,115 - #20 )
INFO  13:32:37,115 - #41 +
INFO  13:32:37,115 - #3 i
INFO  13:32:37,115 - #41 +
INFO  13:32:37,115 - #3 met
INFO  13:32:37,115 - #19 (
INFO  13:32:37,115 - #9 2
INFO  13:32:37,116 - #20 )
INFO  13:32:37,116 - #7 ;
INFO  13:32:37,116 - #3 chr
INFO  13:32:37,116 - #19 (
INFO  13:32:37,116 - #9 1
INFO  13:32:37,116 - #20 )
INFO  13:32:37,116 - #7 ;
INFO  13:32:37,116 - #3 i
INFO  13:32:37,116 - #8 =
INFO  13:32:37,116 - #3 ord
INFO  13:32:37,116 - #19 (
INFO  13:32:37,116 - #10 1
INFO  13:32:37,116 - #20 )
INFO  13:32:37,116 - #7 ;
INFO  13:32:37,116 - #29 print
INFO  13:32:37,116 - #19 (
INFO  13:32:37,116 - #9 4
INFO  13:32:37,116 - #13 ,
INFO  13:32:37,117 - #9 1
INFO  13:32:37,117 - #20 )
INFO  13:32:37,117 - #7 ;
INFO  13:32:37,117 - #3 a
INFO  13:32:37,117 - #8 =
INFO  13:32:37,117 - #3 b
INFO  13:32:37,117 - #7 ;
INFO  13:32:37,117 - #23 if
INFO  13:32:37,117 - #19 (
INFO  13:32:37,117 - #11 true
ERROR 13:32:37,117 - 
Sintaksna greska
INFO  13:32:37,117 - #20 )
INFO  13:32:37,117 - #3 i
INFO  13:32:37,117 - #21 ++
INFO  13:32:37,117 - #7 ;
ERROR 13:32:37,118 - [Logicki izraz] Izvrsen oporavak do ) u liniji 105
INFO  13:32:37,118 - #24 while
INFO  13:32:37,118 - #19 (
INFO  13:32:37,118 - #3 str2
INFO  13:32:37,118 - #35 ==
INFO  13:32:37,118 - #12 kraj
INFO  13:32:37,118 - #30 ||
INFO  13:32:37,118 - #3 str1
INFO  13:32:37,118 - #35 ==
INFO  13:32:37,118 - #12 kraj
INFO  13:32:37,118 - #20 )
INFO  13:32:37,118 - #4 {
INFO  13:32:37,118 - #3 c
INFO  13:32:37,118 - #34 .
INFO  13:32:37,118 - #3 theA
INFO  13:32:37,118 - #34 .
INFO  13:32:37,118 - #3 x
INFO  13:32:37,118 - #14 [
INFO  13:32:37,118 - #3 i
INFO  13:32:37,118 - #15 ]
INFO  13:32:37,118 - #8 =
INFO  13:32:37,119 - #3 a
INFO  13:32:37,119 - #34 .
INFO  13:32:37,119 - #3 x
INFO  13:32:37,119 - #14 [
INFO  13:32:37,119 - #3 i
INFO  13:32:37,119 - #15 ]
INFO  13:32:37,119 - #7 ;
INFO  13:32:37,119 - #23 if
INFO  13:32:37,119 - #19 (
INFO  13:32:37,119 - #3 b
INFO  13:32:37,119 - #34 .
INFO  13:32:37,119 - #3 theAA
INFO  13:32:37,119 - #34 .
INFO  13:32:37,119 - #3 y
INFO  13:32:37,119 - #14 [
INFO  13:32:37,119 - #3 i
INFO  13:32:37,119 - #15 ]
INFO  13:32:37,119 - #35 ==
INFO  13:32:37,119 - #3 c
INFO  13:32:37,119 - #34 .
INFO  13:32:37,119 - #3 theA
INFO  13:32:37,119 - #34 .
INFO  13:32:37,119 - #3 x
INFO  13:32:37,119 - #14 [
INFO  13:32:37,119 - #3 i
INFO  13:32:37,119 - #15 ]
INFO  13:32:37,119 - #31 &&
INFO  13:32:37,120 - #3 c
INFO  13:32:37,120 - #34 .
INFO  13:32:37,120 - #3 pr1
INFO  13:32:37,120 - #19 (
INFO  13:32:37,120 - #20 )
INFO  13:32:37,120 - #20 )
INFO  13:32:37,120 - #25 break
INFO  13:32:37,120 - #7 ;
INFO  13:32:37,120 - #27 read
INFO  13:32:37,120 - #19 (
INFO  13:32:37,120 - #3 str1
INFO  13:32:37,120 - #20 )
INFO  13:32:37,120 - #7 ;
INFO  13:32:37,120 - #27 read
INFO  13:32:37,120 - #19 (
INFO  13:32:37,120 - #3 str2
INFO  13:32:37,120 - #20 )
INFO  13:32:37,120 - #7 ;
INFO  13:32:37,120 - #5 }
INFO  13:32:37,123 - #5 }
INFO  13:32:37,123 - #5 }
ERROR 13:32:37,123 - Parsiranje nije uspesno zavrseno!
