INFO  16:47:45,276 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  16:47:45,280 - #2 program
INFO  16:47:45,280 - #3 Program
INFO  16:47:45,280 - #6 const
INFO  16:47:45,280 - #3 int
INFO  16:47:45,280 - #3 N
INFO  16:47:45,281 - #8 =
INFO  16:47:45,281 - #9 2
INFO  16:47:45,281 - #7 ;
INFO  16:47:45,281 - #6 const
INFO  16:47:45,281 - #3 char
INFO  16:47:45,281 - #3 c
INFO  16:47:45,281 - #8 =
INFO  16:47:45,281 - #10 a
INFO  16:47:45,281 - #7 ;
INFO  16:47:45,281 - #6 const
INFO  16:47:45,281 - #3 bool
INFO  16:47:45,282 - #3 flag
INFO  16:47:45,282 - #8 =
INFO  16:47:45,282 - #11 true
INFO  16:47:45,282 - #7 ;
INFO  16:47:45,282 - #6 const
INFO  16:47:45,282 - #3 string
INFO  16:47:45,282 - #3 s
INFO  16:47:45,282 - #8 =
INFO  16:47:45,282 - #12 ispravan ulaz
INFO  16:47:45,282 - #7 ;
INFO  16:47:45,282 - #3 int
INFO  16:47:45,282 - #3 globalna_pr
INFO  16:47:45,282 - #13 ,
INFO  16:47:45,283 - #3 glob_niz
INFO  16:47:45,283 - #14 [
INFO  16:47:45,283 - #15 ]
INFO  16:47:45,283 - #7 ;
INFO  16:47:45,283 - #3 bool
INFO  16:47:45,283 - #3 flag_global
INFO  16:47:45,283 - #7 ;
INFO  16:47:45,283 - #3 char
INFO  16:47:45,283 - #3 char_global
INFO  16:47:45,283 - #7 ;
INFO  16:47:45,283 - #16 class
INFO  16:47:45,283 - #3 A
INFO  16:47:45,283 - #4 {
INFO  16:47:45,283 - #5 }
INFO  16:47:45,284 - #16 class
INFO  16:47:45,284 - #3 B
INFO  16:47:45,284 - #17 extends
INFO  16:47:45,284 - #3 A
INFO  16:47:45,284 - #4 {
INFO  16:47:45,284 - #5 }
INFO  16:47:45,284 - #16 class
INFO  16:47:45,284 - #3 C
INFO  16:47:45,284 - #4 {
INFO  16:47:45,284 - #3 int
INFO  16:47:45,284 - #3 c_int
INFO  16:47:45,284 - #13 ,
INFO  16:47:45,284 - #3 c_arr
INFO  16:47:45,284 - #14 [
INFO  16:47:45,284 - #15 ]
INFO  16:47:45,284 - #7 ;
INFO  16:47:45,284 - #3 bool
INFO  16:47:45,285 - #3 c_bool
INFO  16:47:45,285 - #7 ;
INFO  16:47:45,285 - #3 char
INFO  16:47:45,285 - #3 c_char
INFO  16:47:45,285 - #7 ;
INFO  16:47:45,285 - #5 }
INFO  16:47:45,285 - #16 class
INFO  16:47:45,285 - #3 D
INFO  16:47:45,285 - #17 extends
INFO  16:47:45,285 - #3 C
INFO  16:47:45,285 - #4 {
INFO  16:47:45,285 - #3 int
INFO  16:47:45,285 - #3 d_int
INFO  16:47:45,285 - #13 ,
INFO  16:47:45,285 - #3 d_arr
INFO  16:47:45,286 - #14 [
INFO  16:47:45,286 - #15 ]
INFO  16:47:45,286 - #7 ;
INFO  16:47:45,286 - #3 bool
INFO  16:47:45,286 - #3 d_bool
INFO  16:47:45,286 - #7 ;
INFO  16:47:45,286 - #3 char
INFO  16:47:45,286 - #3 d_char
INFO  16:47:45,286 - #7 ;
INFO  16:47:45,286 - #5 }
INFO  16:47:45,286 - #16 class
INFO  16:47:45,286 - #3 E
INFO  16:47:45,286 - #4 {
INFO  16:47:45,286 - #3 int
INFO  16:47:45,286 - #3 e_int
INFO  16:47:45,286 - #13 ,
INFO  16:47:45,286 - #3 e_arr
INFO  16:47:45,286 - #14 [
INFO  16:47:45,286 - #15 ]
INFO  16:47:45,287 - #7 ;
INFO  16:47:45,287 - #3 bool
INFO  16:47:45,287 - #3 e_bool
INFO  16:47:45,287 - #7 ;
INFO  16:47:45,287 - #3 char
INFO  16:47:45,287 - #3 e_char
INFO  16:47:45,287 - #7 ;
INFO  16:47:45,287 - #4 {
INFO  16:47:45,287 - #18 void
INFO  16:47:45,287 - #3 a
INFO  16:47:45,287 - #19 (
INFO  16:47:45,287 - #20 )
INFO  16:47:45,287 - #4 {
INFO  16:47:45,287 - #26 return
INFO  16:47:45,287 - #9 0
INFO  16:47:45,287 - #7 ;
INFO  16:47:45,288 - #5 }
INFO  16:47:45,288 - #3 int
INFO  16:47:45,288 - #3 b
INFO  16:47:45,288 - #19 (
INFO  16:47:45,288 - #20 )
INFO  16:47:45,288 - #4 {
INFO  16:47:45,288 - #26 return
INFO  16:47:45,288 - #9 0
INFO  16:47:45,288 - #7 ;
INFO  16:47:45,288 - #5 }
INFO  16:47:45,288 - #5 }
INFO  16:47:45,288 - #5 }
INFO  16:47:45,288 - #16 class
INFO  16:47:45,288 - #3 F
INFO  16:47:45,288 - #17 extends
INFO  16:47:45,288 - #3 E
INFO  16:47:45,288 - #4 {
INFO  16:47:45,289 - #3 int
INFO  16:47:45,289 - #3 f_int
INFO  16:47:45,289 - #13 ,
INFO  16:47:45,289 - #3 f_arr
INFO  16:47:45,289 - #14 [
INFO  16:47:45,289 - #15 ]
INFO  16:47:45,289 - #7 ;
INFO  16:47:45,289 - #3 bool
INFO  16:47:45,289 - #3 f_bool
INFO  16:47:45,289 - #7 ;
INFO  16:47:45,289 - #3 char
INFO  16:47:45,289 - #3 f_char
INFO  16:47:45,289 - #7 ;
INFO  16:47:45,289 - #3 string
INFO  16:47:45,289 - #3 string_f
INFO  16:47:45,289 - #7 ;
INFO  16:47:45,289 - #4 {
INFO  16:47:45,290 - #18 void
INFO  16:47:45,290 - #3 set_f
INFO  16:47:45,290 - #19 (
INFO  16:47:45,290 - #3 int
INFO  16:47:45,290 - #3 s
INFO  16:47:45,290 - #20 )
INFO  16:47:45,290 - #3 int
INFO  16:47:45,290 - #3 af_a
INFO  16:47:45,290 - #7 ;
INFO  16:47:45,290 - #4 {
INFO  16:47:45,290 - #23 if
INFO  16:47:45,290 - #19 (
INFO  16:47:45,290 - #3 s
INFO  16:47:45,290 - #35 ==
INFO  16:47:45,290 - #9 1
INFO  16:47:45,290 - #20 )
INFO  16:47:45,290 - #4 {
INFO  16:47:45,290 - #3 af_a
INFO  16:47:45,291 - #8 =
INFO  16:47:45,291 - #9 1
INFO  16:47:45,291 - #7 ;
INFO  16:47:45,291 - #5 }
INFO  16:47:45,291 - #28 else
INFO  16:47:45,291 - #4 {
INFO  16:47:45,291 - #3 af_a
INFO  16:47:45,291 - #8 =
INFO  16:47:45,291 - #9 0
INFO  16:47:45,291 - #7 ;
INFO  16:47:45,291 - #5 }
INFO  16:47:45,291 - #3 f_int
INFO  16:47:45,291 - #8 =
INFO  16:47:45,291 - #3 s
INFO  16:47:45,292 - #7 ;
INFO  16:47:45,292 - #5 }
INFO  16:47:45,292 - #3 int
INFO  16:47:45,292 - #3 bf
INFO  16:47:45,292 - #19 (
INFO  16:47:45,292 - #3 int
INFO  16:47:45,292 - #3 s
INFO  16:47:45,292 - #20 )
INFO  16:47:45,292 - #3 int
INFO  16:47:45,292 - #3 a_bf
INFO  16:47:45,292 - #7 ;
INFO  16:47:45,292 - #4 {
INFO  16:47:45,292 - #23 if
INFO  16:47:45,292 - #19 (
INFO  16:47:45,292 - #3 s
INFO  16:47:45,292 - #35 ==
INFO  16:47:45,293 - #9 1
INFO  16:47:45,293 - #20 )
INFO  16:47:45,293 - #27 read
INFO  16:47:45,293 - #19 (
INFO  16:47:45,293 - #3 s
INFO  16:47:45,293 - #20 )
INFO  16:47:45,293 - #7 ;
INFO  16:47:45,293 - #28 else
INFO  16:47:45,293 - #27 read
INFO  16:47:45,293 - #19 (
INFO  16:47:45,293 - #3 a_bf
INFO  16:47:45,293 - #20 )
INFO  16:47:45,293 - #7 ;
INFO  16:47:45,293 - #3 s
INFO  16:47:45,293 - #8 =
INFO  16:47:45,293 - #3 a_bf
INFO  16:47:45,293 - #7 ;
INFO  16:47:45,294 - #26 return
INFO  16:47:45,294 - #3 s
INFO  16:47:45,294 - #41 +
INFO  16:47:45,294 - #9 1
INFO  16:47:45,294 - #7 ;
INFO  16:47:45,294 - #5 }
INFO  16:47:45,294 - #3 int
INFO  16:47:45,294 - #3 getValue
INFO  16:47:45,294 - #19 (
INFO  16:47:45,294 - #20 )
INFO  16:47:45,294 - #4 {
INFO  16:47:45,294 - #3 this
INFO  16:47:45,294 - #34 .
INFO  16:47:45,294 - #3 e_int
INFO  16:47:45,294 - #8 =
INFO  16:47:45,294 - #9 5
INFO  16:47:45,294 - #7 ;
INFO  16:47:45,294 - #26 return
INFO  16:47:45,294 - #3 this
INFO  16:47:45,295 - #34 .
INFO  16:47:45,295 - #3 e_int
INFO  16:47:45,295 - #41 +
INFO  16:47:45,295 - #3 this
INFO  16:47:45,295 - #34 .
INFO  16:47:45,295 - #3 f_arr
INFO  16:47:45,295 - #14 [
INFO  16:47:45,295 - #9 0
INFO  16:47:45,295 - #15 ]
INFO  16:47:45,295 - #41 +
INFO  16:47:45,295 - #3 this
INFO  16:47:45,295 - #34 .
INFO  16:47:45,295 - #3 bf
INFO  16:47:45,295 - #19 (
INFO  16:47:45,295 - #9 1
INFO  16:47:45,295 - #20 )
INFO  16:47:45,295 - #7 ;
INFO  16:47:45,295 - #5 }
INFO  16:47:45,295 - #5 }
INFO  16:47:45,296 - #5 }
INFO  16:47:45,296 - #4 {
INFO  16:47:45,296 - #3 int
INFO  16:47:45,296 - #3 dec_function
INFO  16:47:45,296 - #19 (
INFO  16:47:45,296 - #3 int
INFO  16:47:45,296 - #3 a
INFO  16:47:45,296 - #20 )
INFO  16:47:45,296 - #4 {
INFO  16:47:45,296 - #26 return
INFO  16:47:45,296 - #3 a
INFO  16:47:45,296 - #32 -
INFO  16:47:45,296 - #9 1
INFO  16:47:45,296 - #7 ;
INFO  16:47:45,296 - #5 }
INFO  16:47:45,296 - #3 string
INFO  16:47:45,296 - #3 concat
INFO  16:47:45,296 - #19 (
INFO  16:47:45,297 - #3 string
INFO  16:47:45,297 - #3 s
INFO  16:47:45,297 - #20 )
INFO  16:47:45,297 - #4 {
INFO  16:47:45,297 - #26 return
INFO  16:47:45,297 - #3 s
INFO  16:47:45,297 - #41 +
INFO  16:47:45,297 - #12 aa
INFO  16:47:45,297 - #7 ;
INFO  16:47:45,297 - #5 }
INFO  16:47:45,297 - #3 string
INFO  16:47:45,297 - #3 concats
INFO  16:47:45,297 - #19 (
INFO  16:47:45,297 - #3 string
INFO  16:47:45,297 - #3 s1
INFO  16:47:45,297 - #13 ,
INFO  16:47:45,298 - #3 string
INFO  16:47:45,298 - #3 s2
INFO  16:47:45,298 - #20 )
INFO  16:47:45,298 - #4 {
INFO  16:47:45,298 - #26 return
INFO  16:47:45,298 - #3 s1
INFO  16:47:45,298 - #41 +
INFO  16:47:45,298 - #3 s2
INFO  16:47:45,298 - #7 ;
INFO  16:47:45,298 - #5 }
INFO  16:47:45,298 - #18 void
INFO  16:47:45,298 - #3 main
INFO  16:47:45,298 - #19 (
INFO  16:47:45,299 - #20 )
INFO  16:47:45,299 - #3 A
INFO  16:47:45,299 - #3 a
INFO  16:47:45,299 - #7 ;
INFO  16:47:45,299 - #3 F
INFO  16:47:45,299 - #3 f
INFO  16:47:45,299 - #7 ;
INFO  16:47:45,299 - #3 int
INFO  16:47:45,299 - #3 b
INFO  16:47:45,299 - #13 ,
INFO  16:47:45,299 - #3 temp
INFO  16:47:45,299 - #14 [
INFO  16:47:45,299 - #15 ]
INFO  16:47:45,299 - #7 ;
INFO  16:47:45,299 - #3 bool
INFO  16:47:45,299 - #3 c
INFO  16:47:45,299 - #7 ;
INFO  16:47:45,300 - #3 char
INFO  16:47:45,300 - #3 a
INFO  16:47:45,300 - #7 ;
INFO  16:47:45,300 - #3 string
INFO  16:47:45,300 - #3 str
INFO  16:47:45,300 - #7 ;
INFO  16:47:45,300 - #4 {
INFO  16:47:45,300 - #3 str
INFO  16:47:45,300 - #8 =
INFO  16:47:45,300 - #12 abcd
INFO  16:47:45,300 - #7 ;
INFO  16:47:45,300 - #3 str
INFO  16:47:45,300 - #8 =
INFO  16:47:45,300 - #3 concat
INFO  16:47:45,300 - #19 (
INFO  16:47:45,300 - #3 str
INFO  16:47:45,300 - #20 )
INFO  16:47:45,300 - #7 ;
INFO  16:47:45,300 - #3 str
INFO  16:47:45,300 - #8 =
INFO  16:47:45,300 - #12 si4
INFO  16:47:45,300 - #41 +
INFO  16:47:45,301 - #12 pp1
INFO  16:47:45,301 - #7 ;
INFO  16:47:45,301 - #3 str
INFO  16:47:45,301 - #8 =
INFO  16:47:45,301 - #3 concats
INFO  16:47:45,301 - #19 (
INFO  16:47:45,301 - #3 str
INFO  16:47:45,301 - #13 ,
INFO  16:47:45,301 - #12 DZ
INFO  16:47:45,301 - #20 )
INFO  16:47:45,301 - #7 ;
INFO  16:47:45,301 - #3 b
INFO  16:47:45,301 - #8 =
INFO  16:47:45,301 - #32 -
INFO  16:47:45,301 - #9 1
INFO  16:47:45,301 - #41 +
INFO  16:47:45,301 - #9 1
INFO  16:47:45,301 - #7 ;
INFO  16:47:45,301 - #3 b
INFO  16:47:45,301 - #21 ++
INFO  16:47:45,301 - #7 ;
INFO  16:47:45,302 - #3 b
INFO  16:47:45,302 - #22 --
INFO  16:47:45,302 - #7 ;
INFO  16:47:45,302 - #3 b
INFO  16:47:45,302 - #8 =
INFO  16:47:45,302 - #3 dec_function
INFO  16:47:45,302 - #19 (
INFO  16:47:45,302 - #3 b
INFO  16:47:45,302 - #20 )
INFO  16:47:45,302 - #7 ;
INFO  16:47:45,302 - #23 if
INFO  16:47:45,302 - #19 (
INFO  16:47:45,302 - #3 b
INFO  16:47:45,302 - #20 )
INFO  16:47:45,302 - #3 b
INFO  16:47:45,302 - #22 --
INFO  16:47:45,302 - #7 ;
INFO  16:47:45,302 - #23 if
INFO  16:47:45,303 - #19 (
INFO  16:47:45,303 - #3 b
INFO  16:47:45,303 - #36 !=
INFO  16:47:45,303 - #9 0
INFO  16:47:45,303 - #20 )
INFO  16:47:45,303 - #4 {
INFO  16:47:45,303 - #3 b
INFO  16:47:45,303 - #22 --
INFO  16:47:45,303 - #7 ;
INFO  16:47:45,303 - #5 }
INFO  16:47:45,303 - #23 if
INFO  16:47:45,303 - #19 (
INFO  16:47:45,303 - #3 b
INFO  16:47:45,303 - #35 ==
INFO  16:47:45,303 - #9 0
INFO  16:47:45,303 - #30 ||
INFO  16:47:45,303 - #3 str
INFO  16:47:45,303 - #35 ==
INFO  16:47:45,303 - #12 si4pp1
INFO  16:47:45,303 - #20 )
INFO  16:47:45,304 - #3 b
INFO  16:47:45,304 - #21 ++
INFO  16:47:45,304 - #7 ;
INFO  16:47:45,304 - #24 while
INFO  16:47:45,304 - #19 (
INFO  16:47:45,304 - #3 b
INFO  16:47:45,304 - #37 >
INFO  16:47:45,304 - #9 0
INFO  16:47:45,304 - #31 &&
INFO  16:47:45,304 - #3 b
INFO  16:47:45,304 - #39 <
INFO  16:47:45,304 - #9 2
INFO  16:47:45,304 - #30 ||
INFO  16:47:45,304 - #3 str
INFO  16:47:45,304 - #35 ==
INFO  16:47:45,304 - #12 si4pp1
INFO  16:47:45,304 - #20 )
INFO  16:47:45,304 - #4 {
INFO  16:47:45,304 - #3 b
INFO  16:47:45,304 - #22 --
INFO  16:47:45,304 - #7 ;
INFO  16:47:45,304 - #29 print
INFO  16:47:45,304 - #19 (
INFO  16:47:45,305 - #9 2
INFO  16:47:45,305 - #20 )
INFO  16:47:45,305 - #7 ;
INFO  16:47:45,305 - #29 print
INFO  16:47:45,305 - #19 (
INFO  16:47:45,305 - #12 cao
INFO  16:47:45,305 - #13 ,
INFO  16:47:45,305 - #9 3
INFO  16:47:45,305 - #20 )
INFO  16:47:45,305 - #7 ;
INFO  16:47:45,305 - #5 }
INFO  16:47:45,305 - #3 temp
INFO  16:47:45,305 - #8 =
INFO  16:47:45,305 - #33 new
INFO  16:47:45,305 - #3 int
INFO  16:47:45,305 - #14 [
INFO  16:47:45,305 - #9 2
INFO  16:47:45,305 - #15 ]
INFO  16:47:45,305 - #7 ;
INFO  16:47:45,305 - #3 a
INFO  16:47:45,305 - #8 =
INFO  16:47:45,305 - #33 new
INFO  16:47:45,305 - #3 A
INFO  16:47:45,305 - #7 ;
INFO  16:47:45,305 - #3 f
INFO  16:47:45,306 - #8 =
INFO  16:47:45,306 - #33 new
INFO  16:47:45,306 - #3 F
INFO  16:47:45,306 - #7 ;
INFO  16:47:45,306 - #3 f
INFO  16:47:45,306 - #34 .
INFO  16:47:45,306 - #3 f_int
INFO  16:47:45,306 - #8 =
INFO  16:47:45,306 - #3 dec_function
INFO  16:47:45,306 - #19 (
INFO  16:47:45,306 - #3 b
INFO  16:47:45,306 - #41 +
INFO  16:47:45,306 - #9 3
INFO  16:47:45,306 - #20 )
INFO  16:47:45,306 - #41 +
INFO  16:47:45,306 - #3 b
INFO  16:47:45,306 - #42 *
INFO  16:47:45,306 - #9 2
INFO  16:47:45,306 - #7 ;
INFO  16:47:45,306 - #27 read
INFO  16:47:45,306 - #19 (
INFO  16:47:45,306 - #3 f
INFO  16:47:45,306 - #34 .
INFO  16:47:45,307 - #3 f_char
INFO  16:47:45,307 - #20 )
INFO  16:47:45,307 - #7 ;
INFO  16:47:45,307 - #24 while
INFO  16:47:45,307 - #19 (
INFO  16:47:45,307 - #9 1
INFO  16:47:45,307 - #20 )
INFO  16:47:45,307 - #4 {
INFO  16:47:45,307 - #3 b
INFO  16:47:45,307 - #21 ++
INFO  16:47:45,307 - #7 ;
INFO  16:47:45,307 - #23 if
INFO  16:47:45,307 - #19 (
INFO  16:47:45,307 - #3 b
INFO  16:47:45,307 - #35 ==
INFO  16:47:45,307 - #9 10
INFO  16:47:45,307 - #20 )
INFO  16:47:45,307 - #25 break
INFO  16:47:45,307 - #7 ;
INFO  16:47:45,307 - #5 }
INFO  16:47:45,308 - #5 }
INFO  16:47:45,308 - #5 }
INFO  16:47:45,308 - Broj definicija globalnih promenljivih:3
INFO  16:47:45,308 - Broj definicija lokalnih promenljivih (u main funkciji):7
INFO  16:47:45,308 - Broj definicija globalnih konstanti:4
INFO  16:47:45,308 - Broj deklaracija globalnih nizova:1
INFO  16:47:45,308 - Broj definicija funkcija u glavnom programu:4
INFO  16:47:45,308 - Broj blokova naredbi:5
INFO  16:47:45,308 - Broj poziva funkcija u telu metode main:7
INFO  16:47:45,308 - Broj deklaracija formalnih argumenata funkcija:6
INFO  16:47:45,308 - Broj definicija unutrasnjih klasa:6
INFO  16:47:45,308 - Broj definicija metoda unutrasnjih klasa:5
INFO  16:47:45,308 - Broj deklaracija polja unutrasnjih klasa:17
INFO  16:47:45,308 - Parsiranje je uspesno zavrseno!
