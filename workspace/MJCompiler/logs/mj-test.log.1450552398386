INFO  20:12:05,323 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:12:05,328 - #2 program
INFO  20:12:05,328 - #3 Program
INFO  20:12:05,328 - #16 class
INFO  20:12:05,329 - #3 A
INFO  20:12:05,329 - #4 {
INFO  20:12:05,329 - #3 int
INFO  20:12:05,329 - #3 x
INFO  20:12:05,329 - #14 [
INFO  20:12:05,329 - #15 ]
INFO  20:12:05,329 - #13 ,
INFO  20:12:05,329 - #3 y
INFO  20:12:05,329 - #14 [
INFO  20:12:05,329 - #15 ]
INFO  20:12:05,329 - #7 ;
INFO  20:12:05,329 - #4 {
INFO  20:12:05,329 - #3 int
INFO  20:12:05,330 - #3 pr
INFO  20:12:05,330 - #19 (
INFO  20:12:05,330 - #20 )
INFO  20:12:05,330 - #4 {
INFO  20:12:05,330 - #26 return
INFO  20:12:05,330 - #9 1
INFO  20:12:05,330 - #7 ;
INFO  20:12:05,330 - #5 }
INFO  20:12:05,330 - #3 int
INFO  20:12:05,330 - #3 pr
INFO  20:12:05,330 - #19 (
INFO  20:12:05,330 - #20 )
INFO  20:12:05,331 - #4 {
INFO  20:12:05,331 - #26 return
INFO  20:12:05,331 - #9 0
INFO  20:12:05,331 - #7 ;
INFO  20:12:05,331 - #5 }
INFO  20:12:05,331 - #3 int
INFO  20:12:05,331 - #3 pr1
INFO  20:12:05,331 - #19 (
INFO  20:12:05,331 - #20 )
INFO  20:12:05,331 - #4 {
INFO  20:12:05,331 - #26 return
INFO  20:12:05,331 - #3 pr
INFO  20:12:05,331 - #19 (
INFO  20:12:05,332 - #20 )
INFO  20:12:05,332 - #7 ;
INFO  20:12:05,332 - #5 }
INFO  20:12:05,332 - #5 }
INFO  20:12:05,332 - #5 }
INFO  20:12:05,332 - #6 const
INFO  20:12:05,332 - #3 int
INFO  20:12:05,332 - #3 pi
INFO  20:12:05,332 - #8 =
INFO  20:12:05,332 - #9 3
INFO  20:12:05,332 - #13 ,
INFO  20:12:05,332 - #3 e
INFO  20:12:05,332 - #8 =
INFO  20:12:05,332 - #9 2
INFO  20:12:05,333 - #7 ;
INFO  20:12:05,333 - #6 const
INFO  20:12:05,333 - #3 string
INFO  20:12:05,333 - #3 strin
INFO  20:12:05,333 - #8 =
INFO  20:12:05,333 - #12 aaa
INFO  20:12:05,333 - #7 ;
INFO  20:12:05,333 - #16 class
INFO  20:12:05,333 - #3 B
INFO  20:12:05,333 - #17 extends
INFO  20:12:05,333 - #3 A
INFO  20:12:05,333 - #4 {
INFO  20:12:05,334 - #3 int
INFO  20:12:05,334 - #3 i
INFO  20:12:05,334 - #7 ;
INFO  20:12:05,334 - #3 int
INFO  20:12:05,334 - #3 x
INFO  20:12:05,334 - #14 [
INFO  20:12:05,334 - #15 ]
INFO  20:12:05,334 - #7 ;
INFO  20:12:05,334 - #3 A
INFO  20:12:05,334 - #3 theAA
INFO  20:12:05,334 - #7 ;
INFO  20:12:05,334 - #4 {
INFO  20:12:05,334 - #18 void
INFO  20:12:05,335 - #3 voidtest
INFO  20:12:05,335 - #19 (
INFO  20:12:05,335 - #3 int
INFO  20:12:05,335 - #3 a
INFO  20:12:05,335 - #13 ,
INFO  20:12:05,335 - #3 char
INFO  20:12:05,335 - #3 b
INFO  20:12:05,335 - #20 )
INFO  20:12:05,335 - #3 int
INFO  20:12:05,335 - #3 c
INFO  20:12:05,335 - #7 ;
INFO  20:12:05,335 - #4 {
INFO  20:12:05,335 - #27 read
INFO  20:12:05,335 - #19 (
INFO  20:12:05,335 - #3 a
INFO  20:12:05,335 - #20 )
INFO  20:12:05,336 - #7 ;
INFO  20:12:05,336 - #27 read
INFO  20:12:05,336 - #19 (
INFO  20:12:05,336 - #3 b
INFO  20:12:05,336 - #20 )
INFO  20:12:05,336 - #7 ;
INFO  20:12:05,336 - #27 read
INFO  20:12:05,336 - #19 (
INFO  20:12:05,336 - #3 c
INFO  20:12:05,336 - #20 )
INFO  20:12:05,336 - #7 ;
INFO  20:12:05,336 - #5 }
INFO  20:12:05,336 - #3 int
INFO  20:12:05,336 - #3 met
INFO  20:12:05,336 - #19 (
INFO  20:12:05,337 - #3 int
INFO  20:12:05,337 - #3 a
INFO  20:12:05,337 - #20 )
INFO  20:12:05,337 - #4 {
INFO  20:12:05,337 - #26 return
INFO  20:12:05,337 - #3 a
INFO  20:12:05,337 - #41 +
INFO  20:12:05,337 - #9 1
INFO  20:12:05,337 - #7 ;
INFO  20:12:05,337 - #5 }
INFO  20:12:05,337 - #3 int
INFO  20:12:05,337 - #3 getValue
INFO  20:12:05,337 - #19 (
INFO  20:12:05,338 - #3 int
INFO  20:12:05,338 - #3 a
INFO  20:12:05,338 - #20 )
INFO  20:12:05,338 - #3 int
INFO  20:12:05,338 - #3 b
INFO  20:12:05,338 - #7 ;
INFO  20:12:05,338 - #3 bool
INFO  20:12:05,338 - #3 c
INFO  20:12:05,338 - #7 ;
INFO  20:12:05,338 - #4 {
INFO  20:12:05,338 - #3 this
INFO  20:12:05,339 - #34 .
INFO  20:12:05,339 - #3 i
INFO  20:12:05,339 - #8 =
INFO  20:12:05,339 - #9 6
INFO  20:12:05,339 - #7 ;
INFO  20:12:05,339 - #26 return
INFO  20:12:05,339 - #3 this
INFO  20:12:05,339 - #34 .
INFO  20:12:05,339 - #3 i
INFO  20:12:05,339 - #41 +
INFO  20:12:05,339 - #3 this
INFO  20:12:05,339 - #34 .
INFO  20:12:05,339 - #3 x
INFO  20:12:05,339 - #14 [
INFO  20:12:05,339 - #9 0
INFO  20:12:05,340 - #15 ]
INFO  20:12:05,340 - #41 +
INFO  20:12:05,340 - #3 this
INFO  20:12:05,340 - #34 .
INFO  20:12:05,340 - #3 met
INFO  20:12:05,340 - #19 (
INFO  20:12:05,340 - #3 a
INFO  20:12:05,340 - #20 )
INFO  20:12:05,340 - #7 ;
INFO  20:12:05,340 - #5 }
INFO  20:12:05,340 - #5 }
INFO  20:12:05,340 - #5 }
INFO  20:12:05,340 - #16 class
INFO  20:12:05,341 - #3 C
INFO  20:12:05,341 - #17 extends
INFO  20:12:05,341 - #3 B
INFO  20:12:05,341 - #4 {
INFO  20:12:05,341 - #3 A
INFO  20:12:05,341 - #3 theA
INFO  20:12:05,341 - #7 ;
INFO  20:12:05,341 - #3 string
INFO  20:12:05,341 - #3 a
INFO  20:12:05,341 - #8 =
ERROR 20:12:05,341 - 
Sintaksna greska
INFO  20:12:05,341 - #12 bas je roze i zut
INFO  20:12:05,342 - #7 ;
INFO  20:12:05,342 - #4 {
INFO  20:12:05,343 - #18 void
INFO  20:12:05,343 - #3 glupost
ERROR 20:12:05,343 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do ; u liniji 46
INFO  20:12:05,343 - #19 (
INFO  20:12:05,343 - #3 int
INFO  20:12:05,343 - #13 ,
ERROR 20:12:05,343 - 
Sintaksna greska
INFO  20:12:05,343 - #3 m
INFO  20:12:05,343 - #20 )
INFO  20:12:05,343 - #3 int
INFO  20:12:05,343 - #3 i
INFO  20:12:05,343 - #13 ,
ERROR 20:12:05,344 - [Deklaracija form. parametra funkcije] Izvrsen oporavak do ) u liniji 49
INFO  20:12:05,344 - #3 bool
INFO  20:12:05,344 - #3 c
ERROR 20:12:05,344 - 
Sintaksna greska
INFO  20:12:05,344 - #4 {
INFO  20:12:05,344 - #26 return
INFO  20:12:05,344 - #3 i
INFO  20:12:05,344 - #41 +
ERROR 20:12:05,344 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do { u liniji 49
INFO  20:12:05,344 - #3 c
INFO  20:12:05,344 - #7 ;
INFO  20:12:05,344 - #5 }
INFO  20:12:05,345 - #5 }
INFO  20:12:05,345 - #5 }
INFO  20:12:05,345 - #16 class
INFO  20:12:05,345 - #3 E
INFO  20:12:05,345 - #17 extends
INFO  20:12:05,345 - #4 {
ERROR 20:12:05,345 - 
Sintaksna greska
INFO  20:12:05,345 - #3 bool
INFO  20:12:05,345 - #3 b
INFO  20:12:05,345 - #7 ;
ERROR 20:12:05,345 - [Deklaracija prosirenja natklase] Izvrsen oporavak do { u liniji 56
INFO  20:12:05,346 - #3 C
INFO  20:12:05,346 - #13 ,
ERROR 20:12:05,346 - 
Sintaksna greska
INFO  20:12:05,346 - #3 cc
INFO  20:12:05,346 - #13 ,
INFO  20:12:05,346 - #3 char
INFO  20:12:05,346 - #3 e
INFO  20:12:05,346 - #7 ;
INFO  20:12:05,347 - #5 }
ERROR 20:12:05,347 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do { u liniji 58
INFO  20:12:05,347 - #4 {
INFO  20:12:05,347 - #3 int
INFO  20:12:05,347 - #3 met
INFO  20:12:05,347 - #19 (
INFO  20:12:05,347 - #3 int
INFO  20:12:05,347 - #3 par
INFO  20:12:05,347 - #20 )
INFO  20:12:05,348 - #4 {
INFO  20:12:05,348 - #26 return
INFO  20:12:05,348 - #3 par
INFO  20:12:05,348 - #32 -
INFO  20:12:05,348 - #9 1
INFO  20:12:05,348 - #7 ;
INFO  20:12:05,348 - #5 }
INFO  20:12:05,348 - #3 string
INFO  20:12:05,348 - #3 strfunc
INFO  20:12:05,349 - #19 (
INFO  20:12:05,349 - #3 string
INFO  20:12:05,349 - #3 s
INFO  20:12:05,349 - #20 )
INFO  20:12:05,349 - #4 {
INFO  20:12:05,349 - #26 return
INFO  20:12:05,349 - #3 s
INFO  20:12:05,349 - #41 +
INFO  20:12:05,349 - #12 aa
INFO  20:12:05,350 - #7 ;
INFO  20:12:05,350 - #5 }
INFO  20:12:05,350 - #18 void
INFO  20:12:05,350 - #3 main
INFO  20:12:05,350 - #19 (
INFO  20:12:05,350 - #20 )
INFO  20:12:05,351 - #3 A
INFO  20:12:05,351 - #3 a
INFO  20:12:05,351 - #7 ;
INFO  20:12:05,351 - #3 B
INFO  20:12:05,351 - #3 b
INFO  20:12:05,351 - #7 ;
INFO  20:12:05,351 - #3 C
INFO  20:12:05,351 - #3 c
INFO  20:12:05,351 - #7 ;
INFO  20:12:05,352 - #3 int
INFO  20:12:05,352 - #3 i
INFO  20:12:05,352 - #13 ,
INFO  20:12:05,352 - #3 y
INFO  20:12:05,352 - #13 ,
INFO  20:12:05,352 - #3 z
INFO  20:12:05,352 - #7 ;
INFO  20:12:05,352 - #3 int
INFO  20:12:05,352 - #3 x
INFO  20:12:05,352 - #14 [
INFO  20:12:05,352 - #15 ]
INFO  20:12:05,353 - #7 ;
INFO  20:12:05,353 - #3 string
INFO  20:12:05,353 - #3 str1
INFO  20:12:05,353 - #13 ,
INFO  20:12:05,353 - #3 str2
INFO  20:12:05,353 - #7 ;
INFO  20:12:05,353 - #3 bool
INFO  20:12:05,353 - #3 bulin
INFO  20:12:05,353 - #7 ;
INFO  20:12:05,353 - #4 {
INFO  20:12:05,353 - #3 str2
INFO  20:12:05,353 - #8 =
INFO  20:12:05,354 - #12 abcd
INFO  20:12:05,354 - #7 ;
INFO  20:12:05,354 - #3 str1
INFO  20:12:05,354 - #8 =
INFO  20:12:05,354 - #12 abc
INFO  20:12:05,354 - #41 +
INFO  20:12:05,354 - #3 strfunc
INFO  20:12:05,355 - #19 (
INFO  20:12:05,355 - #3 str2
INFO  20:12:05,355 - #20 )
INFO  20:12:05,355 - #7 ;
INFO  20:12:05,355 - #3 str2
INFO  20:12:05,355 - #8 =
INFO  20:12:05,355 - #12 mama"+"tata
INFO  20:12:05,355 - #7 ;
INFO  20:12:05,355 - #3 strin
INFO  20:12:05,355 - #8 =
INFO  20:12:05,356 - #12 ne moze se dodeliti vrednost konstantnom stringu
INFO  20:12:05,356 - #7 ;
INFO  20:12:05,356 - #3 bulin
INFO  20:12:05,356 - #8 =
INFO  20:12:05,356 - #32 -
INFO  20:12:05,356 - #11 true
ERROR 20:12:05,356 - 
Sintaksna greska
INFO  20:12:05,356 - #7 ;
INFO  20:12:05,356 - #29 print
INFO  20:12:05,356 - #19 (
INFO  20:12:05,357 - #3 bulin
ERROR 20:12:05,357 - [Konstrukcija dodele iskaza] Izvrsen oporavak do ; u liniji 74
INFO  20:12:05,357 - #20 )
INFO  20:12:05,357 - #7 ;
INFO  20:12:05,357 - #3 a
INFO  20:12:05,357 - #8 =
INFO  20:12:05,357 - #33 new
INFO  20:12:05,357 - #3 A
INFO  20:12:05,357 - #7 ;
INFO  20:12:05,357 - #3 a
INFO  20:12:05,357 - #34 .
INFO  20:12:05,357 - #3 x
INFO  20:12:05,357 - #8 =
INFO  20:12:05,357 - #33 new
INFO  20:12:05,357 - #3 int
INFO  20:12:05,357 - #14 [
INFO  20:12:05,358 - #9 5
INFO  20:12:05,358 - #15 ]
INFO  20:12:05,358 - #7 ;
INFO  20:12:05,358 - #3 a
INFO  20:12:05,358 - #34 .
INFO  20:12:05,358 - #3 y
INFO  20:12:05,358 - #8 =
INFO  20:12:05,358 - #33 new
INFO  20:12:05,358 - #3 int
INFO  20:12:05,358 - #14 [
INFO  20:12:05,358 - #9 5
INFO  20:12:05,358 - #15 ]
INFO  20:12:05,358 - #7 ;
INFO  20:12:05,358 - #3 c
INFO  20:12:05,358 - #8 =
INFO  20:12:05,358 - #33 new
INFO  20:12:05,359 - #3 C
INFO  20:12:05,359 - #7 ;
INFO  20:12:05,359 - #3 i
INFO  20:12:05,359 - #8 =
INFO  20:12:05,359 - #3 met
INFO  20:12:05,359 - #19 (
INFO  20:12:05,359 - #3 pi
INFO  20:12:05,359 - #41 +
INFO  20:12:05,359 - #9 3
INFO  20:12:05,359 - #20 )
INFO  20:12:05,359 - #41 +
INFO  20:12:05,359 - #3 e
INFO  20:12:05,359 - #42 *
INFO  20:12:05,359 - #9 2
INFO  20:12:05,359 - #7 ;
INFO  20:12:05,360 - #3 c
INFO  20:12:05,360 - #34 .
INFO  20:12:05,360 - #3 theA
INFO  20:12:05,360 - #8 =
INFO  20:12:05,360 - #3 a
INFO  20:12:05,360 - #7 ;
INFO  20:12:05,360 - #3 c
INFO  20:12:05,360 - #34 .
INFO  20:12:05,360 - #3 x
INFO  20:12:05,360 - #8 =
INFO  20:12:05,360 - #33 new
INFO  20:12:05,360 - #3 int
INFO  20:12:05,360 - #14 [
INFO  20:12:05,361 - #9 5
INFO  20:12:05,361 - #15 ]
INFO  20:12:05,361 - #7 ;
INFO  20:12:05,361 - #3 x
INFO  20:12:05,361 - #8 =
INFO  20:12:05,361 - #33 new
INFO  20:12:05,361 - #3 int
INFO  20:12:05,361 - #14 [
INFO  20:12:05,361 - #9 3
INFO  20:12:05,361 - #15 ]
INFO  20:12:05,361 - #7 ;
INFO  20:12:05,361 - #3 i
INFO  20:12:05,361 - #8 =
INFO  20:12:05,362 - #9 0
INFO  20:12:05,362 - #7 ;
INFO  20:12:05,362 - #27 read
INFO  20:12:05,362 - #19 (
INFO  20:12:05,362 - #3 c
INFO  20:12:05,362 - #34 .
INFO  20:12:05,362 - #3 i
INFO  20:12:05,362 - #20 )
INFO  20:12:05,362 - #7 ;
INFO  20:12:05,362 - #24 while
INFO  20:12:05,362 - #19 (
INFO  20:12:05,362 - #3 i
INFO  20:12:05,362 - #39 <
INFO  20:12:05,362 - #9 5
INFO  20:12:05,362 - #20 )
INFO  20:12:05,362 - #4 {
INFO  20:12:05,362 - #27 read
INFO  20:12:05,362 - #19 (
INFO  20:12:05,363 - #3 c
INFO  20:12:05,363 - #34 .
INFO  20:12:05,363 - #3 x
INFO  20:12:05,363 - #14 [
INFO  20:12:05,363 - #3 i
INFO  20:12:05,363 - #15 ]
INFO  20:12:05,363 - #20 )
INFO  20:12:05,363 - #7 ;
INFO  20:12:05,363 - #27 read
INFO  20:12:05,363 - #19 (
INFO  20:12:05,363 - #3 c
INFO  20:12:05,363 - #34 .
INFO  20:12:05,363 - #3 theA
INFO  20:12:05,363 - #34 .
INFO  20:12:05,363 - #3 x
INFO  20:12:05,363 - #14 [
INFO  20:12:05,363 - #3 i
INFO  20:12:05,363 - #15 ]
INFO  20:12:05,363 - #20 )
INFO  20:12:05,363 - #7 ;
INFO  20:12:05,364 - #3 i
INFO  20:12:05,364 - #21 ++
INFO  20:12:05,364 - #7 ;
INFO  20:12:05,364 - #5 }
INFO  20:12:05,364 - #29 print
INFO  20:12:05,364 - #19 (
INFO  20:12:05,364 - #3 c
INFO  20:12:05,364 - #34 .
INFO  20:12:05,364 - #3 getValue
INFO  20:12:05,364 - #19 (
INFO  20:12:05,364 - #3 c
INFO  20:12:05,364 - #34 .
INFO  20:12:05,364 - #3 theA
INFO  20:12:05,364 - #34 .
INFO  20:12:05,364 - #3 x
INFO  20:12:05,364 - #14 [
INFO  20:12:05,364 - #9 0
INFO  20:12:05,364 - #15 ]
INFO  20:12:05,364 - #20 )
INFO  20:12:05,365 - #20 )
INFO  20:12:05,365 - #7 ;
INFO  20:12:05,365 - #3 c
INFO  20:12:05,365 - #34 .
INFO  20:12:05,365 - #3 theA
INFO  20:12:05,365 - #34 .
INFO  20:12:05,365 - #3 x
INFO  20:12:05,365 - #14 [
INFO  20:12:05,365 - #9 0
INFO  20:12:05,365 - #15 ]
INFO  20:12:05,365 - #8 =
INFO  20:12:05,365 - #9 1
INFO  20:12:05,365 - #7 ;
INFO  20:12:05,365 - #23 if
INFO  20:12:05,365 - #19 (
INFO  20:12:05,365 - #3 i
INFO  20:12:05,365 - #35 ==
INFO  20:12:05,365 - #9 1
INFO  20:12:05,366 - #20 )
INFO  20:12:05,366 - #3 i
INFO  20:12:05,366 - #8 =
INFO  20:12:05,366 - #3 c
INFO  20:12:05,366 - #34 .
INFO  20:12:05,366 - #3 met
INFO  20:12:05,366 - #19 (
INFO  20:12:05,366 - #9 1
INFO  20:12:05,366 - #20 )
INFO  20:12:05,366 - #41 +
INFO  20:12:05,366 - #3 b
INFO  20:12:05,366 - #34 .
INFO  20:12:05,366 - #3 getValue
INFO  20:12:05,366 - #19 (
INFO  20:12:05,366 - #3 c
INFO  20:12:05,366 - #34 .
INFO  20:12:05,366 - #3 x
INFO  20:12:05,366 - #14 [
INFO  20:12:05,366 - #9 0
INFO  20:12:05,366 - #15 ]
INFO  20:12:05,366 - #20 )
INFO  20:12:05,366 - #41 +
INFO  20:12:05,366 - #9 5
INFO  20:12:05,366 - #42 *
INFO  20:12:05,366 - #9 8
INFO  20:12:05,367 - #7 ;
INFO  20:12:05,367 - #3 b
INFO  20:12:05,367 - #34 .
INFO  20:12:05,367 - #3 getValue
INFO  20:12:05,367 - #19 (
INFO  20:12:05,367 - #3 b
INFO  20:12:05,367 - #34 .
INFO  20:12:05,367 - #3 y
INFO  20:12:05,367 - #14 [
INFO  20:12:05,367 - #3 i
INFO  20:12:05,367 - #15 ]
INFO  20:12:05,367 - #20 )
INFO  20:12:05,367 - #7 ;
INFO  20:12:05,367 - #3 b
INFO  20:12:05,367 - #34 .
INFO  20:12:05,367 - #3 pr
INFO  20:12:05,367 - #19 (
INFO  20:12:05,367 - #20 )
INFO  20:12:05,367 - #7 ;
INFO  20:12:05,368 - #3 i
INFO  20:12:05,368 - #8 =
INFO  20:12:05,368 - #9 4
INFO  20:12:05,368 - #42 *
INFO  20:12:05,368 - #19 (
INFO  20:12:05,368 - #9 5
INFO  20:12:05,368 - #41 +
INFO  20:12:05,368 - #9 6
INFO  20:12:05,368 - #41 +
INFO  20:12:05,368 - #3 i
INFO  20:12:05,368 - #20 )
INFO  20:12:05,368 - #41 +
INFO  20:12:05,368 - #3 i
INFO  20:12:05,368 - #41 +
INFO  20:12:05,368 - #3 met
INFO  20:12:05,368 - #19 (
INFO  20:12:05,369 - #9 2
INFO  20:12:05,369 - #20 )
INFO  20:12:05,369 - #7 ;
INFO  20:12:05,369 - #3 chr
INFO  20:12:05,369 - #19 (
INFO  20:12:05,369 - #9 1
INFO  20:12:05,369 - #20 )
INFO  20:12:05,369 - #7 ;
INFO  20:12:05,369 - #3 i
INFO  20:12:05,369 - #8 =
INFO  20:12:05,369 - #3 ord
INFO  20:12:05,369 - #19 (
INFO  20:12:05,369 - #10 1
INFO  20:12:05,369 - #20 )
INFO  20:12:05,369 - #7 ;
INFO  20:12:05,369 - #29 print
INFO  20:12:05,369 - #19 (
INFO  20:12:05,369 - #9 4
INFO  20:12:05,369 - #13 ,
INFO  20:12:05,369 - #9 1
INFO  20:12:05,369 - #20 )
INFO  20:12:05,370 - #7 ;
INFO  20:12:05,370 - #3 a
INFO  20:12:05,370 - #8 =
INFO  20:12:05,370 - #3 b
INFO  20:12:05,370 - #7 ;
INFO  20:12:05,370 - #23 if
INFO  20:12:05,370 - #19 (
INFO  20:12:05,370 - #11 true
ERROR 20:12:05,370 - 
Sintaksna greska
INFO  20:12:05,370 - #20 )
INFO  20:12:05,370 - #3 i
INFO  20:12:05,370 - #21 ++
INFO  20:12:05,370 - #7 ;
ERROR 20:12:05,370 - [Logicki izraz] Izvrsen oporavak do ) u liniji 105
INFO  20:12:05,370 - #24 while
INFO  20:12:05,370 - #19 (
INFO  20:12:05,371 - #3 str2
INFO  20:12:05,371 - #35 ==
INFO  20:12:05,371 - #12 kraj" || str1 == "kraj
INFO  20:12:05,371 - #20 )
INFO  20:12:05,371 - #4 {
INFO  20:12:05,371 - #3 c
INFO  20:12:05,371 - #34 .
INFO  20:12:05,371 - #3 theA
INFO  20:12:05,371 - #34 .
INFO  20:12:05,371 - #3 x
INFO  20:12:05,371 - #14 [
INFO  20:12:05,371 - #3 i
INFO  20:12:05,371 - #15 ]
INFO  20:12:05,371 - #8 =
INFO  20:12:05,371 - #3 a
INFO  20:12:05,371 - #34 .
INFO  20:12:05,371 - #3 x
INFO  20:12:05,371 - #14 [
INFO  20:12:05,371 - #3 i
INFO  20:12:05,372 - #15 ]
INFO  20:12:05,372 - #7 ;
INFO  20:12:05,372 - #23 if
INFO  20:12:05,372 - #19 (
INFO  20:12:05,372 - #3 b
INFO  20:12:05,372 - #34 .
INFO  20:12:05,372 - #3 theAA
INFO  20:12:05,372 - #34 .
INFO  20:12:05,372 - #3 y
INFO  20:12:05,372 - #14 [
INFO  20:12:05,372 - #3 i
INFO  20:12:05,372 - #15 ]
INFO  20:12:05,372 - #35 ==
INFO  20:12:05,372 - #3 c
INFO  20:12:05,372 - #34 .
INFO  20:12:05,372 - #3 theA
INFO  20:12:05,372 - #34 .
INFO  20:12:05,372 - #3 x
INFO  20:12:05,372 - #14 [
INFO  20:12:05,372 - #3 i
INFO  20:12:05,373 - #15 ]
INFO  20:12:05,373 - #31 &&
INFO  20:12:05,373 - #3 c
INFO  20:12:05,373 - #34 .
INFO  20:12:05,373 - #3 pr1
INFO  20:12:05,373 - #19 (
INFO  20:12:05,373 - #20 )
INFO  20:12:05,373 - #20 )
INFO  20:12:05,373 - #25 break
INFO  20:12:05,373 - #7 ;
INFO  20:12:05,373 - #27 read
INFO  20:12:05,373 - #19 (
INFO  20:12:05,373 - #3 str1
INFO  20:12:05,373 - #20 )
INFO  20:12:05,373 - #7 ;
INFO  20:12:05,373 - #27 read
INFO  20:12:05,373 - #19 (
INFO  20:12:05,373 - #3 str2
INFO  20:12:05,373 - #20 )
INFO  20:12:05,373 - #7 ;
INFO  20:12:05,373 - #5 }
INFO  20:12:05,373 - #5 }
INFO  20:12:05,373 - #5 }
ERROR 20:12:05,374 - Parsiranje nije uspesno zavrseno!
