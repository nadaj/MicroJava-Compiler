INFO  16:45:14,651 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  16:45:14,656 - #2 program
INFO  16:45:14,656 - #3 Program
INFO  16:45:14,656 - #6 const
INFO  16:45:14,656 - #3 int
INFO  16:45:14,656 - #3 N
INFO  16:45:14,656 - #8 =
INFO  16:45:14,656 - #9 2
INFO  16:45:14,656 - #7 ;
INFO  16:45:14,656 - #6 const
INFO  16:45:14,657 - #3 char
INFO  16:45:14,657 - #3 c
INFO  16:45:14,657 - #8 =
INFO  16:45:14,657 - #10 a
INFO  16:45:14,657 - #7 ;
INFO  16:45:14,657 - #6 const
INFO  16:45:14,657 - #3 bool
INFO  16:45:14,657 - #3 flag
INFO  16:45:14,657 - #8 =
INFO  16:45:14,657 - #11 true
INFO  16:45:14,657 - #7 ;
INFO  16:45:14,657 - #6 const
INFO  16:45:14,657 - #3 string
INFO  16:45:14,658 - #3 s
INFO  16:45:14,658 - #8 =
INFO  16:45:14,658 - #12 ispravan ulaz
INFO  16:45:14,658 - #7 ;
INFO  16:45:14,658 - #3 int
INFO  16:45:14,658 - #3 globalna_pr
INFO  16:45:14,658 - #13 ,
INFO  16:45:14,658 - #3 glob_niz
INFO  16:45:14,658 - #14 [
INFO  16:45:14,658 - #15 ]
INFO  16:45:14,658 - #7 ;
INFO  16:45:14,658 - #3 bool
INFO  16:45:14,658 - #3 flag_global
INFO  16:45:14,658 - #7 ;
INFO  16:45:14,658 - #3 char
INFO  16:45:14,659 - #3 char_global
INFO  16:45:14,659 - #7 ;
INFO  16:45:14,659 - #16 class
INFO  16:45:14,659 - #3 A
INFO  16:45:14,659 - #4 {
INFO  16:45:14,659 - #5 }
INFO  16:45:14,659 - #16 class
INFO  16:45:14,659 - #3 B
INFO  16:45:14,659 - #17 extends
INFO  16:45:14,659 - #3 A
INFO  16:45:14,659 - #4 {
INFO  16:45:14,659 - #5 }
INFO  16:45:14,659 - #16 class
INFO  16:45:14,659 - #3 C
INFO  16:45:14,659 - #4 {
INFO  16:45:14,659 - #3 int
INFO  16:45:14,659 - #3 c_int
INFO  16:45:14,660 - #13 ,
INFO  16:45:14,660 - #3 c_arr
INFO  16:45:14,660 - #14 [
INFO  16:45:14,660 - #15 ]
INFO  16:45:14,660 - #7 ;
INFO  16:45:14,660 - #3 bool
INFO  16:45:14,660 - #3 c_bool
INFO  16:45:14,660 - #7 ;
INFO  16:45:14,660 - #3 char
INFO  16:45:14,660 - #3 c_char
INFO  16:45:14,660 - #7 ;
INFO  16:45:14,660 - #5 }
INFO  16:45:14,660 - #16 class
INFO  16:45:14,660 - #3 D
INFO  16:45:14,660 - #17 extends
INFO  16:45:14,660 - #3 C
INFO  16:45:14,660 - #4 {
INFO  16:45:14,660 - #3 int
INFO  16:45:14,660 - #3 d_int
INFO  16:45:14,660 - #13 ,
INFO  16:45:14,661 - #3 d_arr
INFO  16:45:14,661 - #14 [
INFO  16:45:14,661 - #15 ]
INFO  16:45:14,661 - #7 ;
INFO  16:45:14,661 - #3 bool
INFO  16:45:14,661 - #3 d_bool
INFO  16:45:14,661 - #7 ;
INFO  16:45:14,661 - #3 char
INFO  16:45:14,661 - #3 d_char
INFO  16:45:14,661 - #7 ;
INFO  16:45:14,661 - #5 }
INFO  16:45:14,661 - #16 class
INFO  16:45:14,661 - #3 E
INFO  16:45:14,661 - #4 {
INFO  16:45:14,661 - #3 int
INFO  16:45:14,661 - #3 e_int
INFO  16:45:14,661 - #13 ,
INFO  16:45:14,661 - #3 e_arr
INFO  16:45:14,661 - #14 [
INFO  16:45:14,662 - #15 ]
INFO  16:45:14,662 - #7 ;
INFO  16:45:14,662 - #3 bool
INFO  16:45:14,662 - #3 e_bool
INFO  16:45:14,662 - #7 ;
INFO  16:45:14,662 - #3 char
INFO  16:45:14,662 - #3 e_char
INFO  16:45:14,662 - #7 ;
INFO  16:45:14,662 - #4 {
INFO  16:45:14,662 - #18 void
INFO  16:45:14,662 - #3 a
INFO  16:45:14,662 - #19 (
INFO  16:45:14,662 - #20 )
INFO  16:45:14,662 - #4 {
INFO  16:45:14,662 - #26 return
INFO  16:45:14,662 - #9 0
INFO  16:45:14,662 - #7 ;
INFO  16:45:14,662 - #5 }
INFO  16:45:14,663 - #3 int
INFO  16:45:14,663 - #3 b
INFO  16:45:14,663 - #19 (
INFO  16:45:14,663 - #20 )
INFO  16:45:14,663 - #4 {
INFO  16:45:14,663 - #26 return
INFO  16:45:14,663 - #9 0
INFO  16:45:14,663 - #7 ;
INFO  16:45:14,663 - #5 }
INFO  16:45:14,663 - #5 }
INFO  16:45:14,663 - #5 }
INFO  16:45:14,663 - #16 class
INFO  16:45:14,663 - #3 F
INFO  16:45:14,663 - #17 extends
INFO  16:45:14,664 - #3 E
INFO  16:45:14,664 - #4 {
INFO  16:45:14,664 - #3 int
INFO  16:45:14,664 - #3 f_int
INFO  16:45:14,664 - #13 ,
INFO  16:45:14,664 - #3 f_arr
INFO  16:45:14,664 - #14 [
INFO  16:45:14,664 - #15 ]
INFO  16:45:14,664 - #7 ;
INFO  16:45:14,664 - #3 bool
INFO  16:45:14,664 - #3 f_bool
INFO  16:45:14,664 - #7 ;
INFO  16:45:14,664 - #3 char
INFO  16:45:14,665 - #3 f_char
INFO  16:45:14,665 - #7 ;
INFO  16:45:14,665 - #3 string
INFO  16:45:14,665 - #3 string_f
INFO  16:45:14,665 - #7 ;
INFO  16:45:14,665 - #4 {
INFO  16:45:14,665 - #18 void
INFO  16:45:14,665 - #3 set_f
INFO  16:45:14,665 - #19 (
INFO  16:45:14,665 - #3 int
INFO  16:45:14,665 - #3 s
INFO  16:45:14,665 - #20 )
INFO  16:45:14,665 - #3 int
INFO  16:45:14,665 - #3 af_a
INFO  16:45:14,665 - #7 ;
INFO  16:45:14,665 - #4 {
INFO  16:45:14,665 - #23 if
INFO  16:45:14,666 - #19 (
INFO  16:45:14,666 - #3 s
INFO  16:45:14,666 - #35 ==
INFO  16:45:14,666 - #9 1
INFO  16:45:14,666 - #20 )
INFO  16:45:14,666 - #4 {
INFO  16:45:14,666 - #3 af_a
INFO  16:45:14,666 - #8 =
INFO  16:45:14,666 - #9 1
INFO  16:45:14,666 - #7 ;
INFO  16:45:14,666 - #5 }
INFO  16:45:14,666 - #28 else
INFO  16:45:14,666 - #4 {
INFO  16:45:14,666 - #3 af_a
INFO  16:45:14,666 - #8 =
INFO  16:45:14,666 - #9 0
INFO  16:45:14,666 - #7 ;
INFO  16:45:14,666 - #5 }
INFO  16:45:14,666 - #3 f_int
INFO  16:45:14,667 - #8 =
INFO  16:45:14,667 - #3 s
INFO  16:45:14,667 - #7 ;
INFO  16:45:14,667 - #5 }
INFO  16:45:14,667 - #3 int
INFO  16:45:14,667 - #3 bf
INFO  16:45:14,667 - #19 (
INFO  16:45:14,667 - #3 int
INFO  16:45:14,667 - #3 s
INFO  16:45:14,667 - #20 )
INFO  16:45:14,667 - #3 int
INFO  16:45:14,667 - #3 a_bf
INFO  16:45:14,667 - #7 ;
INFO  16:45:14,667 - #4 {
INFO  16:45:14,667 - #23 if
INFO  16:45:14,667 - #19 (
INFO  16:45:14,667 - #3 s
INFO  16:45:14,667 - #35 ==
INFO  16:45:14,667 - #9 1
INFO  16:45:14,667 - #20 )
INFO  16:45:14,668 - #27 read
INFO  16:45:14,668 - #19 (
INFO  16:45:14,668 - #3 s
INFO  16:45:14,668 - #20 )
INFO  16:45:14,668 - #7 ;
INFO  16:45:14,668 - #28 else
INFO  16:45:14,668 - #27 read
INFO  16:45:14,668 - #19 (
INFO  16:45:14,668 - #3 a_bf
INFO  16:45:14,668 - #20 )
INFO  16:45:14,668 - #7 ;
INFO  16:45:14,668 - #3 s
INFO  16:45:14,668 - #8 =
INFO  16:45:14,668 - #3 a_bf
INFO  16:45:14,668 - #7 ;
INFO  16:45:14,668 - #26 return
INFO  16:45:14,668 - #3 s
INFO  16:45:14,668 - #41 +
INFO  16:45:14,668 - #9 1
INFO  16:45:14,668 - #7 ;
INFO  16:45:14,668 - #5 }
INFO  16:45:14,669 - #3 int
INFO  16:45:14,669 - #3 getValue
INFO  16:45:14,669 - #19 (
INFO  16:45:14,669 - #20 )
INFO  16:45:14,669 - #4 {
INFO  16:45:14,669 - #3 this
INFO  16:45:14,669 - #34 .
INFO  16:45:14,669 - #3 e_int
INFO  16:45:14,669 - #8 =
INFO  16:45:14,669 - #9 5
INFO  16:45:14,669 - #7 ;
INFO  16:45:14,669 - #26 return
INFO  16:45:14,669 - #3 this
INFO  16:45:14,669 - #34 .
INFO  16:45:14,669 - #3 e_int
INFO  16:45:14,669 - #41 +
INFO  16:45:14,669 - #3 this
INFO  16:45:14,669 - #34 .
INFO  16:45:14,669 - #3 f_arr
INFO  16:45:14,669 - #14 [
INFO  16:45:14,670 - #9 0
INFO  16:45:14,670 - #15 ]
INFO  16:45:14,670 - #41 +
INFO  16:45:14,670 - #3 this
INFO  16:45:14,670 - #34 .
INFO  16:45:14,670 - #3 bf
INFO  16:45:14,670 - #19 (
INFO  16:45:14,670 - #9 1
INFO  16:45:14,670 - #20 )
INFO  16:45:14,670 - #7 ;
INFO  16:45:14,670 - #5 }
INFO  16:45:14,670 - #5 }
INFO  16:45:14,670 - #5 }
INFO  16:45:14,670 - #4 {
INFO  16:45:14,670 - #3 int
INFO  16:45:14,670 - #3 dec_function
INFO  16:45:14,670 - #19 (
INFO  16:45:14,670 - #3 int
INFO  16:45:14,670 - #3 a
INFO  16:45:14,671 - #20 )
INFO  16:45:14,671 - #4 {
INFO  16:45:14,671 - #26 return
INFO  16:45:14,671 - #3 a
INFO  16:45:14,671 - #32 -
INFO  16:45:14,671 - #9 1
INFO  16:45:14,671 - #7 ;
INFO  16:45:14,671 - #5 }
INFO  16:45:14,671 - #3 string
INFO  16:45:14,671 - #3 concat
INFO  16:45:14,671 - #19 (
INFO  16:45:14,671 - #3 string
INFO  16:45:14,671 - #3 s
INFO  16:45:14,671 - #20 )
INFO  16:45:14,671 - #4 {
INFO  16:45:14,671 - #26 return
INFO  16:45:14,671 - #3 s
INFO  16:45:14,671 - #41 +
INFO  16:45:14,672 - #12 aa
INFO  16:45:14,672 - #7 ;
INFO  16:45:14,672 - #5 }
INFO  16:45:14,672 - #3 string
INFO  16:45:14,672 - #3 concats
INFO  16:45:14,672 - #19 (
INFO  16:45:14,672 - #3 string
INFO  16:45:14,672 - #3 s1
INFO  16:45:14,672 - #13 ,
INFO  16:45:14,672 - #3 string
INFO  16:45:14,672 - #3 s2
INFO  16:45:14,672 - #20 )
INFO  16:45:14,672 - #4 {
INFO  16:45:14,672 - #26 return
INFO  16:45:14,672 - #3 s1
INFO  16:45:14,672 - #41 +
INFO  16:45:14,672 - #3 s2
INFO  16:45:14,672 - #7 ;
INFO  16:45:14,673 - #5 }
INFO  16:45:14,673 - #18 void
INFO  16:45:14,673 - #3 main
INFO  16:45:14,673 - #19 (
INFO  16:45:14,673 - #20 )
INFO  16:45:14,673 - #3 A
INFO  16:45:14,673 - #3 a
INFO  16:45:14,673 - #7 ;
INFO  16:45:14,673 - #3 F
INFO  16:45:14,673 - #3 f
INFO  16:45:14,673 - #7 ;
INFO  16:45:14,673 - #3 int
INFO  16:45:14,673 - #3 b
INFO  16:45:14,673 - #13 ,
INFO  16:45:14,673 - #3 temp
INFO  16:45:14,673 - #14 [
INFO  16:45:14,673 - #15 ]
INFO  16:45:14,673 - #7 ;
INFO  16:45:14,673 - #3 bool
INFO  16:45:14,674 - #3 c
INFO  16:45:14,674 - #7 ;
INFO  16:45:14,674 - #3 char
INFO  16:45:14,674 - #3 a
INFO  16:45:14,674 - #7 ;
INFO  16:45:14,674 - #3 string
INFO  16:45:14,674 - #3 str
INFO  16:45:14,674 - #7 ;
INFO  16:45:14,674 - #4 {
INFO  16:45:14,674 - #3 str
INFO  16:45:14,674 - #8 =
INFO  16:45:14,674 - #12 abcd
INFO  16:45:14,674 - #7 ;
INFO  16:45:14,674 - #3 str
INFO  16:45:14,674 - #8 =
INFO  16:45:14,674 - #3 concat
INFO  16:45:14,674 - #19 (
INFO  16:45:14,674 - #3 str
INFO  16:45:14,675 - #20 )
INFO  16:45:14,675 - #7 ;
INFO  16:45:14,675 - #3 str
INFO  16:45:14,675 - #8 =
INFO  16:45:14,675 - #12 si4
INFO  16:45:14,675 - #41 +
INFO  16:45:14,675 - #12 pp1
INFO  16:45:14,675 - #7 ;
INFO  16:45:14,675 - #3 str
INFO  16:45:14,675 - #8 =
INFO  16:45:14,675 - #3 concats
INFO  16:45:14,675 - #19 (
INFO  16:45:14,675 - #3 str
INFO  16:45:14,675 - #13 ,
INFO  16:45:14,675 - #12 DZ
INFO  16:45:14,676 - #20 )
INFO  16:45:14,676 - #7 ;
INFO  16:45:14,676 - #3 b
INFO  16:45:14,676 - #8 =
INFO  16:45:14,676 - #32 -
INFO  16:45:14,676 - #9 1
INFO  16:45:14,676 - #41 +
INFO  16:45:14,676 - #9 1
INFO  16:45:14,676 - #7 ;
INFO  16:45:14,676 - #3 b
INFO  16:45:14,676 - #21 ++
INFO  16:45:14,676 - #7 ;
INFO  16:45:14,676 - #3 b
INFO  16:45:14,676 - #22 --
INFO  16:45:14,676 - #7 ;
INFO  16:45:14,676 - #3 b
INFO  16:45:14,676 - #8 =
INFO  16:45:14,676 - #3 dec_function
INFO  16:45:14,676 - #19 (
INFO  16:45:14,676 - #3 b
INFO  16:45:14,677 - #20 )
INFO  16:45:14,677 - #7 ;
INFO  16:45:14,677 - #23 if
INFO  16:45:14,677 - #19 (
INFO  16:45:14,677 - #3 b
INFO  16:45:14,677 - #20 )
INFO  16:45:14,677 - #3 b
INFO  16:45:14,677 - #22 --
INFO  16:45:14,677 - #7 ;
INFO  16:45:14,677 - #23 if
INFO  16:45:14,677 - #19 (
INFO  16:45:14,677 - #3 b
INFO  16:45:14,677 - #36 !=
INFO  16:45:14,677 - #9 0
INFO  16:45:14,677 - #20 )
INFO  16:45:14,677 - #4 {
INFO  16:45:14,677 - #3 b
INFO  16:45:14,677 - #22 --
INFO  16:45:14,677 - #7 ;
INFO  16:45:14,677 - #5 }
INFO  16:45:14,678 - #23 if
INFO  16:45:14,678 - #19 (
INFO  16:45:14,678 - #3 b
INFO  16:45:14,678 - #35 ==
INFO  16:45:14,678 - #9 0
INFO  16:45:14,678 - #30 ||
INFO  16:45:14,678 - #3 str
INFO  16:45:14,678 - #35 ==
INFO  16:45:14,678 - #12 si4pp1
INFO  16:45:14,678 - #20 )
INFO  16:45:14,678 - #3 b
INFO  16:45:14,678 - #21 ++
INFO  16:45:14,678 - #7 ;
INFO  16:45:14,678 - #24 while
INFO  16:45:14,678 - #19 (
INFO  16:45:14,678 - #3 b
INFO  16:45:14,678 - #37 >
INFO  16:45:14,679 - #9 0
INFO  16:45:14,679 - #31 &&
INFO  16:45:14,679 - #3 b
INFO  16:45:14,679 - #39 <
INFO  16:45:14,679 - #9 2
INFO  16:45:14,679 - #30 ||
INFO  16:45:14,679 - #3 str
INFO  16:45:14,679 - #35 ==
INFO  16:45:14,679 - #12 si4pp1
INFO  16:45:14,679 - #20 )
INFO  16:45:14,679 - #4 {
INFO  16:45:14,679 - #3 b
INFO  16:45:14,679 - #22 --
INFO  16:45:14,679 - #7 ;
INFO  16:45:14,679 - #29 print
INFO  16:45:14,679 - #19 (
INFO  16:45:14,679 - #9 2
INFO  16:45:14,679 - #20 )
INFO  16:45:14,679 - #7 ;
INFO  16:45:14,679 - #29 print
INFO  16:45:14,679 - #19 (
INFO  16:45:14,679 - #12 cao
INFO  16:45:14,679 - #13 ,
INFO  16:45:14,680 - #9 3
INFO  16:45:14,680 - #20 )
INFO  16:45:14,680 - #7 ;
INFO  16:45:14,680 - #5 }
INFO  16:45:14,680 - #3 temp
INFO  16:45:14,680 - #8 =
INFO  16:45:14,680 - #33 new
INFO  16:45:14,680 - #3 int
INFO  16:45:14,680 - #14 [
INFO  16:45:14,680 - #9 2
INFO  16:45:14,680 - #15 ]
INFO  16:45:14,680 - #7 ;
INFO  16:45:14,680 - #3 a
INFO  16:45:14,680 - #8 =
INFO  16:45:14,680 - #33 new
INFO  16:45:14,680 - #3 A
INFO  16:45:14,680 - #7 ;
INFO  16:45:14,680 - #3 f
INFO  16:45:14,680 - #8 =
INFO  16:45:14,680 - #33 new
INFO  16:45:14,680 - #3 F
INFO  16:45:14,680 - #7 ;
INFO  16:45:14,680 - #3 f
INFO  16:45:14,680 - #34 .
INFO  16:45:14,680 - #3 f_int
INFO  16:45:14,681 - #8 =
INFO  16:45:14,681 - #3 dec_function
INFO  16:45:14,681 - #19 (
INFO  16:45:14,681 - #3 b
INFO  16:45:14,681 - #41 +
INFO  16:45:14,681 - #9 3
INFO  16:45:14,681 - #20 )
INFO  16:45:14,681 - #41 +
INFO  16:45:14,681 - #3 b
INFO  16:45:14,681 - #42 *
INFO  16:45:14,681 - #9 2
INFO  16:45:14,681 - #7 ;
INFO  16:45:14,681 - #27 read
INFO  16:45:14,681 - #19 (
INFO  16:45:14,681 - #3 f
INFO  16:45:14,681 - #34 .
INFO  16:45:14,681 - #3 f_char
INFO  16:45:14,681 - #20 )
INFO  16:45:14,681 - #7 ;
INFO  16:45:14,681 - #24 while
INFO  16:45:14,681 - #19 (
INFO  16:45:14,681 - #9 1
INFO  16:45:14,682 - #20 )
INFO  16:45:14,682 - #4 {
INFO  16:45:14,682 - #3 b
INFO  16:45:14,682 - #21 ++
INFO  16:45:14,682 - #7 ;
INFO  16:45:14,682 - #23 if
INFO  16:45:14,682 - #19 (
INFO  16:45:14,682 - #3 b
INFO  16:45:14,682 - #35 ==
INFO  16:45:14,682 - #9 10
INFO  16:45:14,682 - #20 )
INFO  16:45:14,682 - #25 break
INFO  16:45:14,682 - #7 ;
INFO  16:45:14,682 - #5 }
INFO  16:45:14,682 - #5 }
INFO  16:45:14,682 - #5 }
INFO  16:45:14,682 - Broj definicija globalnih promenljivih:3
INFO  16:45:14,682 - Broj definicija lokalnih promenljivih (u main funkciji):7
INFO  16:45:14,682 - Broj definicija globalnih konstanti:4
INFO  16:45:14,682 - Broj deklaracija globalnih nizova:1
INFO  16:45:14,682 - Broj definicija funkcija u glavnom programu:4
INFO  16:45:14,683 - Broj blokova naredbi:5
INFO  16:45:14,683 - Broj poziva funkcija u telu metode main:7
INFO  16:45:14,683 - Broj deklaracija formalnih argumenata funkcija:6
INFO  16:45:14,683 - Broj definicija unutrasnjih klasa:6
INFO  16:45:14,683 - Broj definicija metoda unutrasnjih klasa:5
INFO  16:45:14,683 - Broj deklaracija polja unutrasnjih klasa:17
INFO  16:45:14,683 - Parsiranje je uspesno zavrseno!
