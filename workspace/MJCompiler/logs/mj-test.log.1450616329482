INFO  13:47:08,781 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  13:47:08,786 - #2 program
INFO  13:47:08,786 - #3 Program
INFO  13:47:08,786 - #16 class
INFO  13:47:08,786 - #3 A
INFO  13:47:08,786 - #4 {
INFO  13:47:08,786 - #3 int
INFO  13:47:08,786 - #3 x
INFO  13:47:08,786 - #14 [
INFO  13:47:08,786 - #15 ]
INFO  13:47:08,786 - #13 ,
INFO  13:47:08,787 - #3 y
INFO  13:47:08,787 - #14 [
INFO  13:47:08,787 - #15 ]
INFO  13:47:08,787 - #7 ;
INFO  13:47:08,787 - #4 {
INFO  13:47:08,787 - #3 int
INFO  13:47:08,787 - #3 pr
INFO  13:47:08,787 - #19 (
INFO  13:47:08,787 - #20 )
INFO  13:47:08,787 - #4 {
INFO  13:47:08,787 - #26 return
INFO  13:47:08,787 - #9 1
INFO  13:47:08,787 - #7 ;
INFO  13:47:08,789 - #5 }
INFO  13:47:08,789 - #3 int
INFO  13:47:08,789 - #3 pr
INFO  13:47:08,789 - #19 (
INFO  13:47:08,789 - #20 )
INFO  13:47:08,789 - #4 {
INFO  13:47:08,789 - #26 return
INFO  13:47:08,789 - #9 0
INFO  13:47:08,789 - #7 ;
INFO  13:47:08,789 - #5 }
INFO  13:47:08,790 - #3 int
INFO  13:47:08,790 - #3 pr1
INFO  13:47:08,790 - #19 (
INFO  13:47:08,790 - #20 )
INFO  13:47:08,790 - #4 {
INFO  13:47:08,790 - #26 return
INFO  13:47:08,790 - #3 pr
INFO  13:47:08,790 - #19 (
INFO  13:47:08,790 - #20 )
INFO  13:47:08,790 - #7 ;
INFO  13:47:08,790 - #5 }
INFO  13:47:08,791 - #5 }
INFO  13:47:08,791 - #5 }
INFO  13:47:08,791 - #6 const
INFO  13:47:08,791 - #3 int
INFO  13:47:08,791 - #3 pi
INFO  13:47:08,791 - #8 =
INFO  13:47:08,791 - #9 3
INFO  13:47:08,791 - #13 ,
INFO  13:47:08,791 - #3 e
INFO  13:47:08,791 - #8 =
INFO  13:47:08,791 - #9 2
INFO  13:47:08,791 - #7 ;
INFO  13:47:08,791 - #6 const
INFO  13:47:08,791 - #3 string
INFO  13:47:08,791 - #3 strin
INFO  13:47:08,791 - #8 =
INFO  13:47:08,791 - #12 aaa
INFO  13:47:08,792 - #7 ;
INFO  13:47:08,792 - #16 class
INFO  13:47:08,792 - #3 B
INFO  13:47:08,792 - #17 extends
INFO  13:47:08,792 - #3 A
INFO  13:47:08,792 - #4 {
INFO  13:47:08,792 - #3 int
INFO  13:47:08,792 - #3 i
INFO  13:47:08,792 - #7 ;
INFO  13:47:08,792 - #3 int
INFO  13:47:08,792 - #3 x
INFO  13:47:08,792 - #14 [
INFO  13:47:08,792 - #15 ]
INFO  13:47:08,792 - #7 ;
INFO  13:47:08,792 - #3 A
INFO  13:47:08,792 - #3 theAA
INFO  13:47:08,792 - #7 ;
INFO  13:47:08,792 - #4 {
INFO  13:47:08,793 - #18 void
INFO  13:47:08,793 - #3 voidtest
INFO  13:47:08,793 - #19 (
INFO  13:47:08,793 - #3 int
INFO  13:47:08,793 - #3 a
INFO  13:47:08,793 - #13 ,
INFO  13:47:08,793 - #3 char
INFO  13:47:08,793 - #3 b
INFO  13:47:08,793 - #20 )
INFO  13:47:08,793 - #3 int
INFO  13:47:08,793 - #3 c
INFO  13:47:08,793 - #7 ;
INFO  13:47:08,793 - #4 {
INFO  13:47:08,793 - #27 read
INFO  13:47:08,793 - #19 (
INFO  13:47:08,793 - #3 a
INFO  13:47:08,793 - #20 )
INFO  13:47:08,793 - #7 ;
INFO  13:47:08,793 - #27 read
INFO  13:47:08,793 - #19 (
INFO  13:47:08,793 - #3 b
INFO  13:47:08,794 - #20 )
INFO  13:47:08,794 - #7 ;
INFO  13:47:08,794 - #27 read
INFO  13:47:08,794 - #19 (
INFO  13:47:08,794 - #3 c
INFO  13:47:08,794 - #20 )
INFO  13:47:08,794 - #7 ;
INFO  13:47:08,794 - #5 }
INFO  13:47:08,794 - #3 int
INFO  13:47:08,794 - #3 met
INFO  13:47:08,794 - #19 (
INFO  13:47:08,794 - #3 int
INFO  13:47:08,794 - #3 a
INFO  13:47:08,794 - #20 )
INFO  13:47:08,794 - #4 {
INFO  13:47:08,794 - #26 return
INFO  13:47:08,794 - #3 a
INFO  13:47:08,794 - #41 +
INFO  13:47:08,795 - #9 1
INFO  13:47:08,795 - #7 ;
INFO  13:47:08,795 - #5 }
INFO  13:47:08,795 - #3 int
INFO  13:47:08,795 - #3 getValue
INFO  13:47:08,795 - #19 (
INFO  13:47:08,795 - #3 int
INFO  13:47:08,795 - #3 a
INFO  13:47:08,795 - #20 )
INFO  13:47:08,795 - #3 int
INFO  13:47:08,795 - #3 b
INFO  13:47:08,795 - #7 ;
INFO  13:47:08,795 - #3 bool
INFO  13:47:08,795 - #3 c
INFO  13:47:08,795 - #7 ;
INFO  13:47:08,795 - #4 {
INFO  13:47:08,795 - #3 this
INFO  13:47:08,796 - #34 .
INFO  13:47:08,796 - #3 i
INFO  13:47:08,796 - #8 =
INFO  13:47:08,796 - #9 6
INFO  13:47:08,796 - #7 ;
INFO  13:47:08,796 - #26 return
INFO  13:47:08,796 - #3 this
INFO  13:47:08,796 - #34 .
INFO  13:47:08,796 - #3 i
INFO  13:47:08,796 - #41 +
INFO  13:47:08,796 - #3 this
INFO  13:47:08,796 - #34 .
INFO  13:47:08,796 - #3 x
INFO  13:47:08,796 - #14 [
INFO  13:47:08,796 - #9 0
INFO  13:47:08,796 - #15 ]
INFO  13:47:08,796 - #41 +
INFO  13:47:08,796 - #3 this
INFO  13:47:08,797 - #34 .
INFO  13:47:08,797 - #3 met
INFO  13:47:08,797 - #19 (
INFO  13:47:08,797 - #3 a
INFO  13:47:08,797 - #20 )
INFO  13:47:08,797 - #7 ;
INFO  13:47:08,797 - #5 }
INFO  13:47:08,797 - #5 }
INFO  13:47:08,797 - #5 }
INFO  13:47:08,797 - #16 class
INFO  13:47:08,797 - #3 C
INFO  13:47:08,797 - #17 extends
INFO  13:47:08,797 - #3 B
INFO  13:47:08,797 - #4 {
INFO  13:47:08,797 - #3 A
INFO  13:47:08,797 - #3 theA
INFO  13:47:08,797 - #7 ;
INFO  13:47:08,797 - #3 string
INFO  13:47:08,797 - #3 a
INFO  13:47:08,798 - #8 =
ERROR 13:47:08,798 - 
Sintaksna greska
INFO  13:47:08,798 - #12 bas je roze i zut
INFO  13:47:08,798 - #7 ;
INFO  13:47:08,798 - #4 {
INFO  13:47:08,798 - #18 void
INFO  13:47:08,798 - #3 glupost
ERROR 13:47:08,799 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do ; u liniji 46
INFO  13:47:08,799 - #19 (
INFO  13:47:08,799 - #3 int
INFO  13:47:08,799 - #13 ,
ERROR 13:47:08,799 - 
Sintaksna greska
INFO  13:47:08,799 - #3 m
INFO  13:47:08,799 - #20 )
INFO  13:47:08,799 - #3 int
INFO  13:47:08,799 - #3 i
INFO  13:47:08,799 - #13 ,
ERROR 13:47:08,799 - [Deklaracija form. parametra funkcije] Izvrsen oporavak do ) u liniji 49
INFO  13:47:08,799 - #3 bool
INFO  13:47:08,799 - #3 c
ERROR 13:47:08,799 - 
Sintaksna greska
INFO  13:47:08,799 - #4 {
INFO  13:47:08,800 - #26 return
INFO  13:47:08,800 - #3 i
INFO  13:47:08,800 - #41 +
ERROR 13:47:08,800 - [Deklaracija lokalne promenljive] Izvrsen oporavak do { u liniji 49
INFO  13:47:08,800 - #3 c
INFO  13:47:08,800 - #7 ;
INFO  13:47:08,800 - #5 }
INFO  13:47:08,800 - #5 }
INFO  13:47:08,800 - #5 }
INFO  13:47:08,800 - #16 class
INFO  13:47:08,800 - #3 E
INFO  13:47:08,800 - #17 extends
INFO  13:47:08,800 - #4 {
ERROR 13:47:08,800 - 
Sintaksna greska
INFO  13:47:08,801 - #3 bool
INFO  13:47:08,801 - #3 b
INFO  13:47:08,801 - #7 ;
ERROR 13:47:08,801 - [Deklaracija prosirenja natklase] Izvrsen oporavak do { u liniji 56
INFO  13:47:08,801 - #3 C
INFO  13:47:08,801 - #13 ,
ERROR 13:47:08,801 - 
Sintaksna greska
INFO  13:47:08,801 - #3 cc
INFO  13:47:08,801 - #13 ,
INFO  13:47:08,801 - #3 char
INFO  13:47:08,801 - #3 e
INFO  13:47:08,801 - #7 ;
INFO  13:47:08,801 - #5 }
ERROR 13:47:08,801 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do { u liniji 58
INFO  13:47:08,801 - #4 {
INFO  13:47:08,802 - #3 int
INFO  13:47:08,802 - #3 met
INFO  13:47:08,802 - #19 (
INFO  13:47:08,802 - #3 int
INFO  13:47:08,802 - #3 par
INFO  13:47:08,802 - #20 )
INFO  13:47:08,802 - #4 {
INFO  13:47:08,802 - #26 return
INFO  13:47:08,802 - #3 par
INFO  13:47:08,802 - #32 -
INFO  13:47:08,802 - #9 1
INFO  13:47:08,802 - #7 ;
INFO  13:47:08,802 - #5 }
INFO  13:47:08,802 - #3 string
INFO  13:47:08,802 - #3 strfunc
INFO  13:47:08,803 - #19 (
INFO  13:47:08,803 - #3 string
INFO  13:47:08,803 - #3 s
INFO  13:47:08,803 - #20 )
INFO  13:47:08,803 - #4 {
INFO  13:47:08,803 - #26 return
INFO  13:47:08,803 - #3 s
INFO  13:47:08,803 - #41 +
INFO  13:47:08,803 - #12 aa
INFO  13:47:08,803 - #7 ;
INFO  13:47:08,803 - #5 }
INFO  13:47:08,803 - #18 void
INFO  13:47:08,803 - #3 main
INFO  13:47:08,803 - #19 (
INFO  13:47:08,803 - #20 )
INFO  13:47:08,804 - #3 A
INFO  13:47:08,804 - #3 a
INFO  13:47:08,804 - #7 ;
INFO  13:47:08,804 - #3 B
INFO  13:47:08,804 - #3 b
INFO  13:47:08,804 - #7 ;
INFO  13:47:08,804 - #3 C
INFO  13:47:08,804 - #3 c
INFO  13:47:08,804 - #7 ;
INFO  13:47:08,804 - #3 int
INFO  13:47:08,804 - #3 i
INFO  13:47:08,804 - #13 ,
INFO  13:47:08,804 - #3 y
INFO  13:47:08,804 - #13 ,
INFO  13:47:08,804 - #3 z
INFO  13:47:08,804 - #7 ;
INFO  13:47:08,805 - #3 int
INFO  13:47:08,805 - #3 x
INFO  13:47:08,805 - #14 [
INFO  13:47:08,805 - #15 ]
INFO  13:47:08,805 - #7 ;
INFO  13:47:08,805 - #3 string
INFO  13:47:08,805 - #3 str1
INFO  13:47:08,805 - #13 ,
INFO  13:47:08,805 - #3 str2
INFO  13:47:08,805 - #7 ;
INFO  13:47:08,805 - #3 bool
INFO  13:47:08,805 - #3 bulin
INFO  13:47:08,805 - #7 ;
INFO  13:47:08,806 - #4 {
INFO  13:47:08,806 - #3 str2
INFO  13:47:08,806 - #8 =
INFO  13:47:08,806 - #12 abcd
INFO  13:47:08,806 - #7 ;
INFO  13:47:08,806 - #3 str1
INFO  13:47:08,806 - #8 =
INFO  13:47:08,806 - #12 abc
INFO  13:47:08,806 - #41 +
INFO  13:47:08,806 - #3 strfunc
INFO  13:47:08,806 - #19 (
INFO  13:47:08,806 - #3 str2
INFO  13:47:08,806 - #20 )
INFO  13:47:08,806 - #7 ;
INFO  13:47:08,806 - #3 str2
INFO  13:47:08,807 - #8 =
INFO  13:47:08,807 - #12 mama
INFO  13:47:08,807 - #41 +
INFO  13:47:08,807 - #12 tata
INFO  13:47:08,807 - #7 ;
INFO  13:47:08,807 - #3 strin
INFO  13:47:08,807 - #8 =
INFO  13:47:08,807 - #12 ne moze se dodeliti vrednost konstantnom stringu
INFO  13:47:08,807 - #7 ;
INFO  13:47:08,807 - #3 bulin
INFO  13:47:08,807 - #8 =
INFO  13:47:08,807 - #32 -
INFO  13:47:08,807 - #11 true
ERROR 13:47:08,807 - 
Sintaksna greska
INFO  13:47:08,807 - #7 ;
INFO  13:47:08,807 - #29 print
INFO  13:47:08,807 - #19 (
INFO  13:47:08,807 - #3 bulin
ERROR 13:47:08,807 - [Konstrukcija dodele iskaza] Izvrsen oporavak do ; u liniji 74
INFO  13:47:08,808 - #20 )
INFO  13:47:08,808 - #7 ;
INFO  13:47:08,808 - #3 a
INFO  13:47:08,808 - #8 =
INFO  13:47:08,808 - #33 new
INFO  13:47:08,808 - #3 A
INFO  13:47:08,808 - #7 ;
INFO  13:47:08,808 - #3 a
INFO  13:47:08,808 - #34 .
INFO  13:47:08,808 - #3 x
INFO  13:47:08,808 - #8 =
INFO  13:47:08,808 - #33 new
INFO  13:47:08,808 - #3 int
INFO  13:47:08,808 - #14 [
INFO  13:47:08,808 - #9 5
INFO  13:47:08,808 - #15 ]
INFO  13:47:08,808 - #7 ;
INFO  13:47:08,808 - #3 a
INFO  13:47:08,808 - #34 .
INFO  13:47:08,808 - #3 y
INFO  13:47:08,808 - #8 =
INFO  13:47:08,808 - #33 new
INFO  13:47:08,808 - #3 int
INFO  13:47:08,808 - #14 [
INFO  13:47:08,809 - #9 5
INFO  13:47:08,809 - #15 ]
INFO  13:47:08,809 - #7 ;
INFO  13:47:08,809 - #3 c
INFO  13:47:08,809 - #8 =
INFO  13:47:08,809 - #33 new
INFO  13:47:08,809 - #3 C
INFO  13:47:08,809 - #7 ;
INFO  13:47:08,809 - #3 i
INFO  13:47:08,809 - #8 =
INFO  13:47:08,809 - #3 met
INFO  13:47:08,809 - #19 (
INFO  13:47:08,809 - #3 pi
INFO  13:47:08,809 - #41 +
INFO  13:47:08,809 - #9 3
INFO  13:47:08,809 - #20 )
INFO  13:47:08,809 - #41 +
INFO  13:47:08,809 - #3 e
INFO  13:47:08,809 - #42 *
INFO  13:47:08,809 - #9 2
INFO  13:47:08,809 - #7 ;
INFO  13:47:08,809 - #3 c
INFO  13:47:08,809 - #34 .
INFO  13:47:08,810 - #3 theA
INFO  13:47:08,810 - #8 =
INFO  13:47:08,810 - #3 a
INFO  13:47:08,810 - #7 ;
INFO  13:47:08,810 - #3 c
INFO  13:47:08,810 - #34 .
INFO  13:47:08,810 - #3 x
INFO  13:47:08,810 - #8 =
INFO  13:47:08,810 - #33 new
INFO  13:47:08,810 - #3 int
INFO  13:47:08,810 - #14 [
INFO  13:47:08,810 - #9 5
INFO  13:47:08,810 - #15 ]
INFO  13:47:08,810 - #7 ;
INFO  13:47:08,810 - #3 x
INFO  13:47:08,810 - #8 =
INFO  13:47:08,810 - #33 new
INFO  13:47:08,810 - #3 int
INFO  13:47:08,810 - #14 [
INFO  13:47:08,810 - #9 3
INFO  13:47:08,810 - #15 ]
INFO  13:47:08,810 - #7 ;
INFO  13:47:08,811 - #3 i
INFO  13:47:08,811 - #8 =
INFO  13:47:08,811 - #9 0
INFO  13:47:08,811 - #7 ;
INFO  13:47:08,811 - #27 read
INFO  13:47:08,811 - #19 (
INFO  13:47:08,811 - #3 c
INFO  13:47:08,811 - #34 .
INFO  13:47:08,811 - #3 i
INFO  13:47:08,811 - #20 )
INFO  13:47:08,811 - #7 ;
INFO  13:47:08,811 - #24 while
INFO  13:47:08,811 - #19 (
INFO  13:47:08,811 - #3 i
INFO  13:47:08,811 - #39 <
INFO  13:47:08,811 - #9 5
INFO  13:47:08,811 - #20 )
INFO  13:47:08,811 - #4 {
INFO  13:47:08,811 - #27 read
INFO  13:47:08,811 - #19 (
INFO  13:47:08,811 - #3 c
INFO  13:47:08,811 - #34 .
INFO  13:47:08,811 - #3 x
INFO  13:47:08,811 - #14 [
INFO  13:47:08,811 - #3 i
INFO  13:47:08,812 - #15 ]
INFO  13:47:08,812 - #20 )
INFO  13:47:08,812 - #7 ;
INFO  13:47:08,812 - #27 read
INFO  13:47:08,812 - #19 (
INFO  13:47:08,812 - #3 c
INFO  13:47:08,812 - #34 .
INFO  13:47:08,812 - #3 theA
INFO  13:47:08,812 - #34 .
INFO  13:47:08,812 - #3 x
INFO  13:47:08,812 - #14 [
INFO  13:47:08,812 - #3 i
INFO  13:47:08,812 - #15 ]
INFO  13:47:08,812 - #20 )
INFO  13:47:08,812 - #7 ;
INFO  13:47:08,812 - #3 i
INFO  13:47:08,812 - #21 ++
INFO  13:47:08,812 - #7 ;
INFO  13:47:08,812 - #5 }
INFO  13:47:08,812 - #29 print
INFO  13:47:08,812 - #19 (
INFO  13:47:08,812 - #3 c
INFO  13:47:08,812 - #34 .
INFO  13:47:08,812 - #3 getValue
INFO  13:47:08,812 - #19 (
INFO  13:47:08,812 - #3 c
INFO  13:47:08,812 - #34 .
INFO  13:47:08,813 - #3 theA
INFO  13:47:08,813 - #34 .
INFO  13:47:08,813 - #3 x
INFO  13:47:08,813 - #14 [
INFO  13:47:08,813 - #9 0
INFO  13:47:08,813 - #15 ]
INFO  13:47:08,813 - #20 )
INFO  13:47:08,813 - #20 )
INFO  13:47:08,813 - #7 ;
INFO  13:47:08,813 - #3 c
INFO  13:47:08,813 - #34 .
INFO  13:47:08,813 - #3 theA
INFO  13:47:08,813 - #34 .
INFO  13:47:08,813 - #3 x
INFO  13:47:08,813 - #14 [
INFO  13:47:08,813 - #9 0
INFO  13:47:08,813 - #15 ]
INFO  13:47:08,813 - #8 =
INFO  13:47:08,813 - #9 1
INFO  13:47:08,813 - #7 ;
INFO  13:47:08,813 - #23 if
INFO  13:47:08,813 - #19 (
INFO  13:47:08,813 - #3 i
INFO  13:47:08,813 - #35 ==
INFO  13:47:08,813 - #9 1
INFO  13:47:08,814 - #20 )
INFO  13:47:08,814 - #3 i
INFO  13:47:08,814 - #8 =
INFO  13:47:08,814 - #3 c
INFO  13:47:08,814 - #34 .
INFO  13:47:08,814 - #3 met
INFO  13:47:08,814 - #19 (
INFO  13:47:08,814 - #9 1
INFO  13:47:08,814 - #20 )
INFO  13:47:08,814 - #41 +
INFO  13:47:08,814 - #3 b
INFO  13:47:08,814 - #34 .
INFO  13:47:08,814 - #3 getValue
INFO  13:47:08,814 - #19 (
INFO  13:47:08,814 - #3 c
INFO  13:47:08,814 - #34 .
INFO  13:47:08,814 - #3 x
INFO  13:47:08,814 - #14 [
INFO  13:47:08,814 - #9 0
INFO  13:47:08,814 - #15 ]
INFO  13:47:08,814 - #20 )
INFO  13:47:08,814 - #41 +
INFO  13:47:08,814 - #9 5
INFO  13:47:08,814 - #42 *
INFO  13:47:08,814 - #9 8
INFO  13:47:08,814 - #7 ;
INFO  13:47:08,815 - #3 b
INFO  13:47:08,815 - #34 .
INFO  13:47:08,815 - #3 getValue
INFO  13:47:08,815 - #19 (
INFO  13:47:08,815 - #3 b
INFO  13:47:08,815 - #34 .
INFO  13:47:08,815 - #3 y
INFO  13:47:08,815 - #14 [
INFO  13:47:08,815 - #3 i
INFO  13:47:08,815 - #15 ]
INFO  13:47:08,815 - #20 )
INFO  13:47:08,815 - #7 ;
INFO  13:47:08,815 - #3 b
INFO  13:47:08,815 - #34 .
INFO  13:47:08,815 - #3 pr
INFO  13:47:08,815 - #19 (
INFO  13:47:08,815 - #20 )
INFO  13:47:08,815 - #7 ;
INFO  13:47:08,815 - #3 i
INFO  13:47:08,815 - #8 =
INFO  13:47:08,815 - #9 4
INFO  13:47:08,816 - #42 *
INFO  13:47:08,816 - #19 (
INFO  13:47:08,816 - #9 5
INFO  13:47:08,816 - #41 +
INFO  13:47:08,816 - #9 6
INFO  13:47:08,816 - #41 +
INFO  13:47:08,816 - #3 i
INFO  13:47:08,816 - #20 )
INFO  13:47:08,816 - #41 +
INFO  13:47:08,816 - #3 i
INFO  13:47:08,816 - #41 +
INFO  13:47:08,816 - #3 met
INFO  13:47:08,816 - #19 (
INFO  13:47:08,816 - #9 2
INFO  13:47:08,816 - #20 )
INFO  13:47:08,816 - #7 ;
INFO  13:47:08,816 - #3 chr
INFO  13:47:08,816 - #19 (
INFO  13:47:08,816 - #9 1
INFO  13:47:08,816 - #20 )
INFO  13:47:08,817 - #7 ;
INFO  13:47:08,817 - #3 i
INFO  13:47:08,817 - #8 =
INFO  13:47:08,817 - #3 ord
INFO  13:47:08,817 - #19 (
INFO  13:47:08,817 - #10 1
INFO  13:47:08,817 - #20 )
INFO  13:47:08,817 - #7 ;
INFO  13:47:08,817 - #29 print
INFO  13:47:08,817 - #19 (
INFO  13:47:08,817 - #9 4
INFO  13:47:08,817 - #13 ,
INFO  13:47:08,817 - #9 1
INFO  13:47:08,817 - #20 )
INFO  13:47:08,817 - #7 ;
INFO  13:47:08,817 - #3 a
INFO  13:47:08,817 - #8 =
INFO  13:47:08,817 - #3 b
INFO  13:47:08,817 - #7 ;
INFO  13:47:08,817 - #23 if
INFO  13:47:08,817 - #19 (
INFO  13:47:08,817 - #11 true
ERROR 13:47:08,818 - 
Sintaksna greska
INFO  13:47:08,818 - #20 )
INFO  13:47:08,818 - #3 i
INFO  13:47:08,818 - #21 ++
INFO  13:47:08,818 - #7 ;
ERROR 13:47:08,818 - [Logicki izraz] Izvrsen oporavak do ) u liniji 105
INFO  13:47:08,818 - #24 while
INFO  13:47:08,818 - #19 (
INFO  13:47:08,818 - #3 str2
INFO  13:47:08,818 - #35 ==
INFO  13:47:08,818 - #12 kraj
INFO  13:47:08,818 - #30 ||
INFO  13:47:08,818 - #3 str1
INFO  13:47:08,818 - #35 ==
INFO  13:47:08,818 - #12 kraj
INFO  13:47:08,818 - #20 )
INFO  13:47:08,818 - #4 {
INFO  13:47:08,818 - #3 c
INFO  13:47:08,818 - #34 .
INFO  13:47:08,819 - #3 theA
INFO  13:47:08,819 - #34 .
INFO  13:47:08,819 - #3 x
INFO  13:47:08,819 - #14 [
INFO  13:47:08,819 - #3 i
INFO  13:47:08,819 - #15 ]
INFO  13:47:08,819 - #8 =
INFO  13:47:08,819 - #3 a
INFO  13:47:08,819 - #34 .
INFO  13:47:08,819 - #3 x
INFO  13:47:08,819 - #14 [
INFO  13:47:08,819 - #3 i
INFO  13:47:08,819 - #15 ]
INFO  13:47:08,819 - #7 ;
INFO  13:47:08,819 - #23 if
INFO  13:47:08,819 - #19 (
INFO  13:47:08,819 - #3 b
INFO  13:47:08,819 - #34 .
INFO  13:47:08,819 - #3 theAA
INFO  13:47:08,819 - #34 .
INFO  13:47:08,819 - #3 y
INFO  13:47:08,819 - #14 [
INFO  13:47:08,819 - #3 i
INFO  13:47:08,819 - #15 ]
INFO  13:47:08,819 - #35 ==
INFO  13:47:08,819 - #3 c
INFO  13:47:08,819 - #34 .
INFO  13:47:08,819 - #3 theA
INFO  13:47:08,820 - #34 .
INFO  13:47:08,820 - #3 x
INFO  13:47:08,820 - #14 [
INFO  13:47:08,820 - #3 i
INFO  13:47:08,820 - #15 ]
INFO  13:47:08,820 - #31 &&
INFO  13:47:08,820 - #3 c
INFO  13:47:08,820 - #34 .
INFO  13:47:08,820 - #3 pr1
INFO  13:47:08,820 - #19 (
INFO  13:47:08,820 - #20 )
INFO  13:47:08,820 - #20 )
INFO  13:47:08,820 - #25 break
INFO  13:47:08,820 - #7 ;
INFO  13:47:08,820 - #27 read
INFO  13:47:08,820 - #19 (
INFO  13:47:08,820 - #3 str1
INFO  13:47:08,820 - #20 )
INFO  13:47:08,820 - #7 ;
INFO  13:47:08,820 - #27 read
INFO  13:47:08,820 - #19 (
INFO  13:47:08,820 - #3 str2
INFO  13:47:08,820 - #20 )
INFO  13:47:08,820 - #7 ;
INFO  13:47:08,820 - #5 }
INFO  13:47:08,820 - #5 }
INFO  13:47:08,820 - #5 }
ERROR 13:47:08,824 - Parsiranje nije uspesno zavrseno!
