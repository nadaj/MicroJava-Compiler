INFO  00:41:56,682 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  00:41:56,690 - #2 program
INFO  00:41:56,690 - #3 Program
INFO  00:41:56,690 - #16 class
INFO  00:41:56,690 - #3 A
INFO  00:41:56,691 - #4 {
INFO  00:41:56,691 - #3 int
INFO  00:41:56,691 - #3 x
INFO  00:41:56,691 - #14 [
INFO  00:41:56,691 - #15 ]
INFO  00:41:56,691 - #13 ,
INFO  00:41:56,691 - #3 y
INFO  00:41:56,691 - #14 [
INFO  00:41:56,691 - #15 ]
INFO  00:41:56,691 - #7 ;
INFO  00:41:56,691 - #5 }
INFO  00:41:56,691 - #6 const
INFO  00:41:56,692 - #3 int
INFO  00:41:56,692 - #3 pi
INFO  00:41:56,692 - #8 =
INFO  00:41:56,692 - #9 3
INFO  00:41:56,692 - #13 ,
INFO  00:41:56,692 - #3 e
INFO  00:41:56,692 - #8 =
INFO  00:41:56,692 - #9 2
INFO  00:41:56,692 - #7 ;
INFO  00:41:56,692 - #16 class
INFO  00:41:56,692 - #3 B
INFO  00:41:56,692 - #17 extends
INFO  00:41:56,692 - #3 A
INFO  00:41:56,693 - #4 {
INFO  00:41:56,693 - #3 int
INFO  00:41:56,693 - #3 i
INFO  00:41:56,693 - #7 ;
INFO  00:41:56,693 - #3 int
INFO  00:41:56,693 - #3 x
INFO  00:41:56,693 - #14 [
INFO  00:41:56,693 - #15 ]
INFO  00:41:56,693 - #7 ;
INFO  00:41:56,693 - #4 {
INFO  00:41:56,693 - #3 int
INFO  00:41:56,693 - #3 getValue
INFO  00:41:56,693 - #19 (
INFO  00:41:56,694 - #3 int
INFO  00:41:56,694 - #3 a
INFO  00:41:56,694 - #20 )
INFO  00:41:56,694 - #3 int
INFO  00:41:56,694 - #3 b
INFO  00:41:56,694 - #7 ;
INFO  00:41:56,694 - #3 bool
INFO  00:41:56,694 - #3 c
INFO  00:41:56,694 - #7 ;
INFO  00:41:56,694 - #4 {
INFO  00:41:56,694 - #26 return
INFO  00:41:56,694 - #3 this
INFO  00:41:56,694 - #34 .
INFO  00:41:56,694 - #3 i
INFO  00:41:56,694 - #41 +
INFO  00:41:56,694 - #3 this
INFO  00:41:56,694 - #34 .
INFO  00:41:56,694 - #3 x
INFO  00:41:56,694 - #14 [
INFO  00:41:56,695 - #9 0
INFO  00:41:56,695 - #15 ]
INFO  00:41:56,695 - #41 +
INFO  00:41:56,695 - #3 a
INFO  00:41:56,695 - #7 ;
INFO  00:41:56,695 - #5 }
INFO  00:41:56,695 - #5 }
INFO  00:41:56,695 - #5 }
INFO  00:41:56,695 - #16 class
INFO  00:41:56,695 - #3 C
INFO  00:41:56,695 - #17 extends
INFO  00:41:56,695 - #3 B
INFO  00:41:56,695 - #4 {
INFO  00:41:56,695 - #3 A
INFO  00:41:56,695 - #3 theA
INFO  00:41:56,695 - #7 ;
INFO  00:41:56,695 - #3 string
INFO  00:41:56,696 - #3 a
INFO  00:41:56,696 - #7 ;
INFO  00:41:56,696 - #5 }
INFO  00:41:56,696 - #4 {
INFO  00:41:56,696 - #18 void
INFO  00:41:56,696 - #3 main
INFO  00:41:56,696 - #19 (
INFO  00:41:56,696 - #20 )
INFO  00:41:56,696 - #3 A
INFO  00:41:56,696 - #3 a
INFO  00:41:56,696 - #7 ;
INFO  00:41:56,696 - #3 C
INFO  00:41:56,696 - #3 c
INFO  00:41:56,696 - #7 ;
INFO  00:41:56,696 - #3 int
INFO  00:41:56,697 - #3 i
INFO  00:41:56,697 - #7 ;
INFO  00:41:56,697 - #3 int
INFO  00:41:56,697 - #3 x
INFO  00:41:56,697 - #14 [
INFO  00:41:56,697 - #15 ]
INFO  00:41:56,697 - #7 ;
INFO  00:41:56,697 - #4 {
INFO  00:41:56,697 - #3 a
INFO  00:41:56,697 - #8 =
INFO  00:41:56,697 - #33 new
INFO  00:41:56,697 - #3 A
INFO  00:41:56,697 - #7 ;
INFO  00:41:56,697 - #3 a
INFO  00:41:56,698 - #34 .
INFO  00:41:56,698 - #3 x
INFO  00:41:56,698 - #8 =
INFO  00:41:56,698 - #33 new
INFO  00:41:56,698 - #3 int
INFO  00:41:56,698 - #14 [
INFO  00:41:56,698 - #9 5
INFO  00:41:56,698 - #15 ]
INFO  00:41:56,698 - #7 ;
INFO  00:41:56,698 - #3 a
INFO  00:41:56,698 - #34 .
INFO  00:41:56,698 - #3 y
INFO  00:41:56,698 - #8 =
INFO  00:41:56,698 - #33 new
INFO  00:41:56,699 - #3 int
INFO  00:41:56,699 - #14 [
INFO  00:41:56,699 - #9 5
INFO  00:41:56,699 - #15 ]
INFO  00:41:56,699 - #7 ;
INFO  00:41:56,699 - #3 c
INFO  00:41:56,699 - #8 =
INFO  00:41:56,699 - #33 new
INFO  00:41:56,699 - #3 C
INFO  00:41:56,699 - #7 ;
INFO  00:41:56,699 - #3 c
INFO  00:41:56,700 - #34 .
INFO  00:41:56,700 - #3 theA
INFO  00:41:56,700 - #8 =
INFO  00:41:56,700 - #3 a
INFO  00:41:56,700 - #7 ;
INFO  00:41:56,700 - #3 c
INFO  00:41:56,700 - #34 .
INFO  00:41:56,700 - #3 x
INFO  00:41:56,700 - #8 =
INFO  00:41:56,700 - #33 new
INFO  00:41:56,700 - #3 int
INFO  00:41:56,700 - #14 [
INFO  00:41:56,701 - #9 5
INFO  00:41:56,701 - #15 ]
INFO  00:41:56,701 - #7 ;
INFO  00:41:56,701 - #3 x
INFO  00:41:56,701 - #8 =
INFO  00:41:56,701 - #33 new
INFO  00:41:56,701 - #3 int
INFO  00:41:56,701 - #14 [
INFO  00:41:56,701 - #9 3
INFO  00:41:56,701 - #15 ]
INFO  00:41:56,701 - #7 ;
INFO  00:41:56,701 - #3 i
INFO  00:41:56,702 - #8 =
INFO  00:41:56,702 - #9 0
INFO  00:41:56,702 - #7 ;
INFO  00:41:56,702 - #27 read
INFO  00:41:56,702 - #19 (
INFO  00:41:56,702 - #3 c
INFO  00:41:56,702 - #34 .
INFO  00:41:56,702 - #3 i
INFO  00:41:56,702 - #20 )
INFO  00:41:56,702 - #7 ;
INFO  00:41:56,702 - #24 while
INFO  00:41:56,702 - #19 (
INFO  00:41:56,703 - #3 i
INFO  00:41:56,703 - #39 <
INFO  00:41:56,703 - #9 5
INFO  00:41:56,703 - #20 )
INFO  00:41:56,703 - #4 {
INFO  00:41:56,703 - #27 read
INFO  00:41:56,703 - #19 (
INFO  00:41:56,703 - #3 c
INFO  00:41:56,703 - #34 .
INFO  00:41:56,703 - #3 x
INFO  00:41:56,703 - #14 [
INFO  00:41:56,703 - #3 i
INFO  00:41:56,703 - #15 ]
INFO  00:41:56,704 - #20 )
INFO  00:41:56,704 - #7 ;
INFO  00:41:56,704 - #27 read
INFO  00:41:56,704 - #19 (
INFO  00:41:56,704 - #3 c
INFO  00:41:56,704 - #34 .
INFO  00:41:56,704 - #3 theA
INFO  00:41:56,704 - #34 .
INFO  00:41:56,704 - #3 x
INFO  00:41:56,704 - #14 [
INFO  00:41:56,704 - #3 i
INFO  00:41:56,705 - #15 ]
INFO  00:41:56,705 - #20 )
INFO  00:41:56,705 - #7 ;
INFO  00:41:56,705 - #3 i
INFO  00:41:56,705 - #21 ++
INFO  00:41:56,705 - #7 ;
INFO  00:41:56,705 - #5 }
INFO  00:41:56,705 - #29 print
INFO  00:41:56,705 - #19 (
INFO  00:41:56,705 - #3 c
INFO  00:41:56,705 - #34 .
INFO  00:41:56,706 - #3 getValue
INFO  00:41:56,706 - #19 (
INFO  00:41:56,706 - #3 c
INFO  00:41:56,706 - #34 .
INFO  00:41:56,706 - #3 theA
INFO  00:41:56,706 - #34 .
INFO  00:41:56,706 - #3 x
INFO  00:41:56,706 - #14 [
INFO  00:41:56,706 - #9 0
INFO  00:41:56,706 - #15 ]
INFO  00:41:56,706 - #20 )
INFO  00:41:56,706 - #20 )
INFO  00:41:56,706 - #7 ;
INFO  00:41:56,706 - #5 }
INFO  00:41:56,707 - #5 }
