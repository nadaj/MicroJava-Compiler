INFO  20:11:36,661 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:11:36,665 - #1 program
INFO  20:11:36,666 - #14 Program
INFO  20:11:36,666 - #3 class
INFO  20:11:36,666 - #14 A
INFO  20:11:36,666 - #42 {
INFO  20:11:36,666 - #14 int
INFO  20:11:36,666 - #14 x
INFO  20:11:36,666 - #40 [
INFO  20:11:36,666 - #41 ]
INFO  20:11:36,666 - #36 ,
INFO  20:11:36,666 - #14 y
INFO  20:11:36,666 - #40 [
INFO  20:11:36,666 - #41 ]
INFO  20:11:36,666 - #35 ;
INFO  20:11:36,667 - #43 }
INFO  20:11:36,667 - #5 const
INFO  20:11:36,667 - #14 int
INFO  20:11:36,667 - #14 pi
INFO  20:11:36,667 - #32 =
INFO  20:11:36,667 - #15 3
INFO  20:11:36,667 - #36 ,
INFO  20:11:36,667 - #14 e
INFO  20:11:36,667 - #32 =
INFO  20:11:36,667 - #15 2
INFO  20:11:36,667 - #35 ;
INFO  20:11:36,667 - #5 const
INFO  20:11:36,667 - #14 Boolean
INFO  20:11:36,668 - #14 p
INFO  20:11:36,668 - #32 =
INFO  20:11:36,668 - #17 true
INFO  20:11:36,668 - #36 ,
INFO  20:11:36,668 - #14 dd
INFO  20:11:36,668 - #32 =
INFO  20:11:36,668 - #17 false
INFO  20:11:36,668 - #35 ;
INFO  20:11:36,668 - #5 const
INFO  20:11:36,668 - #14 String
INFO  20:11:36,668 - #14 s
INFO  20:11:36,668 - #32 =
INFO  20:11:36,669 - #18 dsfsdfsdfsd
INFO  20:11:36,669 - #35 ;
INFO  20:11:36,669 - #5 const
INFO  20:11:36,669 - #14 char
INFO  20:11:36,669 - #14 t
INFO  20:11:36,669 - #32 =
INFO  20:11:36,669 - #16 p
INFO  20:11:36,669 - #35 ;
INFO  20:11:36,669 - #3 class
INFO  20:11:36,669 - #14 B
INFO  20:11:36,669 - #13 extends
INFO  20:11:36,669 - #14 A
INFO  20:11:36,669 - #42 {
INFO  20:11:36,669 - #14 int
INFO  20:11:36,669 - #14 i
INFO  20:11:36,669 - #35 ;
INFO  20:11:36,669 - #14 int
INFO  20:11:36,670 - #14 x
INFO  20:11:36,670 - #40 [
INFO  20:11:36,670 - #41 ]
INFO  20:11:36,670 - #35 ;
INFO  20:11:36,670 - #14 int
INFO  20:11:36,670 - #14 getValue
INFO  20:11:36,670 - #38 (
INFO  20:11:36,670 - #14 int
INFO  20:11:36,670 - #14 a
INFO  20:11:36,670 - #39 )
INFO  20:11:36,670 - #14 int
INFO  20:11:36,670 - #14 b
INFO  20:11:36,670 - #35 ;
INFO  20:11:36,670 - #14 bool
INFO  20:11:36,670 - #14 c
INFO  20:11:36,670 - #35 ;
INFO  20:11:36,670 - #42 {
INFO  20:11:36,670 - #10 return
INFO  20:11:36,670 - #14 this
INFO  20:11:36,670 - #37 .
INFO  20:11:36,670 - #14 i
INFO  20:11:36,671 - #19 +
INFO  20:11:36,671 - #14 this
INFO  20:11:36,671 - #37 .
INFO  20:11:36,671 - #14 x
INFO  20:11:36,671 - #40 [
INFO  20:11:36,671 - #15 0
INFO  20:11:36,671 - #41 ]
INFO  20:11:36,671 - #19 +
INFO  20:11:36,671 - #14 a
INFO  20:11:36,671 - #35 ;
INFO  20:11:36,671 - #43 }
INFO  20:11:36,671 - #43 }
INFO  20:11:36,671 - #3 class
INFO  20:11:36,671 - #14 C
INFO  20:11:36,671 - #13 extends
INFO  20:11:36,671 - #14 B
INFO  20:11:36,671 - #42 {
INFO  20:11:36,671 - #14 A
INFO  20:11:36,671 - #14 theA
INFO  20:11:36,671 - #35 ;
INFO  20:11:36,671 - #14 string
INFO  20:11:36,671 - #14 a
INFO  20:11:36,671 - #35 ;
INFO  20:11:36,671 - #43 }
INFO  20:11:36,672 - #42 {
INFO  20:11:36,672 - #11 void
INFO  20:11:36,672 - #14 main
INFO  20:11:36,672 - #38 (
INFO  20:11:36,672 - #39 )
INFO  20:11:36,672 - #14 A
INFO  20:11:36,672 - #14 a
INFO  20:11:36,672 - #35 ;
INFO  20:11:36,672 - #14 C
INFO  20:11:36,672 - #14 c
INFO  20:11:36,672 - #35 ;
INFO  20:11:36,672 - #14 int
INFO  20:11:36,672 - #14 i
INFO  20:11:36,672 - #35 ;
INFO  20:11:36,672 - #14 int
INFO  20:11:36,672 - #14 x
INFO  20:11:36,672 - #40 [
INFO  20:11:36,672 - #41 ]
INFO  20:11:36,672 - #35 ;
INFO  20:11:36,672 - #42 {
INFO  20:11:36,673 - #14 a
INFO  20:11:36,673 - #32 =
INFO  20:11:36,673 - #7 new
INFO  20:11:36,673 - #14 A
INFO  20:11:36,673 - #35 ;
INFO  20:11:36,673 - #14 a
INFO  20:11:36,673 - #37 .
INFO  20:11:36,673 - #14 x
INFO  20:11:36,673 - #32 =
INFO  20:11:36,673 - #7 new
INFO  20:11:36,673 - #14 int
INFO  20:11:36,673 - #40 [
INFO  20:11:36,673 - #15 5
INFO  20:11:36,673 - #41 ]
INFO  20:11:36,673 - #35 ;
INFO  20:11:36,673 - #14 a
INFO  20:11:36,673 - #37 .
INFO  20:11:36,673 - #14 y
INFO  20:11:36,674 - #32 =
INFO  20:11:36,674 - #7 new
INFO  20:11:36,674 - #14 int
INFO  20:11:36,674 - #40 [
INFO  20:11:36,674 - #15 5
INFO  20:11:36,674 - #41 ]
INFO  20:11:36,674 - #35 ;
INFO  20:11:36,674 - #14 c
INFO  20:11:36,674 - #32 =
INFO  20:11:36,674 - #7 new
INFO  20:11:36,674 - #14 C
INFO  20:11:36,674 - #35 ;
INFO  20:11:36,674 - #14 c
INFO  20:11:36,674 - #37 .
INFO  20:11:36,674 - #14 theA
INFO  20:11:36,674 - #32 =
INFO  20:11:36,674 - #14 a
INFO  20:11:36,674 - #35 ;
INFO  20:11:36,674 - #14 c
INFO  20:11:36,674 - #37 .
INFO  20:11:36,674 - #14 x
INFO  20:11:36,674 - #32 =
INFO  20:11:36,675 - #7 new
INFO  20:11:36,675 - #14 int
INFO  20:11:36,675 - #40 [
INFO  20:11:36,675 - #15 5
INFO  20:11:36,675 - #41 ]
INFO  20:11:36,675 - #35 ;
INFO  20:11:36,675 - #14 x
INFO  20:11:36,675 - #32 =
INFO  20:11:36,675 - #7 new
INFO  20:11:36,675 - #14 int
INFO  20:11:36,675 - #40 [
INFO  20:11:36,675 - #15 3
INFO  20:11:36,675 - #41 ]
INFO  20:11:36,675 - #35 ;
INFO  20:11:36,675 - #14 i
INFO  20:11:36,675 - #32 =
INFO  20:11:36,675 - #15 0
INFO  20:11:36,675 - #35 ;
INFO  20:11:36,675 - #9 read
INFO  20:11:36,675 - #38 (
INFO  20:11:36,675 - #14 c
INFO  20:11:36,675 - #37 .
INFO  20:11:36,675 - #14 i
INFO  20:11:36,676 - #39 )
INFO  20:11:36,676 - #35 ;
INFO  20:11:36,676 - #12 while
INFO  20:11:36,676 - #38 (
INFO  20:11:36,676 - #14 i
INFO  20:11:36,676 - #28 <
INFO  20:11:36,676 - #15 5
INFO  20:11:36,676 - #39 )
INFO  20:11:36,676 - #42 {
INFO  20:11:36,676 - #9 read
INFO  20:11:36,676 - #38 (
INFO  20:11:36,676 - #14 c
INFO  20:11:36,676 - #37 .
INFO  20:11:36,676 - #14 x
INFO  20:11:36,676 - #40 [
INFO  20:11:36,676 - #14 i
INFO  20:11:36,676 - #41 ]
INFO  20:11:36,676 - #39 )
INFO  20:11:36,676 - #35 ;
INFO  20:11:36,676 - #9 read
INFO  20:11:36,676 - #38 (
INFO  20:11:36,677 - #14 c
INFO  20:11:36,677 - #37 .
INFO  20:11:36,677 - #14 theA
INFO  20:11:36,677 - #37 .
INFO  20:11:36,677 - #14 x
INFO  20:11:36,677 - #40 [
INFO  20:11:36,677 - #14 i
INFO  20:11:36,677 - #41 ]
INFO  20:11:36,677 - #39 )
INFO  20:11:36,677 - #35 ;
INFO  20:11:36,677 - #14 i
INFO  20:11:36,677 - #33 ++
INFO  20:11:36,677 - #35 ;
INFO  20:11:36,677 - #43 }
INFO  20:11:36,677 - #8 print
INFO  20:11:36,677 - #38 (
INFO  20:11:36,677 - #14 c
INFO  20:11:36,677 - #37 .
INFO  20:11:36,677 - #14 getValue
INFO  20:11:36,677 - #38 (
INFO  20:11:36,677 - #14 c
INFO  20:11:36,677 - #37 .
INFO  20:11:36,677 - #14 theA
INFO  20:11:36,677 - #37 .
INFO  20:11:36,677 - #14 x
INFO  20:11:36,678 - #40 [
INFO  20:11:36,678 - #15 0
INFO  20:11:36,678 - #41 ]
INFO  20:11:36,678 - #39 )
INFO  20:11:36,678 - #39 )
INFO  20:11:36,678 - #35 ;
INFO  20:11:36,678 - #43 }
INFO  20:11:36,678 - #43 }
