INFO  20:16:00,981 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:16:00,985 - #2 program
INFO  20:16:00,985 - #3 Program
INFO  20:16:00,985 - #16 class
INFO  20:16:00,985 - #3 A
INFO  20:16:00,985 - #4 {
INFO  20:16:00,986 - #3 int
INFO  20:16:00,986 - #3 x
INFO  20:16:00,986 - #14 [
INFO  20:16:00,986 - #15 ]
INFO  20:16:00,986 - #13 ,
INFO  20:16:00,986 - #3 y
INFO  20:16:00,986 - #14 [
INFO  20:16:00,986 - #15 ]
INFO  20:16:00,986 - #7 ;
INFO  20:16:00,986 - #4 {
INFO  20:16:00,986 - #3 int
INFO  20:16:00,986 - #3 pr
INFO  20:16:00,986 - #19 (
INFO  20:16:00,987 - #20 )
INFO  20:16:00,987 - #4 {
INFO  20:16:00,987 - #26 return
INFO  20:16:00,987 - #9 1
INFO  20:16:00,987 - #7 ;
INFO  20:16:00,987 - #5 }
INFO  20:16:00,987 - #3 int
INFO  20:16:00,987 - #3 pr
INFO  20:16:00,987 - #19 (
INFO  20:16:00,987 - #20 )
INFO  20:16:00,987 - #4 {
INFO  20:16:00,987 - #26 return
INFO  20:16:00,988 - #9 0
INFO  20:16:00,988 - #7 ;
INFO  20:16:00,988 - #5 }
INFO  20:16:00,988 - #3 int
INFO  20:16:00,988 - #3 pr1
INFO  20:16:00,988 - #19 (
INFO  20:16:00,988 - #20 )
INFO  20:16:00,988 - #4 {
INFO  20:16:00,988 - #26 return
INFO  20:16:00,988 - #3 pr
INFO  20:16:00,988 - #19 (
INFO  20:16:00,989 - #20 )
INFO  20:16:00,989 - #7 ;
INFO  20:16:00,989 - #5 }
INFO  20:16:00,989 - #5 }
INFO  20:16:00,989 - #5 }
INFO  20:16:00,989 - #6 const
INFO  20:16:00,989 - #3 int
INFO  20:16:00,989 - #3 pi
INFO  20:16:00,989 - #8 =
INFO  20:16:00,989 - #9 3
INFO  20:16:00,989 - #13 ,
INFO  20:16:00,989 - #3 e
INFO  20:16:00,989 - #8 =
INFO  20:16:00,989 - #9 2
INFO  20:16:00,989 - #7 ;
INFO  20:16:00,989 - #6 const
INFO  20:16:00,989 - #3 string
INFO  20:16:00,990 - #3 strin
INFO  20:16:00,990 - #8 =
INFO  20:16:00,990 - #12 aaa
INFO  20:16:00,990 - #7 ;
INFO  20:16:00,990 - #16 class
INFO  20:16:00,990 - #3 B
INFO  20:16:00,990 - #17 extends
INFO  20:16:00,990 - #3 A
INFO  20:16:00,990 - #4 {
INFO  20:16:00,990 - #3 int
INFO  20:16:00,990 - #3 i
INFO  20:16:00,990 - #7 ;
INFO  20:16:00,990 - #3 int
INFO  20:16:00,990 - #3 x
INFO  20:16:00,990 - #14 [
INFO  20:16:00,990 - #15 ]
INFO  20:16:00,990 - #7 ;
INFO  20:16:00,990 - #3 A
INFO  20:16:00,990 - #3 theAA
INFO  20:16:00,990 - #7 ;
INFO  20:16:00,991 - #4 {
INFO  20:16:00,991 - #18 void
INFO  20:16:00,991 - #3 voidtest
INFO  20:16:00,991 - #19 (
INFO  20:16:00,991 - #3 int
INFO  20:16:00,991 - #3 a
INFO  20:16:00,991 - #13 ,
INFO  20:16:00,991 - #3 char
INFO  20:16:00,991 - #3 b
INFO  20:16:00,991 - #20 )
INFO  20:16:00,991 - #3 int
INFO  20:16:00,991 - #3 c
INFO  20:16:00,991 - #7 ;
INFO  20:16:00,991 - #4 {
INFO  20:16:00,991 - #27 read
INFO  20:16:00,991 - #19 (
INFO  20:16:00,991 - #3 a
INFO  20:16:00,991 - #20 )
INFO  20:16:00,991 - #7 ;
INFO  20:16:00,991 - #27 read
INFO  20:16:00,992 - #19 (
INFO  20:16:00,992 - #3 b
INFO  20:16:00,992 - #20 )
INFO  20:16:00,992 - #7 ;
INFO  20:16:00,992 - #27 read
INFO  20:16:00,992 - #19 (
INFO  20:16:00,992 - #3 c
INFO  20:16:00,992 - #20 )
INFO  20:16:00,992 - #7 ;
INFO  20:16:00,992 - #5 }
INFO  20:16:00,992 - #3 int
INFO  20:16:00,992 - #3 met
INFO  20:16:00,992 - #19 (
INFO  20:16:00,992 - #3 int
INFO  20:16:00,992 - #3 a
INFO  20:16:00,993 - #20 )
INFO  20:16:00,993 - #4 {
INFO  20:16:00,993 - #26 return
INFO  20:16:00,993 - #3 a
INFO  20:16:00,993 - #41 +
INFO  20:16:00,993 - #9 1
INFO  20:16:00,993 - #7 ;
INFO  20:16:00,993 - #5 }
INFO  20:16:00,993 - #3 int
INFO  20:16:00,993 - #3 getValue
INFO  20:16:00,993 - #19 (
INFO  20:16:00,993 - #3 int
INFO  20:16:00,993 - #3 a
INFO  20:16:00,993 - #20 )
INFO  20:16:00,993 - #3 int
INFO  20:16:00,993 - #3 b
INFO  20:16:00,994 - #7 ;
INFO  20:16:00,994 - #3 bool
INFO  20:16:00,994 - #3 c
INFO  20:16:00,994 - #7 ;
INFO  20:16:00,994 - #4 {
INFO  20:16:00,994 - #3 this
INFO  20:16:00,994 - #34 .
INFO  20:16:00,994 - #3 i
INFO  20:16:00,994 - #8 =
INFO  20:16:00,994 - #9 6
INFO  20:16:00,994 - #7 ;
INFO  20:16:00,994 - #26 return
INFO  20:16:00,994 - #3 this
INFO  20:16:00,994 - #34 .
INFO  20:16:00,995 - #3 i
INFO  20:16:00,995 - #41 +
INFO  20:16:00,995 - #3 this
INFO  20:16:00,995 - #34 .
INFO  20:16:00,995 - #3 x
INFO  20:16:00,995 - #14 [
INFO  20:16:00,995 - #9 0
INFO  20:16:00,995 - #15 ]
INFO  20:16:00,995 - #41 +
INFO  20:16:00,995 - #3 this
INFO  20:16:00,995 - #34 .
INFO  20:16:00,995 - #3 met
INFO  20:16:00,995 - #19 (
INFO  20:16:00,995 - #3 a
INFO  20:16:00,995 - #20 )
INFO  20:16:00,995 - #7 ;
INFO  20:16:00,995 - #5 }
INFO  20:16:00,995 - #5 }
INFO  20:16:00,995 - #5 }
INFO  20:16:00,995 - #16 class
INFO  20:16:00,996 - #3 C
INFO  20:16:00,996 - #17 extends
INFO  20:16:00,996 - #3 B
INFO  20:16:00,996 - #4 {
INFO  20:16:00,996 - #3 A
INFO  20:16:00,996 - #3 theA
INFO  20:16:00,996 - #7 ;
INFO  20:16:00,996 - #3 string
INFO  20:16:00,996 - #3 a
INFO  20:16:00,996 - #8 =
ERROR 20:16:00,996 - 
Sintaksna greska
INFO  20:16:00,996 - #12 bas je roze i zut
INFO  20:16:00,996 - #7 ;
INFO  20:16:00,997 - #4 {
INFO  20:16:00,997 - #18 void
INFO  20:16:00,997 - #3 glupost
ERROR 20:16:00,997 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do ; u liniji 46
INFO  20:16:00,997 - #19 (
INFO  20:16:00,997 - #3 int
INFO  20:16:00,997 - #13 ,
ERROR 20:16:00,998 - 
Sintaksna greska
INFO  20:16:00,998 - #3 m
INFO  20:16:00,998 - #20 )
INFO  20:16:00,998 - #3 int
INFO  20:16:00,998 - #3 i
INFO  20:16:00,998 - #13 ,
ERROR 20:16:00,998 - [Deklaracija form. parametra funkcije] Izvrsen oporavak do ) u liniji 49
INFO  20:16:00,998 - #3 bool
INFO  20:16:00,998 - #3 c
ERROR 20:16:00,998 - 
Sintaksna greska
INFO  20:16:00,998 - #4 {
INFO  20:16:00,998 - #26 return
INFO  20:16:00,998 - #3 i
INFO  20:16:00,998 - #41 +
ERROR 20:16:00,998 - [Deklaracija lokalne promenljive] Izvrsen oporavak do { u liniji 49
INFO  20:16:00,998 - #3 c
INFO  20:16:00,999 - #7 ;
INFO  20:16:00,999 - #5 }
INFO  20:16:00,999 - #5 }
INFO  20:16:00,999 - #5 }
INFO  20:16:00,999 - #16 class
INFO  20:16:00,999 - #3 E
INFO  20:16:00,999 - #17 extends
INFO  20:16:00,999 - #4 {
ERROR 20:16:00,999 - 
Sintaksna greska
INFO  20:16:00,999 - #3 bool
INFO  20:16:00,999 - #3 b
INFO  20:16:00,999 - #7 ;
ERROR 20:16:00,999 - [Deklaracija prosirenja natklase] Izvrsen oporavak do { u liniji 56
INFO  20:16:00,999 - #3 C
INFO  20:16:00,999 - #13 ,
ERROR 20:16:01,000 - 
Sintaksna greska
INFO  20:16:01,000 - #3 cc
INFO  20:16:01,000 - #13 ,
INFO  20:16:01,000 - #3 char
INFO  20:16:01,000 - #3 e
INFO  20:16:01,000 - #7 ;
INFO  20:16:01,000 - #5 }
ERROR 20:16:01,000 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do { u liniji 58
INFO  20:16:01,000 - #4 {
INFO  20:16:01,000 - #3 int
INFO  20:16:01,000 - #3 met
INFO  20:16:01,000 - #19 (
INFO  20:16:01,000 - #3 int
INFO  20:16:01,001 - #3 par
INFO  20:16:01,001 - #20 )
INFO  20:16:01,001 - #4 {
INFO  20:16:01,001 - #26 return
INFO  20:16:01,001 - #3 par
INFO  20:16:01,001 - #32 -
INFO  20:16:01,001 - #9 1
INFO  20:16:01,001 - #7 ;
INFO  20:16:01,001 - #5 }
INFO  20:16:01,001 - #3 string
INFO  20:16:01,001 - #3 strfunc
INFO  20:16:01,001 - #19 (
INFO  20:16:01,001 - #3 string
INFO  20:16:01,001 - #3 s
INFO  20:16:01,002 - #20 )
INFO  20:16:01,002 - #4 {
INFO  20:16:01,002 - #26 return
INFO  20:16:01,002 - #3 s
INFO  20:16:01,002 - #41 +
INFO  20:16:01,002 - #12 aa
INFO  20:16:01,002 - #7 ;
INFO  20:16:01,002 - #5 }
INFO  20:16:01,002 - #18 void
INFO  20:16:01,002 - #3 main
INFO  20:16:01,002 - #19 (
INFO  20:16:01,002 - #20 )
INFO  20:16:01,002 - #3 A
INFO  20:16:01,003 - #3 a
INFO  20:16:01,003 - #7 ;
INFO  20:16:01,003 - #3 B
INFO  20:16:01,003 - #3 b
INFO  20:16:01,003 - #7 ;
INFO  20:16:01,003 - #3 C
INFO  20:16:01,003 - #3 c
INFO  20:16:01,003 - #7 ;
INFO  20:16:01,003 - #3 int
INFO  20:16:01,003 - #3 i
INFO  20:16:01,003 - #13 ,
INFO  20:16:01,003 - #3 y
INFO  20:16:01,003 - #13 ,
INFO  20:16:01,003 - #3 z
INFO  20:16:01,004 - #7 ;
INFO  20:16:01,004 - #3 int
INFO  20:16:01,004 - #3 x
INFO  20:16:01,004 - #14 [
INFO  20:16:01,004 - #15 ]
INFO  20:16:01,004 - #7 ;
INFO  20:16:01,004 - #3 string
INFO  20:16:01,004 - #3 str1
INFO  20:16:01,004 - #13 ,
INFO  20:16:01,004 - #3 str2
INFO  20:16:01,004 - #7 ;
INFO  20:16:01,004 - #3 bool
INFO  20:16:01,005 - #3 bulin
INFO  20:16:01,005 - #7 ;
INFO  20:16:01,005 - #4 {
INFO  20:16:01,005 - #3 str2
INFO  20:16:01,005 - #8 =
INFO  20:16:01,005 - #12 abcd
INFO  20:16:01,005 - #7 ;
INFO  20:16:01,005 - #3 str1
INFO  20:16:01,005 - #8 =
INFO  20:16:01,005 - #12 abc
INFO  20:16:01,005 - #41 +
INFO  20:16:01,005 - #3 strfunc
INFO  20:16:01,005 - #19 (
INFO  20:16:01,006 - #3 str2
INFO  20:16:01,006 - #20 )
INFO  20:16:01,006 - #7 ;
INFO  20:16:01,006 - #3 str2
INFO  20:16:01,006 - #8 =
INFO  20:16:01,006 - #12 mama"+"tata
INFO  20:16:01,006 - #7 ;
INFO  20:16:01,006 - #3 strin
INFO  20:16:01,006 - #8 =
INFO  20:16:01,006 - #12 ne moze se dodeliti vrednost konstantnom stringu
INFO  20:16:01,006 - #7 ;
INFO  20:16:01,007 - #3 bulin
INFO  20:16:01,007 - #8 =
INFO  20:16:01,007 - #32 -
INFO  20:16:01,007 - #11 true
ERROR 20:16:01,007 - 
Sintaksna greska
INFO  20:16:01,007 - #7 ;
INFO  20:16:01,007 - #29 print
INFO  20:16:01,007 - #19 (
INFO  20:16:01,007 - #3 bulin
ERROR 20:16:01,007 - [Konstrukcija dodele iskaza] Izvrsen oporavak do ; u liniji 74
INFO  20:16:01,007 - #20 )
INFO  20:16:01,008 - #7 ;
INFO  20:16:01,008 - #3 a
INFO  20:16:01,008 - #8 =
INFO  20:16:01,008 - #33 new
INFO  20:16:01,008 - #3 A
INFO  20:16:01,008 - #7 ;
INFO  20:16:01,008 - #3 a
INFO  20:16:01,008 - #34 .
INFO  20:16:01,008 - #3 x
INFO  20:16:01,008 - #8 =
INFO  20:16:01,008 - #33 new
INFO  20:16:01,008 - #3 int
INFO  20:16:01,008 - #14 [
INFO  20:16:01,008 - #9 5
INFO  20:16:01,008 - #15 ]
INFO  20:16:01,008 - #7 ;
INFO  20:16:01,008 - #3 a
INFO  20:16:01,009 - #34 .
INFO  20:16:01,009 - #3 y
INFO  20:16:01,009 - #8 =
INFO  20:16:01,009 - #33 new
INFO  20:16:01,009 - #3 int
INFO  20:16:01,009 - #14 [
INFO  20:16:01,009 - #9 5
INFO  20:16:01,009 - #15 ]
INFO  20:16:01,009 - #7 ;
INFO  20:16:01,009 - #3 c
INFO  20:16:01,009 - #8 =
INFO  20:16:01,009 - #33 new
INFO  20:16:01,009 - #3 C
INFO  20:16:01,009 - #7 ;
INFO  20:16:01,009 - #3 i
INFO  20:16:01,009 - #8 =
INFO  20:16:01,009 - #3 met
INFO  20:16:01,009 - #19 (
INFO  20:16:01,009 - #3 pi
INFO  20:16:01,009 - #41 +
INFO  20:16:01,009 - #9 3
INFO  20:16:01,010 - #20 )
INFO  20:16:01,010 - #41 +
INFO  20:16:01,010 - #3 e
INFO  20:16:01,010 - #42 *
INFO  20:16:01,010 - #9 2
INFO  20:16:01,010 - #7 ;
INFO  20:16:01,010 - #3 c
INFO  20:16:01,010 - #34 .
INFO  20:16:01,010 - #3 theA
INFO  20:16:01,010 - #8 =
INFO  20:16:01,010 - #3 a
INFO  20:16:01,010 - #7 ;
INFO  20:16:01,010 - #3 c
INFO  20:16:01,010 - #34 .
INFO  20:16:01,010 - #3 x
INFO  20:16:01,010 - #8 =
INFO  20:16:01,010 - #33 new
INFO  20:16:01,010 - #3 int
INFO  20:16:01,010 - #14 [
INFO  20:16:01,010 - #9 5
INFO  20:16:01,010 - #15 ]
INFO  20:16:01,010 - #7 ;
INFO  20:16:01,010 - #3 x
INFO  20:16:01,010 - #8 =
INFO  20:16:01,011 - #33 new
INFO  20:16:01,011 - #3 int
INFO  20:16:01,011 - #14 [
INFO  20:16:01,011 - #9 3
INFO  20:16:01,011 - #15 ]
INFO  20:16:01,011 - #7 ;
INFO  20:16:01,011 - #3 i
INFO  20:16:01,011 - #8 =
INFO  20:16:01,011 - #9 0
INFO  20:16:01,011 - #7 ;
INFO  20:16:01,011 - #27 read
INFO  20:16:01,011 - #19 (
INFO  20:16:01,011 - #3 c
INFO  20:16:01,011 - #34 .
INFO  20:16:01,011 - #3 i
INFO  20:16:01,011 - #20 )
INFO  20:16:01,011 - #7 ;
INFO  20:16:01,011 - #24 while
INFO  20:16:01,011 - #19 (
INFO  20:16:01,011 - #3 i
INFO  20:16:01,011 - #39 <
INFO  20:16:01,011 - #9 5
INFO  20:16:01,011 - #20 )
INFO  20:16:01,012 - #4 {
INFO  20:16:01,012 - #27 read
INFO  20:16:01,012 - #19 (
INFO  20:16:01,012 - #3 c
INFO  20:16:01,012 - #34 .
INFO  20:16:01,012 - #3 x
INFO  20:16:01,012 - #14 [
INFO  20:16:01,012 - #3 i
INFO  20:16:01,012 - #15 ]
INFO  20:16:01,012 - #20 )
INFO  20:16:01,012 - #7 ;
INFO  20:16:01,012 - #27 read
INFO  20:16:01,012 - #19 (
INFO  20:16:01,012 - #3 c
INFO  20:16:01,012 - #34 .
INFO  20:16:01,012 - #3 theA
INFO  20:16:01,012 - #34 .
INFO  20:16:01,012 - #3 x
INFO  20:16:01,012 - #14 [
INFO  20:16:01,012 - #3 i
INFO  20:16:01,012 - #15 ]
INFO  20:16:01,012 - #20 )
INFO  20:16:01,012 - #7 ;
INFO  20:16:01,012 - #3 i
INFO  20:16:01,012 - #21 ++
INFO  20:16:01,012 - #7 ;
INFO  20:16:01,012 - #5 }
INFO  20:16:01,013 - #29 print
INFO  20:16:01,013 - #19 (
INFO  20:16:01,013 - #3 c
INFO  20:16:01,013 - #34 .
INFO  20:16:01,013 - #3 getValue
INFO  20:16:01,013 - #19 (
INFO  20:16:01,013 - #3 c
INFO  20:16:01,013 - #34 .
INFO  20:16:01,013 - #3 theA
INFO  20:16:01,013 - #34 .
INFO  20:16:01,013 - #3 x
INFO  20:16:01,013 - #14 [
INFO  20:16:01,013 - #9 0
INFO  20:16:01,013 - #15 ]
INFO  20:16:01,013 - #20 )
INFO  20:16:01,013 - #20 )
INFO  20:16:01,013 - #7 ;
INFO  20:16:01,013 - #3 c
INFO  20:16:01,013 - #34 .
INFO  20:16:01,013 - #3 theA
INFO  20:16:01,013 - #34 .
INFO  20:16:01,013 - #3 x
INFO  20:16:01,013 - #14 [
INFO  20:16:01,013 - #9 0
INFO  20:16:01,013 - #15 ]
INFO  20:16:01,013 - #8 =
INFO  20:16:01,014 - #9 1
INFO  20:16:01,014 - #7 ;
INFO  20:16:01,014 - #23 if
INFO  20:16:01,014 - #19 (
INFO  20:16:01,014 - #3 i
INFO  20:16:01,014 - #35 ==
INFO  20:16:01,014 - #9 1
INFO  20:16:01,014 - #20 )
INFO  20:16:01,014 - #3 i
INFO  20:16:01,014 - #8 =
INFO  20:16:01,014 - #3 c
INFO  20:16:01,014 - #34 .
INFO  20:16:01,014 - #3 met
INFO  20:16:01,014 - #19 (
INFO  20:16:01,014 - #9 1
INFO  20:16:01,014 - #20 )
INFO  20:16:01,014 - #41 +
INFO  20:16:01,014 - #3 b
INFO  20:16:01,014 - #34 .
INFO  20:16:01,014 - #3 getValue
INFO  20:16:01,014 - #19 (
INFO  20:16:01,014 - #3 c
INFO  20:16:01,014 - #34 .
INFO  20:16:01,014 - #3 x
INFO  20:16:01,014 - #14 [
INFO  20:16:01,015 - #9 0
INFO  20:16:01,015 - #15 ]
INFO  20:16:01,015 - #20 )
INFO  20:16:01,015 - #41 +
INFO  20:16:01,015 - #9 5
INFO  20:16:01,015 - #42 *
INFO  20:16:01,015 - #9 8
INFO  20:16:01,015 - #7 ;
INFO  20:16:01,015 - #3 b
INFO  20:16:01,015 - #34 .
INFO  20:16:01,015 - #3 getValue
INFO  20:16:01,015 - #19 (
INFO  20:16:01,015 - #3 b
INFO  20:16:01,015 - #34 .
INFO  20:16:01,015 - #3 y
INFO  20:16:01,015 - #14 [
INFO  20:16:01,015 - #3 i
INFO  20:16:01,015 - #15 ]
INFO  20:16:01,015 - #20 )
INFO  20:16:01,015 - #7 ;
INFO  20:16:01,015 - #3 b
INFO  20:16:01,015 - #34 .
INFO  20:16:01,015 - #3 pr
INFO  20:16:01,015 - #19 (
INFO  20:16:01,016 - #20 )
INFO  20:16:01,016 - #7 ;
INFO  20:16:01,016 - #3 i
INFO  20:16:01,016 - #8 =
INFO  20:16:01,016 - #9 4
INFO  20:16:01,016 - #42 *
INFO  20:16:01,016 - #19 (
INFO  20:16:01,016 - #9 5
INFO  20:16:01,016 - #41 +
INFO  20:16:01,016 - #9 6
INFO  20:16:01,016 - #41 +
INFO  20:16:01,016 - #3 i
INFO  20:16:01,016 - #20 )
INFO  20:16:01,016 - #41 +
INFO  20:16:01,016 - #3 i
INFO  20:16:01,016 - #41 +
INFO  20:16:01,016 - #3 met
INFO  20:16:01,016 - #19 (
INFO  20:16:01,016 - #9 2
INFO  20:16:01,016 - #20 )
INFO  20:16:01,016 - #7 ;
INFO  20:16:01,016 - #3 chr
INFO  20:16:01,016 - #19 (
INFO  20:16:01,017 - #9 1
INFO  20:16:01,017 - #20 )
INFO  20:16:01,017 - #7 ;
INFO  20:16:01,017 - #3 i
INFO  20:16:01,017 - #8 =
INFO  20:16:01,017 - #3 ord
INFO  20:16:01,017 - #19 (
INFO  20:16:01,017 - #10 1
INFO  20:16:01,017 - #20 )
INFO  20:16:01,017 - #7 ;
INFO  20:16:01,017 - #29 print
INFO  20:16:01,017 - #19 (
INFO  20:16:01,017 - #9 4
INFO  20:16:01,017 - #13 ,
INFO  20:16:01,017 - #9 1
INFO  20:16:01,017 - #20 )
INFO  20:16:01,017 - #7 ;
INFO  20:16:01,017 - #3 a
INFO  20:16:01,017 - #8 =
INFO  20:16:01,017 - #3 b
INFO  20:16:01,017 - #7 ;
INFO  20:16:01,017 - #23 if
INFO  20:16:01,017 - #19 (
INFO  20:16:01,017 - #11 true
ERROR 20:16:01,018 - 
Sintaksna greska
INFO  20:16:01,018 - #20 )
INFO  20:16:01,018 - #3 i
INFO  20:16:01,018 - #21 ++
INFO  20:16:01,018 - #7 ;
ERROR 20:16:01,018 - [Logicki izraz] Izvrsen oporavak do ) u liniji 105
INFO  20:16:01,018 - #24 while
INFO  20:16:01,018 - #19 (
INFO  20:16:01,018 - #3 str2
INFO  20:16:01,018 - #35 ==
INFO  20:16:01,018 - #12 kraj" || str1 == "kraj
INFO  20:16:01,018 - #20 )
INFO  20:16:01,018 - #4 {
INFO  20:16:01,018 - #3 c
INFO  20:16:01,018 - #34 .
INFO  20:16:01,018 - #3 theA
INFO  20:16:01,018 - #34 .
INFO  20:16:01,018 - #3 x
INFO  20:16:01,018 - #14 [
INFO  20:16:01,018 - #3 i
INFO  20:16:01,018 - #15 ]
INFO  20:16:01,018 - #8 =
INFO  20:16:01,018 - #3 a
INFO  20:16:01,018 - #34 .
INFO  20:16:01,019 - #3 x
INFO  20:16:01,019 - #14 [
INFO  20:16:01,019 - #3 i
INFO  20:16:01,019 - #15 ]
INFO  20:16:01,019 - #7 ;
INFO  20:16:01,019 - #23 if
INFO  20:16:01,019 - #19 (
INFO  20:16:01,019 - #3 b
INFO  20:16:01,019 - #34 .
INFO  20:16:01,019 - #3 theAA
INFO  20:16:01,019 - #34 .
INFO  20:16:01,019 - #3 y
INFO  20:16:01,019 - #14 [
INFO  20:16:01,019 - #3 i
INFO  20:16:01,019 - #15 ]
INFO  20:16:01,019 - #35 ==
INFO  20:16:01,019 - #3 c
INFO  20:16:01,019 - #34 .
INFO  20:16:01,019 - #3 theA
INFO  20:16:01,019 - #34 .
INFO  20:16:01,019 - #3 x
INFO  20:16:01,019 - #14 [
INFO  20:16:01,019 - #3 i
INFO  20:16:01,019 - #15 ]
INFO  20:16:01,019 - #31 &&
INFO  20:16:01,019 - #3 c
INFO  20:16:01,019 - #34 .
INFO  20:16:01,019 - #3 pr1
INFO  20:16:01,019 - #19 (
INFO  20:16:01,020 - #20 )
INFO  20:16:01,020 - #20 )
INFO  20:16:01,020 - #25 break
INFO  20:16:01,020 - #7 ;
INFO  20:16:01,020 - #27 read
INFO  20:16:01,020 - #19 (
INFO  20:16:01,020 - #3 str1
INFO  20:16:01,020 - #20 )
INFO  20:16:01,020 - #7 ;
INFO  20:16:01,020 - #27 read
INFO  20:16:01,020 - #19 (
INFO  20:16:01,020 - #3 str2
INFO  20:16:01,020 - #20 )
INFO  20:16:01,020 - #7 ;
INFO  20:16:01,020 - #5 }
INFO  20:16:01,020 - #5 }
INFO  20:16:01,020 - #5 }
ERROR 20:16:01,020 - Parsiranje nije uspesno zavrseno!
