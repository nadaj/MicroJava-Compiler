INFO  13:12:51,195 - Compiling source file: C:\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  13:12:51,209 - #2 program
INFO  13:12:51,209 - #3 Program
INFO  13:12:51,209 - #16 class
INFO  13:12:51,209 - #3 A
INFO  13:12:51,209 - #4 {
INFO  13:12:51,209 - #3 int
INFO  13:12:51,209 - #3 x
INFO  13:12:51,209 - #14 [
INFO  13:12:51,210 - #15 ]
INFO  13:12:51,210 - #13 ,
INFO  13:12:51,210 - #3 y
INFO  13:12:51,210 - #14 [
INFO  13:12:51,210 - #15 ]
INFO  13:12:51,210 - #7 ;
INFO  13:12:51,210 - #4 {
INFO  13:12:51,210 - #3 int
INFO  13:12:51,210 - #3 pr
INFO  13:12:51,210 - #19 (
INFO  13:12:51,210 - #20 )
INFO  13:12:51,211 - #4 {
INFO  13:12:51,211 - #26 return
INFO  13:12:51,211 - #9 1
INFO  13:12:51,211 - #7 ;
INFO  13:12:51,211 - #5 }
INFO  13:12:51,211 - #3 int
INFO  13:12:51,211 - #3 pr
INFO  13:12:51,211 - #19 (
INFO  13:12:51,211 - #20 )
INFO  13:12:51,212 - #4 {
INFO  13:12:51,212 - #26 return
INFO  13:12:51,212 - #9 0
INFO  13:12:51,212 - #7 ;
INFO  13:12:51,212 - #5 }
INFO  13:12:51,212 - #3 int
INFO  13:12:51,212 - #3 pr1
INFO  13:12:51,212 - #19 (
INFO  13:12:51,212 - #20 )
INFO  13:12:51,212 - #4 {
INFO  13:12:51,213 - #26 return
INFO  13:12:51,213 - #3 pr
INFO  13:12:51,213 - #19 (
INFO  13:12:51,213 - #20 )
INFO  13:12:51,213 - #7 ;
INFO  13:12:51,213 - #5 }
INFO  13:12:51,213 - #5 }
INFO  13:12:51,213 - #5 }
INFO  13:12:51,213 - #6 const
INFO  13:12:51,213 - #3 int
INFO  13:12:51,213 - #3 pi
INFO  13:12:51,214 - #8 =
INFO  13:12:51,214 - #9 3
INFO  13:12:51,214 - #13 ,
INFO  13:12:51,214 - #3 e
INFO  13:12:51,214 - #8 =
INFO  13:12:51,214 - #9 2
INFO  13:12:51,214 - #7 ;
INFO  13:12:51,214 - #6 const
INFO  13:12:51,214 - #3 string
INFO  13:12:51,214 - #3 strin
INFO  13:12:51,214 - #8 =
INFO  13:12:51,214 - #12 aaa
INFO  13:12:51,214 - #7 ;
INFO  13:12:51,214 - #16 class
INFO  13:12:51,214 - #3 B
INFO  13:12:51,214 - #17 extends
INFO  13:12:51,215 - #3 A
INFO  13:12:51,215 - #4 {
INFO  13:12:51,215 - #3 int
INFO  13:12:51,215 - #3 i
INFO  13:12:51,215 - #7 ;
INFO  13:12:51,215 - #3 int
INFO  13:12:51,215 - #3 x
INFO  13:12:51,215 - #14 [
INFO  13:12:51,215 - #15 ]
INFO  13:12:51,215 - #7 ;
INFO  13:12:51,215 - #3 A
INFO  13:12:51,215 - #3 theAA
INFO  13:12:51,215 - #7 ;
INFO  13:12:51,215 - #4 {
INFO  13:12:51,215 - #18 void
INFO  13:12:51,216 - #3 voidtest
INFO  13:12:51,216 - #19 (
INFO  13:12:51,216 - #3 int
INFO  13:12:51,216 - #3 a
INFO  13:12:51,216 - #13 ,
INFO  13:12:51,216 - #3 char
INFO  13:12:51,216 - #3 b
INFO  13:12:51,216 - #20 )
INFO  13:12:51,216 - #3 int
INFO  13:12:51,216 - #3 c
INFO  13:12:51,216 - #7 ;
INFO  13:12:51,216 - #4 {
INFO  13:12:51,216 - #27 read
INFO  13:12:51,216 - #19 (
INFO  13:12:51,216 - #3 a
INFO  13:12:51,216 - #20 )
INFO  13:12:51,216 - #7 ;
INFO  13:12:51,216 - #27 read
INFO  13:12:51,216 - #19 (
INFO  13:12:51,216 - #3 b
INFO  13:12:51,216 - #20 )
INFO  13:12:51,217 - #7 ;
INFO  13:12:51,217 - #27 read
INFO  13:12:51,217 - #19 (
INFO  13:12:51,217 - #3 c
INFO  13:12:51,217 - #20 )
INFO  13:12:51,217 - #7 ;
INFO  13:12:51,217 - #5 }
INFO  13:12:51,217 - #3 int
INFO  13:12:51,217 - #3 met
INFO  13:12:51,217 - #19 (
INFO  13:12:51,217 - #3 int
INFO  13:12:51,217 - #3 a
INFO  13:12:51,217 - #20 )
INFO  13:12:51,217 - #4 {
INFO  13:12:51,218 - #26 return
INFO  13:12:51,218 - #3 a
INFO  13:12:51,218 - #41 +
INFO  13:12:51,218 - #9 1
INFO  13:12:51,218 - #7 ;
INFO  13:12:51,218 - #5 }
INFO  13:12:51,218 - #3 int
INFO  13:12:51,218 - #3 getValue
INFO  13:12:51,218 - #19 (
INFO  13:12:51,218 - #3 int
INFO  13:12:51,218 - #3 a
INFO  13:12:51,218 - #20 )
INFO  13:12:51,219 - #3 int
INFO  13:12:51,219 - #3 b
INFO  13:12:51,219 - #7 ;
INFO  13:12:51,219 - #3 bool
INFO  13:12:51,219 - #3 c
INFO  13:12:51,219 - #7 ;
INFO  13:12:51,219 - #4 {
INFO  13:12:51,219 - #3 this
INFO  13:12:51,219 - #34 .
INFO  13:12:51,219 - #3 i
INFO  13:12:51,220 - #8 =
INFO  13:12:51,220 - #9 6
INFO  13:12:51,220 - #7 ;
INFO  13:12:51,220 - #26 return
INFO  13:12:51,220 - #3 this
INFO  13:12:51,220 - #34 .
INFO  13:12:51,220 - #3 i
INFO  13:12:51,220 - #41 +
INFO  13:12:51,220 - #3 this
INFO  13:12:51,220 - #34 .
INFO  13:12:51,220 - #3 x
INFO  13:12:51,220 - #14 [
INFO  13:12:51,220 - #9 0
INFO  13:12:51,220 - #15 ]
INFO  13:12:51,220 - #41 +
INFO  13:12:51,221 - #3 this
INFO  13:12:51,221 - #34 .
INFO  13:12:51,221 - #3 met
INFO  13:12:51,221 - #19 (
INFO  13:12:51,221 - #3 a
INFO  13:12:51,221 - #20 )
INFO  13:12:51,221 - #7 ;
INFO  13:12:51,221 - #5 }
INFO  13:12:51,221 - #5 }
INFO  13:12:51,221 - #5 }
INFO  13:12:51,221 - #16 class
INFO  13:12:51,221 - #3 C
INFO  13:12:51,221 - #17 extends
INFO  13:12:51,221 - #3 B
INFO  13:12:51,221 - #4 {
INFO  13:12:51,221 - #3 A
INFO  13:12:51,221 - #3 theA
INFO  13:12:51,221 - #7 ;
INFO  13:12:51,222 - #3 string
INFO  13:12:51,222 - #3 a
INFO  13:12:51,222 - #8 =
ERROR 13:12:51,222 - 
Sintaksna greska
INFO  13:12:51,222 - #12 bas je roze i zut
INFO  13:12:51,222 - #7 ;
INFO  13:12:51,222 - #4 {
INFO  13:12:51,223 - #18 void
INFO  13:12:51,223 - #3 glupost
ERROR 13:12:51,223 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do ; u liniji 46
INFO  13:12:51,223 - #19 (
INFO  13:12:51,223 - #3 int
INFO  13:12:51,223 - #13 ,
ERROR 13:12:51,223 - 
Sintaksna greska
INFO  13:12:51,223 - #3 m
INFO  13:12:51,223 - #20 )
INFO  13:12:51,224 - #3 int
INFO  13:12:51,224 - #3 i
INFO  13:12:51,224 - #13 ,
ERROR 13:12:51,224 - [Deklaracija form. parametra funkcije] Izvrsen oporavak do ) u liniji 49
INFO  13:12:51,224 - #3 bool
INFO  13:12:51,224 - #3 c
ERROR 13:12:51,224 - 
Sintaksna greska
INFO  13:12:51,224 - #4 {
INFO  13:12:51,224 - #26 return
INFO  13:12:51,224 - #3 i
INFO  13:12:51,224 - #41 +
ERROR 13:12:51,224 - [Deklaracija lokalne promenljive] Izvrsen oporavak do { u liniji 49
INFO  13:12:51,224 - #3 c
INFO  13:12:51,225 - #7 ;
INFO  13:12:51,225 - #5 }
INFO  13:12:51,225 - #5 }
INFO  13:12:51,225 - #5 }
INFO  13:12:51,225 - #16 class
INFO  13:12:51,225 - #3 E
INFO  13:12:51,225 - #17 extends
INFO  13:12:51,225 - #4 {
ERROR 13:12:51,225 - 
Sintaksna greska
INFO  13:12:51,225 - #3 bool
INFO  13:12:51,225 - #3 b
INFO  13:12:51,225 - #7 ;
ERROR 13:12:51,226 - [Deklaracija prosirenja natklase] Izvrsen oporavak do { u liniji 56
INFO  13:12:51,226 - #3 C
INFO  13:12:51,226 - #13 ,
ERROR 13:12:51,226 - 
Sintaksna greska
INFO  13:12:51,226 - #3 cc
INFO  13:12:51,226 - #13 ,
INFO  13:12:51,226 - #3 char
INFO  13:12:51,226 - #3 e
INFO  13:12:51,226 - #7 ;
INFO  13:12:51,226 - #5 }
ERROR 13:12:51,226 - [Deklaracija polja unutrasnje klase] Izvrsen oporavak do { u liniji 58
INFO  13:12:51,226 - #4 {
INFO  13:12:51,227 - #3 int
INFO  13:12:51,227 - #3 met
INFO  13:12:51,227 - #19 (
INFO  13:12:51,227 - #3 int
INFO  13:12:51,227 - #3 par
INFO  13:12:51,227 - #20 )
INFO  13:12:51,227 - #4 {
INFO  13:12:51,227 - #26 return
INFO  13:12:51,227 - #3 par
INFO  13:12:51,227 - #32 -
INFO  13:12:51,227 - #9 1
INFO  13:12:51,227 - #7 ;
INFO  13:12:51,227 - #5 }
INFO  13:12:51,227 - #3 string
INFO  13:12:51,228 - #3 strfunc
INFO  13:12:51,228 - #19 (
INFO  13:12:51,228 - #3 string
INFO  13:12:51,228 - #3 s
INFO  13:12:51,228 - #20 )
INFO  13:12:51,228 - #4 {
INFO  13:12:51,228 - #26 return
INFO  13:12:51,228 - #3 s
INFO  13:12:51,228 - #41 +
INFO  13:12:51,228 - #12 aa
INFO  13:12:51,228 - #7 ;
INFO  13:12:51,229 - #5 }
INFO  13:12:51,229 - #18 void
INFO  13:12:51,229 - #3 main
INFO  13:12:51,229 - #19 (
INFO  13:12:51,229 - #20 )
INFO  13:12:51,229 - #3 A
INFO  13:12:51,229 - #3 a
INFO  13:12:51,229 - #7 ;
INFO  13:12:51,229 - #3 B
INFO  13:12:51,229 - #3 b
INFO  13:12:51,229 - #7 ;
INFO  13:12:51,229 - #3 C
INFO  13:12:51,230 - #3 c
INFO  13:12:51,230 - #7 ;
INFO  13:12:51,230 - #3 int
INFO  13:12:51,230 - #3 i
INFO  13:12:51,230 - #13 ,
INFO  13:12:51,230 - #3 y
INFO  13:12:51,230 - #13 ,
INFO  13:12:51,230 - #3 z
INFO  13:12:51,230 - #7 ;
INFO  13:12:51,230 - #3 int
INFO  13:12:51,231 - #3 x
INFO  13:12:51,231 - #14 [
INFO  13:12:51,231 - #15 ]
INFO  13:12:51,232 - #7 ;
INFO  13:12:51,232 - #3 string
INFO  13:12:51,232 - #3 str1
INFO  13:12:51,232 - #13 ,
INFO  13:12:51,232 - #3 str2
INFO  13:12:51,232 - #7 ;
INFO  13:12:51,232 - #3 bool
INFO  13:12:51,232 - #3 bulin
INFO  13:12:51,232 - #7 ;
INFO  13:12:51,233 - #4 {
INFO  13:12:51,233 - #3 str2
INFO  13:12:51,233 - #8 =
INFO  13:12:51,233 - #12 abcd
INFO  13:12:51,233 - #7 ;
INFO  13:12:51,233 - #3 str1
INFO  13:12:51,233 - #8 =
INFO  13:12:51,234 - #12 abc
INFO  13:12:51,234 - #41 +
INFO  13:12:51,234 - #3 strfunc
INFO  13:12:51,234 - #19 (
INFO  13:12:51,234 - #3 str2
INFO  13:12:51,234 - #20 )
INFO  13:12:51,234 - #7 ;
INFO  13:12:51,234 - #3 str2
INFO  13:12:51,234 - #8 =
INFO  13:12:51,234 - #12 mama
INFO  13:12:51,235 - #41 +
INFO  13:12:51,235 - #12 tata
INFO  13:12:51,235 - #7 ;
INFO  13:12:51,235 - #3 strin
INFO  13:12:51,235 - #8 =
INFO  13:12:51,235 - #12 ne moze se dodeliti vrednost konstantnom stringu
INFO  13:12:51,235 - #7 ;
INFO  13:12:51,235 - #3 bulin
INFO  13:12:51,236 - #8 =
INFO  13:12:51,236 - #32 -
INFO  13:12:51,236 - #11 true
ERROR 13:12:51,236 - 
Sintaksna greska
INFO  13:12:51,236 - #7 ;
INFO  13:12:51,236 - #29 print
INFO  13:12:51,236 - #19 (
INFO  13:12:51,236 - #3 bulin
ERROR 13:12:51,236 - [Konstrukcija dodele iskaza] Izvrsen oporavak do ; u liniji 74
INFO  13:12:51,236 - #20 )
INFO  13:12:51,237 - #7 ;
INFO  13:12:51,237 - #3 a
INFO  13:12:51,237 - #8 =
INFO  13:12:51,237 - #33 new
INFO  13:12:51,237 - #3 A
INFO  13:12:51,237 - #7 ;
INFO  13:12:51,237 - #3 a
INFO  13:12:51,237 - #34 .
INFO  13:12:51,237 - #3 x
INFO  13:12:51,237 - #8 =
INFO  13:12:51,237 - #33 new
INFO  13:12:51,237 - #3 int
INFO  13:12:51,237 - #14 [
INFO  13:12:51,237 - #9 5
INFO  13:12:51,237 - #15 ]
INFO  13:12:51,237 - #7 ;
INFO  13:12:51,238 - #3 a
INFO  13:12:51,238 - #34 .
INFO  13:12:51,238 - #3 y
INFO  13:12:51,238 - #8 =
INFO  13:12:51,238 - #33 new
INFO  13:12:51,238 - #3 int
INFO  13:12:51,238 - #14 [
INFO  13:12:51,238 - #9 5
INFO  13:12:51,238 - #15 ]
INFO  13:12:51,238 - #7 ;
INFO  13:12:51,238 - #3 c
INFO  13:12:51,238 - #8 =
INFO  13:12:51,238 - #33 new
INFO  13:12:51,238 - #3 C
INFO  13:12:51,238 - #7 ;
INFO  13:12:51,239 - #3 i
INFO  13:12:51,239 - #8 =
INFO  13:12:51,239 - #3 met
INFO  13:12:51,239 - #19 (
INFO  13:12:51,239 - #3 pi
INFO  13:12:51,239 - #41 +
INFO  13:12:51,239 - #9 3
INFO  13:12:51,239 - #20 )
INFO  13:12:51,239 - #41 +
INFO  13:12:51,240 - #3 e
INFO  13:12:51,240 - #42 *
INFO  13:12:51,240 - #9 2
INFO  13:12:51,240 - #7 ;
INFO  13:12:51,240 - #3 c
INFO  13:12:51,240 - #34 .
INFO  13:12:51,240 - #3 theA
INFO  13:12:51,240 - #8 =
INFO  13:12:51,240 - #3 a
INFO  13:12:51,240 - #7 ;
INFO  13:12:51,240 - #3 c
INFO  13:12:51,240 - #34 .
INFO  13:12:51,240 - #3 x
INFO  13:12:51,241 - #8 =
INFO  13:12:51,241 - #33 new
INFO  13:12:51,241 - #3 int
INFO  13:12:51,241 - #14 [
INFO  13:12:51,241 - #9 5
INFO  13:12:51,241 - #15 ]
INFO  13:12:51,241 - #7 ;
INFO  13:12:51,241 - #3 x
INFO  13:12:51,241 - #8 =
INFO  13:12:51,241 - #33 new
INFO  13:12:51,241 - #3 int
INFO  13:12:51,242 - #14 [
INFO  13:12:51,242 - #9 3
INFO  13:12:51,242 - #15 ]
INFO  13:12:51,242 - #7 ;
INFO  13:12:51,242 - #3 i
INFO  13:12:51,242 - #8 =
INFO  13:12:51,242 - #9 0
INFO  13:12:51,242 - #7 ;
INFO  13:12:51,242 - #27 read
INFO  13:12:51,242 - #19 (
INFO  13:12:51,242 - #3 c
INFO  13:12:51,242 - #34 .
INFO  13:12:51,242 - #3 i
INFO  13:12:51,242 - #20 )
INFO  13:12:51,242 - #7 ;
INFO  13:12:51,243 - #24 while
INFO  13:12:51,243 - #19 (
INFO  13:12:51,243 - #3 i
INFO  13:12:51,243 - #39 <
INFO  13:12:51,243 - #9 5
INFO  13:12:51,243 - #20 )
INFO  13:12:51,243 - #4 {
INFO  13:12:51,243 - #27 read
INFO  13:12:51,243 - #19 (
INFO  13:12:51,243 - #3 c
INFO  13:12:51,243 - #34 .
INFO  13:12:51,243 - #3 x
INFO  13:12:51,243 - #14 [
INFO  13:12:51,243 - #3 i
INFO  13:12:51,243 - #15 ]
INFO  13:12:51,244 - #20 )
INFO  13:12:51,244 - #7 ;
INFO  13:12:51,244 - #27 read
INFO  13:12:51,244 - #19 (
INFO  13:12:51,244 - #3 c
INFO  13:12:51,244 - #34 .
INFO  13:12:51,244 - #3 theA
INFO  13:12:51,244 - #34 .
INFO  13:12:51,244 - #3 x
INFO  13:12:51,244 - #14 [
INFO  13:12:51,244 - #3 i
INFO  13:12:51,244 - #15 ]
INFO  13:12:51,244 - #20 )
INFO  13:12:51,244 - #7 ;
INFO  13:12:51,244 - #3 i
INFO  13:12:51,244 - #21 ++
INFO  13:12:51,244 - #7 ;
INFO  13:12:51,245 - #5 }
INFO  13:12:51,245 - #29 print
INFO  13:12:51,245 - #19 (
INFO  13:12:51,245 - #3 c
INFO  13:12:51,245 - #34 .
INFO  13:12:51,245 - #3 getValue
INFO  13:12:51,245 - #19 (
INFO  13:12:51,245 - #3 c
INFO  13:12:51,245 - #34 .
INFO  13:12:51,245 - #3 theA
INFO  13:12:51,245 - #34 .
INFO  13:12:51,245 - #3 x
INFO  13:12:51,245 - #14 [
INFO  13:12:51,245 - #9 0
INFO  13:12:51,245 - #15 ]
INFO  13:12:51,245 - #20 )
INFO  13:12:51,245 - #20 )
INFO  13:12:51,245 - #7 ;
INFO  13:12:51,246 - #3 c
INFO  13:12:51,246 - #34 .
INFO  13:12:51,246 - #3 theA
INFO  13:12:51,246 - #34 .
INFO  13:12:51,246 - #3 x
INFO  13:12:51,246 - #14 [
INFO  13:12:51,246 - #9 0
INFO  13:12:51,246 - #15 ]
INFO  13:12:51,246 - #8 =
INFO  13:12:51,246 - #9 1
INFO  13:12:51,246 - #7 ;
INFO  13:12:51,246 - #23 if
INFO  13:12:51,246 - #19 (
INFO  13:12:51,246 - #3 i
INFO  13:12:51,247 - #35 ==
INFO  13:12:51,247 - #9 1
INFO  13:12:51,247 - #20 )
INFO  13:12:51,247 - #3 i
INFO  13:12:51,247 - #8 =
INFO  13:12:51,247 - #3 c
INFO  13:12:51,247 - #34 .
INFO  13:12:51,247 - #3 met
INFO  13:12:51,247 - #19 (
INFO  13:12:51,247 - #9 1
INFO  13:12:51,247 - #20 )
INFO  13:12:51,247 - #41 +
INFO  13:12:51,247 - #3 b
INFO  13:12:51,247 - #34 .
INFO  13:12:51,247 - #3 getValue
INFO  13:12:51,247 - #19 (
INFO  13:12:51,247 - #3 c
INFO  13:12:51,247 - #34 .
INFO  13:12:51,248 - #3 x
INFO  13:12:51,248 - #14 [
INFO  13:12:51,248 - #9 0
INFO  13:12:51,248 - #15 ]
INFO  13:12:51,248 - #20 )
INFO  13:12:51,248 - #41 +
INFO  13:12:51,248 - #9 5
INFO  13:12:51,248 - #42 *
INFO  13:12:51,248 - #9 8
INFO  13:12:51,248 - #7 ;
INFO  13:12:51,248 - #3 b
INFO  13:12:51,248 - #34 .
INFO  13:12:51,248 - #3 getValue
INFO  13:12:51,249 - #19 (
INFO  13:12:51,249 - #3 b
INFO  13:12:51,249 - #34 .
INFO  13:12:51,249 - #3 y
INFO  13:12:51,249 - #14 [
INFO  13:12:51,249 - #3 i
INFO  13:12:51,249 - #15 ]
INFO  13:12:51,249 - #20 )
INFO  13:12:51,249 - #7 ;
INFO  13:12:51,249 - #3 b
INFO  13:12:51,249 - #34 .
INFO  13:12:51,249 - #3 pr
INFO  13:12:51,249 - #19 (
INFO  13:12:51,250 - #20 )
INFO  13:12:51,250 - #7 ;
INFO  13:12:51,250 - #3 i
INFO  13:12:51,250 - #8 =
INFO  13:12:51,250 - #9 4
INFO  13:12:51,250 - #42 *
INFO  13:12:51,250 - #19 (
INFO  13:12:51,250 - #9 5
INFO  13:12:51,250 - #41 +
INFO  13:12:51,250 - #9 6
INFO  13:12:51,251 - #41 +
INFO  13:12:51,251 - #3 i
INFO  13:12:51,251 - #20 )
INFO  13:12:51,251 - #41 +
INFO  13:12:51,251 - #3 i
INFO  13:12:51,251 - #41 +
INFO  13:12:51,251 - #3 met
INFO  13:12:51,251 - #19 (
INFO  13:12:51,251 - #9 2
INFO  13:12:51,251 - #20 )
INFO  13:12:51,251 - #7 ;
INFO  13:12:51,251 - #3 chr
INFO  13:12:51,251 - #19 (
INFO  13:12:51,252 - #9 1
INFO  13:12:51,252 - #20 )
INFO  13:12:51,252 - #7 ;
INFO  13:12:51,252 - #3 i
INFO  13:12:51,252 - #8 =
INFO  13:12:51,252 - #3 ord
INFO  13:12:51,252 - #19 (
INFO  13:12:51,252 - #10 1
INFO  13:12:51,252 - #20 )
INFO  13:12:51,252 - #7 ;
INFO  13:12:51,252 - #29 print
INFO  13:12:51,252 - #19 (
INFO  13:12:51,252 - #9 4
INFO  13:12:51,252 - #13 ,
INFO  13:12:51,252 - #9 1
INFO  13:12:51,253 - #20 )
INFO  13:12:51,253 - #7 ;
INFO  13:12:51,253 - #3 a
INFO  13:12:51,253 - #8 =
INFO  13:12:51,253 - #3 b
INFO  13:12:51,253 - #7 ;
INFO  13:12:51,253 - #23 if
INFO  13:12:51,253 - #19 (
INFO  13:12:51,253 - #11 true
ERROR 13:12:51,253 - 
Sintaksna greska
INFO  13:12:51,253 - #20 )
INFO  13:12:51,253 - #3 i
INFO  13:12:51,253 - #21 ++
INFO  13:12:51,253 - #7 ;
ERROR 13:12:51,253 - [Logicki izraz] Izvrsen oporavak do ) u liniji 105
INFO  13:12:51,253 - #24 while
INFO  13:12:51,254 - #19 (
INFO  13:12:51,254 - #3 str2
INFO  13:12:51,254 - #35 ==
INFO  13:12:51,254 - #12 kraj
INFO  13:12:51,254 - #30 ||
INFO  13:12:51,254 - #3 str1
INFO  13:12:51,254 - #35 ==
INFO  13:12:51,254 - #12 kraj
INFO  13:12:51,254 - #20 )
INFO  13:12:51,254 - #4 {
INFO  13:12:51,254 - #3 c
INFO  13:12:51,254 - #34 .
INFO  13:12:51,254 - #3 theA
INFO  13:12:51,254 - #34 .
INFO  13:12:51,254 - #3 x
INFO  13:12:51,254 - #14 [
INFO  13:12:51,254 - #3 i
INFO  13:12:51,254 - #15 ]
INFO  13:12:51,254 - #8 =
INFO  13:12:51,254 - #3 a
INFO  13:12:51,254 - #34 .
INFO  13:12:51,255 - #3 x
INFO  13:12:51,255 - #14 [
INFO  13:12:51,255 - #3 i
INFO  13:12:51,255 - #15 ]
INFO  13:12:51,255 - #7 ;
INFO  13:12:51,255 - #23 if
INFO  13:12:51,255 - #19 (
INFO  13:12:51,255 - #3 b
INFO  13:12:51,255 - #34 .
INFO  13:12:51,255 - #3 theAA
INFO  13:12:51,255 - #34 .
INFO  13:12:51,255 - #3 y
INFO  13:12:51,255 - #14 [
INFO  13:12:51,255 - #3 i
INFO  13:12:51,255 - #15 ]
INFO  13:12:51,255 - #35 ==
INFO  13:12:51,255 - #3 c
INFO  13:12:51,255 - #34 .
INFO  13:12:51,255 - #3 theA
INFO  13:12:51,255 - #34 .
INFO  13:12:51,255 - #3 x
INFO  13:12:51,255 - #14 [
INFO  13:12:51,256 - #3 i
INFO  13:12:51,256 - #15 ]
INFO  13:12:51,256 - #31 &&
INFO  13:12:51,256 - #3 c
INFO  13:12:51,256 - #34 .
INFO  13:12:51,256 - #3 pr1
INFO  13:12:51,256 - #19 (
INFO  13:12:51,256 - #20 )
INFO  13:12:51,256 - #20 )
INFO  13:12:51,256 - #25 break
INFO  13:12:51,256 - #7 ;
INFO  13:12:51,256 - #27 read
INFO  13:12:51,256 - #19 (
INFO  13:12:51,256 - #3 str1
INFO  13:12:51,256 - #20 )
INFO  13:12:51,256 - #7 ;
INFO  13:12:51,256 - #27 read
INFO  13:12:51,256 - #19 (
INFO  13:12:51,256 - #3 str2
INFO  13:12:51,256 - #20 )
INFO  13:12:51,256 - #7 ;
INFO  13:12:51,256 - #5 }
INFO  13:12:51,260 - #5 }
INFO  13:12:51,260 - #5 }
ERROR 13:12:51,260 - Parsiranje nije uspesno zavrseno!
